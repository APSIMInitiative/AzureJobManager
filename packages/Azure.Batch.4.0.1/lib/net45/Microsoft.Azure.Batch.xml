<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Batch</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeAgentSkusEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListSubtasksEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateReference">
            <summary>
            Represents a certificate object of the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor(Microsoft.Azure.Batch.Certificate)">
            <summary>
            Instantiates an instance of CertificateReference with default property values.  
            Values for the Thumbprint and ThumbprintAlgorithm properties are taken from the provided base certificate.
            </summary>
            <param name="baseCertificate">Provides initial values for the CertificateReference properties Thumbprint and ThumbprintAlgorithm.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CertificateReference"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.StoreLocation">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Azure.Batch.Common.CertStoreLocation"/> for the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.StoreName">
            <summary>
            Gets or sets the name of the name of the certificate store. Besides <see cref="T:System.Security.Cryptography.X509Certificates.StoreName"/> 
            the value can have a custom store name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.Thumbprint">
            <summary>
            Gets or sets the certificate thumbprint property of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.ThumbprintAlgorithm">
            <summary>
            Gets or sets the certificate thumbprint algorithm. Currently sha1 is the only supported algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateReference.Visibility">
            <summary>
            Gets or sets the set of users that can get to the private data of the installed certificate. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#CertificateReference}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CertificateReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CertificateReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateReference.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.CertificateReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OSType">
            <summary>
            Specifies the Operation System type.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OSType.Linux">
            <summary>
            Linux OS Family.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OSType.Windows">
            <summary>
            Windows OS Family.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.OSType.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AddTaskStatus">
            <summary>
            The status of an individual task in an add task collection operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.Success">
            <summary>
            The task addition was successful.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.ClientError">
            <summary>
            The task addition failed due to user error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.ServerError">
            <summary>
            The task addition failed due to an unforseen server error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AddTaskStatus.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ExponentialRetry">
            <summary>
            Represents a retry policy that performs a specified number of retries, using an exponential backoff scheme to determine the interval between retries. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.ExponentialRetry.DeltaBackoff">
            <summary>
            Gets the backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.ExponentialRetry.MaximumRetries">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.ExponentialRetry"/> class using the specified delta and maximum number of retries.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries)</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.ExponentialRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.LinearRetry">
            <summary>
            Represents a retry policy that performs a specified number of retries, using a specified fixed time interval between retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.LinearRetry.DeltaBackoff">
            <summary>
            Gets the backoff interval between retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.LinearRetry.MaximumRetries">
            <summary>
            Gets the maximum number of retry attempts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.LinearRetry.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.LinearRetry"/> class using the specified delta and maximum number of retries.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries.</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.LinearRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RequestInformation">
            <summary>
            A set of common information associated with a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.AzureError">
            <summary>
            Gets or sets the Azure Error information which contains detailed metadata around 
            the specific error encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.BatchError">
            <summary>
            Gets or sets the Batch Error information which contains detailed metadata around 
            the specific error encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.HttpStatusMessage">
            <summary>
            Gets or sets the HTTP status message for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.HttpStatusCode">
            <summary>
            Gets or sets the HTTP status code for the request.
            In cases where an HTTP response was never recieved (for example on client side timeout) this property is null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.ClientRequestId">
            <summary>
            Gets or sets the client-request-id set by the client.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestInformation.ServiceRequestId">
            <summary>
            Gets or sets the service request ID for this request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RequestResult">
            <summary>
            Represents the result of a physical request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.RequestInformation">
            <summary>
            Gets information about the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.Exception">
            <summary>
            Gets the exception hit during execution of the request, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RequestResult.Task">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.Task"/> object associated with the request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.RequestResult.#ctor(Microsoft.Azure.Batch.Common.RequestInformation,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/>.
            </summary>
            <param name="requestInformation">The information associated with the individual request.</param>
            <param name="exception">The exception hit during the execution of the request (or null if there was no exception).</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.RetryDecision">
            <summary>
            Represents a decision made by an <see cref="T:Microsoft.Azure.Batch.Common.IRetryPolicy"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry">
            <summary>
            A retry decision with <see cref="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry"/> set to false
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.RetryDecision.RetryWithDelay(System.TimeSpan)">
            <summary>
            Create a new <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> with the specified delay before the next retry.
            </summary>
            <param name="retryDelay">The duration to wait before performing the retry.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object with the specified retry delay and <see cref="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry"/> set to true.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RetryDecision.RetryDelay">
            <summary>
            Gets the delay before the next retry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.RetryDecision.ShouldRetry">
            <summary>
            Gets whether a retry should be performed or not.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings">
            <summary>
            Error code strings from Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AccountIsDisabled">
            <summary>
            The specified account is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ActiveJobAndScheduleQuotaReached">
            <summary>
            The account has reached its quota of active jobs and job schedules.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ApplicationNotFound">
            <summary>
            The specified application does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScalingFormulaSyntaxError">
            <summary>
            An automatic scaling formula has a syntax error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScaleFormulaTooLong">
            <summary>
            An automatic scaling formula is too long. The maximum length is 8192 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AutoScaleTooManyRequestsToEnable">
            <summary>
            Enable AutoScale requests for the same pool must be separated by at least 30 seconds. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateBeingDeleted">
            <summary>
            A certificate operation was attempted which is not permitted when the certificate is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateExists">
            <summary>
            The certificate you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateNotFound">
            <summary>
            The certificate on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateStateActive">
            <summary>
            A certificate operation was attempted which is not permitted when the certificate is active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.CertificateStateDeleteFailed">
            <summary>
            A certificate could not be deleted because it is still in use.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.FileNotFound">
            <summary>
            A node file requested from a task or compute node was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidApplicationPackageReferences">
            <summary>
            One or more application package references could not be satisfied. This occurs if the application 
            id or version does not exist or is not active, or if the reference did not specify a version and 
            there is no default version configured.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidCertificateReferences">
            <summary>
            A pool specification specifies one or more invalid certificates (for example, certificates that are
            not present in the Batch account).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidConstraintValue">
            <summary>
            A value in a job or task constraint is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRestAPIForAccountSetting">
            <summary>
            There is a conflict between the REST API being used and the account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobBeingDeleted">
            <summary>
            A job operation was attempted which is not permitted when the job is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobBeingTerminated">
            <summary>
            A job operation was attempted which is not permitted when the job is in the process of being terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobCompleted">
            <summary>
            A job operation was attempted which is not permitted when the job has been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobNotActive">
            <summary>
            A job operation was attempted which is not permitted when the job is not active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobExists">
            <summary>
            The specified job exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobPreparationTaskNotRunOnNode">
            <summary>
            A Job Preparation task was not run on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobPreparationTaskNotSpecified">
            <summary>
            The specified job does not have a Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobReleaseTaskNotRunOnNode">
            <summary>
            A Job Release task was not run on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobReleaseTaskNotSpecified">
            <summary>
            The specified job does not have a Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobNotFound">
            <summary>
            The job on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.IOError">
            <summary>
            An I/O error occurred while trying to access a resource within the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OperationInvalidForCurrentState">
            <summary>
            The specified operation is not valid for the current state of the resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionDisabled">
            <summary>
            The specified Azure Guest OS version is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionExpired">
            <summary>
            The specified Azure Guest OS version is expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OSVersionNotFound">
            <summary>
            The specified Azure Guest OS version was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangePriority">
            <summary>
            A job priority was specified which was outside the permitted range of -1000 to 1000.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PathNotFound">
            <summary>
            A file path was not found on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingDeleted">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingResized">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being resized.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolBeingCreated">
            <summary>
            A pool operation was attempted which is not permitted when the pool is in the process of being created.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolExists">
            <summary>
            The pool you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolNotEligibleForOSVersionUpgrade">
            <summary>
            The specified pool is not eligible for an operating system version upgrade.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolNotFound">
            <summary>
            The pool on which an operation was attempted is not present in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolQuotaReached">
            <summary>
            The account has reached its quota of pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.PoolVersionEqualsUpgradeVersion">
            <summary>
            The pool is already on the operating system version to which it was asked to upgrade.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.StorageAccountNotFound">
            <summary>
            A requested storage account was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskCompleted">
            <summary>
            A task operation was attempted which is not permitted when the task has been completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskDependenciesNotSpecifiedOnJob">
            <summary>
            A task was specified as depending on other tasks, but the job did not specify that it would use task dependencies.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskDependencyListTooLong">
            <summary>
            A task was specified as depending on other tasks, but the list of dependencies was too long to be stored.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskDependencyRangesTooLong">
            <summary>
            A task was specified as depending on other tasks, but the list of task id ranges was too long to be stored.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskFilesUnavailable">
            <summary>
            The node files for a task are not available, for example because the retention period has expired.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskFilesCleanedup">
            <summary>
            The files of the specified task are cleaned up.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskExists">
            <summary>
            The task you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskIdSameAsJobPreparationTask">
            <summary>
            The task id is the same as that of the Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskIdSameAsJobReleaseTask">
            <summary>
            The task id is the same as that of the Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.TaskNotFound">
            <summary>
            The task on which an operation was attempted is not present in the job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingCreated">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being created.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingStarted">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being started.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingRebooted">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being rebooted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeBeingReimaged">
            <summary>
            A compute node operation was attempted which is not permitted when the node is in the process of being reimaged.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeCountsMismatch">
            <summary>
            The node counts do not match.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeNotFound">
            <summary>
            The compute node on which an operation was attempted is not present in the given pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeStateUnusable">
            <summary>
            A compute node operation was attempted which is not permitted when the node is unusable.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeUserExists">
            <summary>
            The compute node user account you are attempting to add already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeUserNotFound">
            <summary>
            The compute node user account on which an operation was attempted does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NodeAlreadyInTargetSchedulingState">
            <summary>
            The specified compute node is already in the target scheduling state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UpgradePoolVersionConflict">
            <summary>
            The pool is already upgrading to a different operating system version.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedConstraint">
            <summary>
            A requested job or task constraint is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedRequestVersion">
            <summary>
            The specified version of the Batch REST API is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleBeingDeleted">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is in the process of being deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleBeingTerminated">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is in the process of being terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleCompleted">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule has completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleDisabled">
            <summary>
            A job schedule operation was attempted which is not permitted when the schedule is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleExists">
            <summary>
            The job schedule you are attempting to add already exists in the Batch account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleNotFound">
            <summary>
            The job schedule on which an operation was attempted does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobDisabled">
            <summary>
            The specified job is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobWithSameIdExists">
            <summary>
            A job with the specified job schedule id exists. Job and job schedule cannot have the same id.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.JobScheduleWithSameIdExists">
            <summary>
            A job schedule with the specified job id exists. Job and job schedule cannot have the same id.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.AuthenticationFailed">
            <summary>
            The Batch service failed to authenticate the request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ConditionNotMet">
            <summary>
            A read operation included a HTTP conditional header, and the condition was not met.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.EmptyMetadataKey">
            <summary>
            An add or update request specified a metadata item whose key is an empty string.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.HostInformationNotPresent">
            <summary>
            The host information was missing from the HTTP request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InsufficientAccountPermissions">
            <summary>
            The account being accessed does not have sufficient permissions to execute this operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InternalError">
            <summary>
            An internal error occurred in the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidAuthenticationInfo">
            <summary>
            The authentication credentials were not provided in the correct format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidAutoScalingSettings">
            <summary>
            The specified auto-scale settings are not valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidHeaderValue">
            <summary>
            The value of one of the HTTP headers was in an incorrect format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidHttpVerb">
            <summary>
            The Batch service did not recognise the HTTP verb.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidInput">
            <summary>
            One of the request inputs is not valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidMetadata">
            <summary>
            An add or update request specified a metadata item which contains characters that are not permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidPropertyValue">
            <summary>
            The value of a property in the HTTP request body is invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRequestBody">
            <summary>
            The HTTP request body is not syntactically valid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidQueryParameterValue">
            <summary>
            The HTTP request URI contained invalid value for one of the query parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidRange">
            <summary>
            The specified byte range is invalid for the given resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.InvalidUri">
            <summary>
            The HTTP request URI was invalid.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MetadataTooLarge">
            <summary>
            The size of the metadata exceeds the maximum permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingContentLengthHeader">
            <summary>
            The HTTP Content-Length header was not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredHeader">
            <summary>
            A required HTTP header was not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredProperty">
            <summary>
            A required property was not specified in the HTTP request body.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MissingRequiredQueryParameter">
            <summary>
            A required query parameter was not specified in the URL.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.MultipleConditionHeadersNotSupported">
            <summary>
            Multiple condition headers are not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.NotImplemented">
            <summary>
            The operation is not implemented.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangeInput">
            <summary>
            One of the request inputs is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OutOfRangeQueryParameterValue">
            <summary>
            A query parameter in the request URL is out of range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.OperationTimedOut">
            <summary>
            The operation could not be completed within the permitted time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.RequestBodyTooLarge">
            <summary>
            The size of the HTTP request body exceeds the maximum permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.RequestUrlFailedToParse">
            <summary>
            The Batch service could not parse the request URL.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceNotFound">
            <summary>
            The specified resource does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceAlreadyExists">
            <summary>
            The specified resource already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ResourceTypeMismatch">
            <summary>
            The resource does not match the expected type.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.ServerBusy">
            <summary>
            The Batch service is currently unable to receive requests.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHeader">
            <summary>
            One of the HTTP headers specified in the request is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHttpVerb">
            <summary>
            The resource does not support the specified HTTP verb.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedHttpVersion">
            <summary>
            The Batch service does not support the specified version of the HTTP protocol.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedProperty">
            <summary>
            One of the properties specified in the HTTP request body is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings.UnsupportedQueryParameter">
            <summary>
            One of the query parameters specified in the URL is not supported.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes">
            <summary>
            Contains error codes specific to pool resize errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AccountCoreQuotaReached">
            <summary>
            The account has reached its quota of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AllocationFailed">
            <summary>
            An error occurred while trying to allocate the desired number of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.AllocationTimedout">
            <summary>
            The Batch service was unable to allocate the desired number of compute nodes within the resize timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.RemoveNodesFailed">
            <summary>
            An error occurred when removing compute nodes from the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.ResizeStopped">
            <summary>
            The user stopped the resize operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes.Unknown">
            <summary>
            The reason for the failure is not known.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes">
            <summary>
            Contains error codes specific to job scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.AutoPoolCreationFailedWithQuotaReached">
            <summary>
            The Batch service could not create an auto pool to run the job on, because the account
            has reached its quota of compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidApplicationPackageReferencesInAutoPool">
            <summary>
            The auto pool specification for the job has one or more application package references which could not be satisfied.  
            This occurs if the application id or version does not exist or is not active, or if the reference did not specify a
            version and there is no default version configured.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidAutoScaleFormulaInAutoPool">
            <summary>
            The auto pool specification for the job has an invalid automatic scaling formula.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.InvalidCertificatesInAutoPool">
            <summary>
            The auto pool specification for the job has an invalid certificate reference (for example, to a
            certificate that does not exist).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes.Unknown">
            <summary>
            The reason for the scheduling error is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes">
            <summary>
            Contains error codes specific to task scheduling errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobAccessDenied">
            <summary>
            Access was denied when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobDownloadMiscError">
            <summary>
            An error occurred when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobDownloadTimedOut">
            <summary>
            A timeout occurred when downloading a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.BlobNotFound">
            <summary>
            A resource file required for the task does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.CommandLaunchFailed">
            <summary>
            An error occurred when launching the task's command line.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.CommandProgramNotFound">
            <summary>
            The program specified in the task's command line was not found.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.DiskFull">
            <summary>
            The compute node disk ran out of space when downloading the resource files required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.ResourceDirectoryCreateFailed">
            <summary>
            The compute node could not create a directory for the task's resource files.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.ResourceFileCreateFailed">
            <summary>
            The compute node could not create a local file when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.ResourceFileWriteFailed">
            <summary>
            The compute node could not write to a local file when trying to download a resource file required for the task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.TaskEnded">
            <summary>
            The task ended.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes.Unknown">
            <summary>
            The reason for the scheduling error is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.IRetryPolicy">
            <summary>
            Represents a retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.IRetryPolicy.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. 
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.OperationContext">
            <summary>
            Represents the context for a request to the Batch service and provides additional information about its execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.OperationContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.OperationContext.RequestResults">
            <summary>
            Gets or sets the list of request results for the current operation.  Each <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/> corresponds to one
            request sent to the server.  There may be more than one item in this list in the case of retries.
            </summary>
            <value>An <see cref="T:System.Collections.IList"/> object that contains <see cref="T:Microsoft.Azure.Batch.Common.RequestResult"/> objects that represent the request results created by the current operation.</value>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.NoRetry">
            <summary>
            Represents a retry policy that performs no retries.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.NoRetry.ShouldRetryAsync(System.Exception,Microsoft.Azure.Batch.Common.OperationContext)">
            <summary>
            Determines if the operation should be retried and how long to wait until the next retry. This
            implementation always returns <see cref="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry"/>.
            </summary>
            <param name="exception">An <see cref="T:System.Exception"/> object that represents the last exception encountered.</param>
            <param name="operationContext">An <see cref="T:Microsoft.Azure.Batch.Common.OperationContext"/> object for tracking the current operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Common.RetryDecision"/> object which specifies if a retry should be performed.This
            implementation always returns <see cref="F:Microsoft.Azure.Batch.Common.RetryDecision.NoRetry"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.AllocationState">
            <summary>
            Indicates whether a pool is resizing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Steady">
            <summary>
            The pool is not resizing. There are no changes to the number of
            nodes in the pool in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing">
            <summary>
            The pool is resizing; that is, compute nodes are being added to or
            removed from the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping">
            <summary>
            The pool was resizing, but the user has requested that the resize
            be stopped, but the stop request has not yet been completed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateFormat">
            <summary>
            Certificate format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Pfx">
            <summary>
            Personal Information Exchange (PKCS #12) format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Cer">
            <summary>
            X.509 certificate format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateFormat.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateState">
            <summary>
            The state of a certificate
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Active">
            <summary>
            The certificate is available for use in pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting">
            <summary>
            The user has requested that the certificate be deleted, but the
            delete operation has not yet completed. You may not reference the
            certificate when creating or updating pools .
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed">
            <summary>
            The user requested that the certificate be deleted, but there are
            pools that still have references to the certificate, or it is
            still installed on one or more compute nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertificateVisibility">
            <summary>
            Specifies which user accounts on a compute node should have access to
            the private data of a certificate.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.None">
            <summary>
            The certificate has no visibility.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.StartTask">
            <summary>
            The user account under which the start task is run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.Task">
            <summary>
            The accounts under which job tasks are run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.RemoteUser">
            <summary>
            The accounts under which users remotely access the node (using
            Remote Desktop).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertificateVisibility.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.CertStoreLocation">
            <summary>
            The location of a certificate store on a pool's compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.CurrentUser">
            <summary>
            The X.509 certificate store used by the current user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.LocalMachine">
            <summary>
            The X.509 certificate store assigned to the local machine.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.CertStoreLocation.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption">
            <summary>
            Specifies when compute nodes may be removed from a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Remove nodes as soon as tasks have been
            terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Remove nodes
            as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Remove nodes when all tasks have completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Remove nodes when all task retention periods have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeFillType">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Spread">
            <summary>
            Tasks should be assigned evenly across all nodes in the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Pack">
            <summary>
            As many tasks as possible (maxTasksPerNode) should be assigned to
            each node in the pool before any tasks are assigned to the next
            node in the pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeFillType.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption">
            <summary>
            Specifies when to reboot a compute node and what to do with currently
            running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Restart the compute node as soon as tasks
            have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Restart the
            compute node as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Restart the compute node when all tasks have
            completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Restart the compute node when all task retention periods
            have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption">
            <summary>
            Specifies when to reimage the compute node and what to do with
            currently running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled. Reimage the compute node as soon as tasks
            have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again. Reimage the
            compute node as soon as tasks have been terminated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting. Reimage the compute node when all tasks have
            completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.RetainedData">
            <summary>
            Allow currently running tasks to complete, then wait for all task
            data retention periods to expire. Schedule no new tasks while
            waiting. Reimage the compute node when all task retention periods
            have expired.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.ComputeNodeState">
            <summary>
            The state of a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle">
            <summary>
            The compute node is not currently running a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Rebooting">
            <summary>
            The compute node is rebooting.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Reimaging">
            <summary>
            The compute node is being reimaged.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running">
            <summary>
            The compute node is running one or more tasks (other than the start
            task).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unusable">
            <summary>
            The compute node cannot be used for task execution due to errors.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Creating">
            <summary>
            The Batch service has obtained the underlying virtual machine from
            Azure Compute, but it has not yet started to join a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Starting">
            <summary>
            The Batch service is starting on the underlying virtual machine.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.WaitingForStartTask">
            <summary>
            The start task has started running on the compute node, but
            waitForSuccess is set and the start task has not yet completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.StartTaskFailed">
            <summary>
            The start task has failed on the compute node (and exhausted all
            retries), and waitForSuccess is set.  The node is not usable for
            running tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Unknown">
            <summary>
            The Batch service has lost contact with the compute node, and does
            not know its true state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.LeavingPool">
            <summary>
            The compute node is leaving the pool, either because the user
            explicitly removed it or because the pool is resizing or
            autoscaling down.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Offline">
            <summary>
            The Batch service will not schedule any new tasks on the compute
            node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption">
            <summary>
            Specifies what to do with currently running tasks when disable task
            scheduling on the compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.TaskCompletion">
            <summary>
            Allow currently running tasks to complete. Schedule no new tasks
            while waiting.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.DisableJobOption">
            <summary>
            Specifies what to do with active tasks during a disable job operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Requeue">
            <summary>
            Terminate running tasks and requeue them. The tasks will run again
            when the job is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Terminate">
            <summary>
            Terminate running tasks. The tasks will not run again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.DisableJobOption.Wait">
            <summary>
            Allow currently running tasks to complete.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobPreparationTaskState">
            <summary>
            The state of a Job Preparation task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Running">
            <summary>
            The task is currently running (including retrying).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobPreparationTaskState.Completed">
            <summary>
            The task has exited with exit code 0, or the task has exhausted its
            retry limit, or the Batch service was unable to start the task due
            to scheduling errors.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobReleaseTaskState">
            <summary>
            The state of a Job Release task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Running">
            <summary>
            The task is currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobReleaseTaskState.Completed">
            <summary>
            The task has exited, or the Batch service was unable to start the
            task due to scheduling errors.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobScheduleState">
            <summary>
            The state of a job schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active">
            <summary>
            The job schedule is active and will create jobs as per its schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Completed">
            <summary>
            The schedule has terminated, either by reaching its end time or by
            the user terminating it explicitly.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Disabled">
            <summary>
            The user has disabled the schedule. The scheduler will not initiate
            any new jobs will on this schedule, but any existing active job
            will continue to run.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating">
            <summary>
            The schedule has no more work to do, or has been explicitly
            terminated by the user, but the termination operation is still in
            progress. The scheduler will not initiate any new jobs for this
            schedule, nor is any existing job active.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting">
            <summary>
            The user has requested that the schedule be deleted, but the delete
            operation is still in progress. The scheduler will not initiate
            any new jobs for this schedule, but any existing active job will
            continue to run. The schedule will be deleted when the existing
            job completes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.JobState">
            <summary>
            The state of job
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Active">
            <summary>
            The job is available to have tasks scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Disabling">
            <summary>
            A user has requested that the job be disabled, but the disable
            operation is still in progress (for example, waiting for tasks to
            terminate).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Disabled">
            <summary>
            A user has disabled the job. No tasks are running, and no new tasks
            will be scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Enabling">
            <summary>
            A user has requested that the job be enabled, but the enable
            operation is still in progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Terminating">
            <summary>
            The job is about to complete, either because a Job Manager task has
            completed or because the user has terminated the job, but the
            terminate operation is still in progress (for example, because Job
            Release tasks are running).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Completed">
            <summary>
            All tasks have terminated, and the system will not accept any more
            tasks or any further changes to the job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.JobState.Deleting">
            <summary>
            A user has requested that the job be deleted, but the delete
            operation is still in progress (for example, because the system is
            still terminating running tasks).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolLifetimeOption">
            <summary>
            Specifies the minimum lifetime of created auto pools, and how multiple
            jobs on a schedule are assigned to pools.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.JobSchedule">
            <summary>
            The pool exists for the lifetime of the job schedule.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.Job">
            <summary>
            The pool exists for the lifetime of the job to which it is
            dedicated.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolLifetimeOption.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.PoolState">
            <summary>
            The state of a pool.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Active">
            <summary>
            The pool is fully available to run tasks.  A pool enters this state
            when it is created and remains in this state until it is deleted.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Deleting">
            <summary>
            The user has requested that the pool be deleted, but the delete
            operation has not yet completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading">
            <summary>
            The user has requested that the operating system of the pool's
            nodes be upgraded, but the upgrade operation has not yet completed
            (that is, some nodes in the pool have not yet been upgraded).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.SchedulingErrorCategory">
            <summary>
            The category of a task scheduling error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.UserError">
            <summary>
            The error was in the task specification provided by the user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.ServerError">
            <summary>
            The error occurred in the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingErrorCategory.Unmapped">
            <summary>
            The service reported an option that is not recognized by this
            version of the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.SchedulingState">
            <summary>
            Specifies whether the compute node should be available for task
            scheduling.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingState.Enabled">
            <summary>
            The compute node is available for task scheduling.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.SchedulingState.Disabled">
            <summary>
            The compute node is not available for task scheduling.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.StartTaskState">
            <summary>
            The state of a start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Running">
            <summary>
            The start task is currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.StartTaskState.Completed">
            <summary>
            The start task has exited with exit code 0, or the start task has
            failed and the retry limit has reached, or the start task process
            did not run due to scheduling errors.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.TaskState">
            <summary>
            The state of a task.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Active">
            <summary>
            The task is queued and able to run, but is not currently assigned
            to a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Preparing">
            <summary>
            The task has been assigned to a compute node, but is waiting for a
            required Job Preparation task to complete on the node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Running">
            <summary>
            The task is running on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Common.TaskState.Completed">
            <summary>
            The task is no longer eligible to run, usually because the task has
            finished successfully, or the task has finished unsuccessfully and
            has exhausted its retry limit.  A task is also marked as completed
            if an error occurred launching the task, or when the task has been
            terminated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Common.BatchException">
            <summary>
            Represents an exception for the Windows Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Common.BatchException.RequestInformation">
            <summary>
            Gets information about the request which failed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.#ctor(Microsoft.Azure.Batch.Common.RequestInformation,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Common.BatchException"/> class by using the specified parameters.
            </summary>
            <param name="requestInformation">A <see cref="P:Microsoft.Azure.Batch.Common.BatchException.RequestInformation"/> object containing details about the request.</param>
            <param name="message">The exception message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.#ctor(Microsoft.Azure.Batch.Protocol.Models.BatchErrorException)">
            <summary>
            Constructs a <see cref="T:Microsoft.Azure.Batch.Common.BatchException"/> as a wrapper for a <see cref="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException"/>.
            </summary>
            <param name="batchErrorException">The exception to wrap.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Common.BatchException.ToString">
            <summary>
            Generates a string which describes the exception.
            </summary>
            <returns>A string that represents the exception.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler">
            <summary>
            A <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> which you can use to specify under what conditions an operation to
            add multiple tasks to a job should retry, terminate or be considered successful.
            </summary>
            <remarks>You do not need to specify this behavior explicitly; if you do not, a default behavior
            is used.  This behavior uses the <see cref="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.DefaultAddTaskCollectionResultHandler(Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken)"/>
            criteria.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.ResultHandler">
            <summary>
            Gets or sets the function that defines whether a particular Add Task operation is considered
            successful or unsuccessful, and whether it may be retried.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.#ctor(System.Func{Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken,Microsoft.Azure.Batch.AddTaskResultStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> class with the specified result handler function.
            </summary>
            <param name="resultHandler">A function that defines whether a particular Add Task operation is considered
            successful or unsuccessful, and whether it may be retried.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTaskCollectionResultHandler.DefaultAddTaskCollectionResultHandler(Microsoft.Azure.Batch.AddTaskResult,System.Threading.CancellationToken)">
            <summary>
            The default result handler for the <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior. This handler
            treats success and 'TaskExists' errors as successful, retries server errors (HTTP 5xx), and throws
            <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException"/> on client error (HTTP 4xx).
            </summary>
            <param name="addTaskResult">The result of a single Add Task operation.</param>
            <param name="cancellationToken">The cancellation token associated with the AddTaskCollection operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.AddTaskResultStatus"/> which indicates whether the <paramref name="addTaskResult"/>
            is classified as a success or as requiring a retry.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskResult">
            <summary>
            Result for a single task added as part of a collection of tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Task">
            <summary>
            Gets details of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.RetryCount">
            <summary>
            Gets the number of times the Add Task operation was retried for this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Error">
            <summary>
            Gets the error caught while attempting to add the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.ETag">
            <summary>
            Gets an ETag associated with a successfully added task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.LastModified">
            <summary>
            Gets the last modified time associated with a successfully added task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Location">
            <summary>
            Gets the URL of a successfully added task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.Status">
            <summary>
            Gets the status of the add task request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AddTaskResult.TaskId">
            <summary>
            Gets the id of the task which this result applies to.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskResultStatus">
            <summary>
            Used by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> to classify an <see cref="T:Microsoft.Azure.Batch.AddTaskResult"/> as successful or
            requiring a retry.
            </summary>
            <remarks>AddTaskResultStatus is not used to report non-retryable failure; a result handler should throw
            <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException"/> for that.</remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.AddTaskResultStatus.Success">
            <summary>
            Classifies the result as a success.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.AddTaskResultStatus.Retry">
            <summary>
            Classifies the result as requiring a retry.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTasksWorkflowManager">
            <summary>
            Manages the AddTasks workflow, performs multiple CloudTaskAdd requests, and handles retries/exception handling.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.#ctor(Microsoft.Azure.Batch.JobOperations,System.String,Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            Creates the AddTasks workflow manager with the specified arguments.
            </summary>
            <param name="jobOperations"></param>
            <param name="jobId"></param>
            <param name="parallelOptions">The parallel options associated with this operation.  If this is null, the default is used.</param>
            <param name="fileStagingArtifacts">File staging artifacts associated with this operation.  If the customer does not set this, it is unviewable by them.</param>
            <param name="bhMgr">The behavior manager.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.CheckForCancellationOrTimeoutAndThrow">
            <summary>
            Checks for operation cancelation or timeout, and throws the corresponding exception.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.IsWorkflowDone">
            <summary>
            Determines if the workflow has finished or not.
            </summary>
            <returns>True if the workflow has successfully completed, false if it has not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.StageFilesAndAddTasks(System.Collections.Generic.Dictionary{System.String,Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask},System.String)">
            <summary>
            Performs file staging and also issues the AddTaskCollection request for the set of tasks to add.
            </summary>
            <param name="tasksToAdd">The set of tasks to add.</param>
            <param name="namingFragment"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.ProcessProtocolAddTaskResults(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskAddResult},System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask})">
            <summary>
            Processes a set AddTaskResults from the protocol and groups them according to the results of the AddTaskResultHandler
            </summary>
            <param name="addTaskResults"></param>
            <param name="taskMap">Dictionary of task name to task object instance for the specific protocol response.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.ProcessPendingOperationResults">
            <summary>
            Waits for a pending operation to complete and throws if the operation failed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask">
            <summary>
            Internal task wrapper which tracks a tasks retry count and holds a reference to the protocol object and CloudTask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AddTasksWorkflowManager.TrackedCloudTask.GetProtocolTask">
            <summary>
            Gets the finalized version of this task.  Also internally updates this.Task to refer to a bound read-only copy of the original
            CloudTask.  Subsequent calls to this method will return a reference to the same object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ApplicationOperations">
            <summary>
            Performs application-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationOperations.ParentBatchClient">
            <summary>
            allows child objects to access the protocol wrapper and secrets to make verb calls
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ApplicationOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationOperations.ListApplicationSummaries(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ApplicationSummary">applications</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate applications asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the applications are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; applications are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationOperations.GetApplicationSummaryAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name="applicationId">The id of the application to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ApplicationSummary"/> containing information about the specified application.</returns>
            <remarks>The get application operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationOperations.GetApplicationSummary(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name="applicationId">The id of the application to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ApplicationOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ApplicationSummary"/> containing information about the specified application.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ApplicationOperations.GetApplicationSummaryAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListCertificatesEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobPrepReleaseTaskStatusEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.#ctor(Microsoft.Azure.Batch.BatchClient,Microsoft.Azure.Batch.BehaviorManager,Microsoft.Azure.Batch.DetailLevel)">
            <summary>
            An iterator that lists-jobs (not by schedule)
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.#ctor(Microsoft.Azure.Batch.BatchClient,System.String,Microsoft.Azure.Batch.BehaviorManager,Microsoft.Azure.Batch.DetailLevel)">
            <summary>
            An iterator that calls list-jobs-by-schedule
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobsEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListPoolsEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListPoolUsageMetricsEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeFilesByTaskEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListTasksEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListNodeFilesByNodeEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListJobSchedulesEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AsyncListComputeNodesEnumerator.GetNextBatchFromServerAsync(Microsoft.Azure.Batch.SkipTokenHandler,System.Threading.CancellationToken)">
            <summary>
            fetch another batch of objects from the server
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials">
            <summary>
            Shared key credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.KeyValue">
            <summary>
            Gets the Base64 encoded account access key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials"/> class with the specified Batch service endpoint, account name, and access key.
            </summary>
            <param name="baseUrl">The Batch service endpoint.</param>
            <param name="accountName">The name of the Batch account.</param>
            <param name="keyValue">The Base64 encoded account access key.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Auth.BatchCredentials">
            <summary>
            Base class for credentials used to authenticate access to an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Auth.BatchCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Auth.BatchCredentials"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Auth.BatchCredentials.BaseUrl">
            <summary>
            Gets the Batch service endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientBehavior">
            <summary>
            Derived classes modify operational behaviors of a Azure Batch Service client.  Derived classes can be called out of order and simultaneously by several threads.  Implementations should be threadsafe.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchRequestTimeout">
            <summary>
            Class which provides easy access to the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Timeout"/> property and the <see cref="P:Microsoft.Azure.Batch.Protocol.Models.ITimeoutOptions.Timeout"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchRequestTimeout.ServerTimeout">
            <summary>
            Gets or sets the server timeout to be applied to each request issued to the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchRequestTimeout.ClientTimeout">
            <summary>
            Gets or sets the client timeout to be applied to each request issued to the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchRequestTimeout.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.BatchRequestTimeout"/> class.
            </summary>
            <param name="serverTimeout">The server timeout to be applied to each request.</param>
            <param name="clientTimeout">The client timeout to be applied to each request.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobOperations">
            <summary>
            Performs operations on Azure Batch jobs.
            </summary>
            <seealso cref="T:Microsoft.Azure.Batch.CloudJob"/>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.JobOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.CreateJob">
            <summary>
            Creates an instance of CloudJob that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> representing a new job that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.CreateJob(System.String,Microsoft.Azure.Batch.PoolInformation)">
            <summary>
            Creates an instance of CloudJob that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <param name="jobId">The Id of the job.</param>
            <param name="poolInformation">The information about the pool the job will run on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> representing a new job that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetJobAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="jobId">The id of the job to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> containing information about the specified Azure Batch job.</returns>
            <remarks>The get job operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetJob(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="jobId">The id of the job to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJob"/> containing information about the specified Azure Batch job.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetJobAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.EnableJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The enable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.EnableJob(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.EnableJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DisableJobAsync(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The disable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DisableJob(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DisableJobAsync(System.String,Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateJobAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateJob(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.TerminateJobAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteJob(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteJobAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListTasks(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudTask">tasks</see> of the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate tasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetTaskAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="jobId">The id of the job from which to get the task.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>The get task operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetTask(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="jobId">The id of the job from which to get the task.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetTaskAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListSubtasks(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.SubtaskInformation">subtask information</see> of the specified task.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate subtasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Adds a single task to a job.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="jobId">The id of the job to which to add the task.</param>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use the multiple-task overload of AddTaskAsync.</para>
            <para>The add task operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to a job.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="jobId">The id of the job to which to add the task.</param>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A collection of information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use the multiple-task overload of AddTask.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListNodeFiles(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.NodeFile">NodeFiles</see> in the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="taskId">The id of the task.</param>
            <param name="recursive">If true, performs a recursive list of all files of the task. If false, returns only the files in the root task directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.TerminateTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.TerminateTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteTask(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified task.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteTaskAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the specified task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFile(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the task's directory on its compute node.
            </summary>
            <param name="jobId">The id of the job containing the task.</param>
            <param name="taskId">The id of the task.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="jobId">The id of the job to which to add the tasks.</param>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The add task operation runs asynchronously.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="jobId">The id of the job to which to add the tasks.</param>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <remarks>
            <para>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetAllJobsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the current account.  
            Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. 
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The aggregated job statistics.</returns>
            <remarks>The get statistics operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.GetAllJobsLifetimeStatistics(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the current account.  
            Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics. 
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated job statistics.</returns>
            <remarks>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobOperations.GetAllJobsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobOperations.ListJobPreparationAndReleaseTaskStatus(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the status of <see cref="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask"/> and <see cref="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask"/> tasks for the specified job.
            </summary>
            <param name="jobId">The id of the job.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate statuses asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the statuses are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; statuses are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeFile">
            <summary>
            Exposes methods and properties to access files from Nodes or Tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.IsDirectory">
            <summary>
            Gets the value that indicates whether the file is a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Properties">
            <summary>
            Gets the FileProperties of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeFile.Url">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.ReadAsStringAsync(System.Text.Encoding,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins asynchronous call to return the contents of the file as a string.
            </summary>
            <param name="encoding">The encoding used to interpret the file data. If no value or null is specified, UTF8 is used.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.ReadAsString(System.Text.Encoding,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to return the contents of the file as a string.
            </summary>
            <param name="encoding">The encoding used to interpret the file data. If no value or null is specified, UTF8 is used.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A string containing the contents of the file.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.CopyToStreamAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to copy the contents of the file into the given Stream.
            </summary>
            <param name="stream">The stream into which the contents of the file are copied.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.CopyToStream(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to copy the contents of the file into the given Stream.
            </summary>
            <param name="stream">The stream into which the contents of the file are copied.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.DeleteAsync(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to delete the file.
            </summary>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.Delete(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to delete the file.
            </summary>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.NodeFile.Name"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.NodeFile.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.NodeFile"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.NodeFile.Name"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.NodeFile.CustomBehaviors"/>.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeFile.FileItemBox">
            <summary>
            Encapsulates the properties of a FileItem so as to allow atomic replacement for Refresh().
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientParallelOptions">
            <summary>
            Stores options that configure the operation of methods on Batch client parallel operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClientParallelOptions.MaxDegreeOfParallelism">
            <summary>
            Gets or sets the maximum number of concurrent tasks enabled by this <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> instance.
            The default value is 1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClientParallelOptions.CancellationToken">
            <summary>
            Gets or sets the <see cref="T:System.Threading.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> instance.
            The default is <see cref="P:System.Threading.CancellationToken.None"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClientParallelOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BehaviorManager">
            <summary>
            Tools for managing multiple collections of behaviors.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BehaviorManager.MasterListOfBehaviors">
            <summary>
            Returns a new list of behaviors that is the concatination of the base + per-call.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BehaviorManager.GetBehaviors``1">
            <summary>
            Gets an ordered list of behaviors of the specific type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Certificate">
            <summary>
            A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.
            </summary>
            <summary>
            A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Adds the certificate to the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The commit operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds the certificate to the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of the certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.Certificate.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>The cancel delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.CancelDelete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.Certificate.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.Certificate.CancelDeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.Certificate.Thumbprint"/> or <see cref="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.Certificate.Thumbprint"/> or <see cref="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.CertificateFormat},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Certificate"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
            <param name='data'>The base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref="T:Microsoft.Azure.Batch.Certificate"/> 
            was created).</param>
            <param name='thumbprint'>The thumbprint of the certificate. This is a sequence of up to 40 hex digits.</param>
            <param name='thumbprintAlgorithm'>The algorithm used to derive the thumbprint.</param>
            <param name='certificateFormat'>The format of the certificate data.</param>
            <param name='password'>The password to access the certificate private key.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.CertificateFormat">
            <summary>
            Gets the format of the certificate data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Data">
            <summary>
            Gets the base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref="T:Microsoft.Azure.Batch.Certificate"/> 
            was created).
            </summary>
            <remarks>
            <para>This property is set when creating a new <see cref="T:Microsoft.Azure.Batch.Certificate"/>. It is not defined for certificates 
            retrieved from the Batch service.</para> <para>The maximum size is 10 KB.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.DeleteCertificateError">
            <summary>
            Gets the error that occurred on the last attempt to delete this certificate.
            </summary>
            <remarks>
            This property is null unless the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Password">
            <summary>
            Gets the password to access the certificate private key.
            </summary>
            <remarks>
            This property is set when creating a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .pfx format data (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[],System.String)"/> and <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String,System.String)"/>). It is not defined for 
            certificates retrieved from the Batch service.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PreviousState">
            <summary>
            Gets the previous state of the certificate.
            </summary>
            <remarks>
            If the certificate is in its initial <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state, the PreviousState property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its previous state.
            </summary>
            <remarks>
            If the certificate is in its initial <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state, the PreviousStateTransitionTime 
            property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.PublicData">
            <summary>
            Gets the public part of the certificate as a string containing base-64 encoded .cer format data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.State">
            <summary>
            Gets the current state of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.StateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Thumbprint">
            <summary>
            Gets the thumbprint of the certificate. This is a sequence of up to 40 hex digits.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.ThumbprintAlgorithm">
            <summary>
            Gets the algorithm used to derive the thumbprint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Certificate.Url">
            <summary>
            Gets the URL of the certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Certificate.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#CertificateAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CertificateOperations">
            <summary>
            Performs certificate-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CertificateOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificateAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> containing information about the specified certificate in the Azure Batch account.</returns>
            <remarks>The get certificate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificate(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.Certificate"/>.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> containing information about the specified certificate in the Azure Batch account.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.GetCertificateAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from a .cer file.
            </summary>
            <param name="cerFileName">The path to the .cer file.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[])">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .cer format data in memory.
            </summary>
            <param name="cerRawData">The certificate data in .cer format.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from a .pfx file.
            </summary>
            <param name="pfxFileName">The path to the .pfx file.</param>
            <param name="password">The password to access the certificate private key.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CreateCertificate(System.Byte[],System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.Certificate"/> from .pfx format data in memory.
            </summary>
            <param name="pfxRawData">The certificate data in .pfx format.</param>
            <param name="password">The password to access the certificate private key.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.Certificate"/> representing a new certificate that has not been added to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.ListCertificates(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.Certificate">certificates</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate certificates asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the certificates are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; certificates are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificate(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the certificate from the Batch account.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the certificate be deleted.  The request puts the certificate in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Deleting"/> state.
            The Batch service will perform the actual certificate deletion without any further client action.</para>
            <para>You cannot delete a certificate if a resource (pool or compute node) is using it. Before you can delete a certificate, you must therefore make sure that:</para>
            <list type="bullet">
            <item><description>The certificate is not associated with any pools.</description></item>
            <item><description>The certificate is not installed on any compute nodes.  (Even if you remove a certificate from a pool, it is not removed from existing compute nodes in that pool until they restart.)</description></item>
            </list>
            <para>If you try to delete a certificate that is in use, the deletion fails. The certificate state changes to <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/>.
            You can use <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> to set the status back to Active if you decide that you want to continue using the certificate.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of the specified certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate that failed to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>The cancel delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificate(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Cancels a failed deletion of the specified certificate.  This can be done only when
            the certificate is in the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.DeleteFailed"/> state, and restores the certificate to the <see cref="F:Microsoft.Azure.Batch.Common.CertificateState.Active"/> state.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm used to derive the <paramref name="thumbprint"/> parameter. This must be sha1.</param>
            <param name="thumbprint">The thumbprint of the certificate that failed to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CertificateOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you still wish to delete the certificate (instead of returning it to Active), you do not need to cancel
            the failed deletion. You must make sure that the certificate is not being used by any resources, and then you
            can try again to delete the certificate (see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.DeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CertificateOperations.CancelDeleteCertificateAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CertificateOperations.ParentBatchClient">
            <summary>
            allows child objects to access the protocol wrapper and secrets to make verb calls
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudJob">
            <summary>
            An Azure Batch job.
            </summary>
            <summary>
            An Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJob" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJob" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Adds a single task to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use JobOperations.AddTaskAsync.</para>
            <para>The add task operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTask(Microsoft.Azure.Batch.CloudTask,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds a single task to this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  To add multiple tasks,
            use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTask(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>.
            </summary>
            <param name="taskToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/> to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <returns>A collection of information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>
            <para>Each call to this method incurs a request to the Batch service. Therefore, using this method to add
            multiple tasks is less efficient than using a bulk add method, and can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx
            or use JobOperations.AddTask.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The add task operation runs asynchronously.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.AddTask(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Adds tasks to a job.
            </summary>
            <param name="tasksToAdd">The <see cref="T:Microsoft.Azure.Batch.CloudTask"/>s to add.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="parallelOptions">
            Controls the number of simultaneous parallel AddTaskCollection requests issued to the Batch service.  Each AddTaskCollection request contains at most
            <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/> tasks in it.
            Also controls the cancellation token for the operation.
            If omitted, the default is used (see <see cref="T:Microsoft.Azure.Batch.BatchClientParallelOptions"/>.)
            </param>
            <param name="fileStagingArtifacts">An optional collection to receive information about the file staging process (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            An entry is added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> for each set of tasks grouped for submission to the Batch service.
            Unlike single-task adds, you cannot use this parameter to customize the file staging process.
            For more information about the format of each entry, see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <param name="timeout">The amount of time after which the operation times out.</param>
            <remarks>
            <para>This is a blocking operation; for a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method is not atomic; that is, it is possible for the method to start adding tasks and
            then fail. The collection of tasks to add is broken down into chunks of size at most <see cref="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest"/>,
            and an AddTaskCollection request is issued for each chunk.  Requests may be issued in parallel according to
            the <paramref name="parallelOptions"/>.</para>
            <para>Issuing a large number of simultaneous requests to the Batch service can incur HTTP connection restrictions.
            If you are performing many of these operations in parallel (or have specified a large MaxDegreeOfParallelism in
            the parallelOptions) and are seeing client side timeouts, please see 
            http://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.defaultconnectionlimit%28v=vs.110%29.aspx .</para>
            <para>The progress of the operation in the face of errors is determined by <see cref="T:Microsoft.Azure.Batch.AddTaskCollectionResultHandler"/> behavior.
            You do not normally need to specify this behavior, as the Batch client uses a default which works in normal circumstances.
            If you do want to customize this behavior, specify an AddTaskCollectionResultHandler in the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>
            or <paramref name="additionalBehaviors"/> collections.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.ListTasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudTask">tasks</see> of this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate tasks asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the tasks are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; tasks are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>The get task operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.GetTask(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="taskId">The id of the task to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudTask"/> containing information about the specified Azure Batch task.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.GetTaskAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, allowing new tasks to run.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The enable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, allowing new tasks to run.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The disable operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Disable(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.  Disabled jobs do not run new tasks, but may be re-enabled later.
            </summary>
            <param name="disableJobOption">Specifies what to do with active tasks associated with the job.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.DisableAsync(Microsoft.Azure.Batch.Common.DisableJobOption,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, marking it as completed.
            </summary>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Terminate(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>, marking it as completed.
            </summary>
            <param name="terminateReason">The text you want to appear as the job's <see cref="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.TerminateAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJob" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJob" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job be deleted.  The request puts the job in the <see cref="F:Microsoft.Azure.Batch.Common.JobState.Deleting"/> state.
            The Batch service will stop any running tasks and perform the actual job deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJob.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJob.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJob.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudJob"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings. These environment variables are set for all tasks 
            in this <see cref="T:Microsoft.Azure.Batch.CloudJob"/> (including the Job Manager, Job Preparation and Job Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.CreationTime">
            <summary>
            Gets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.DisplayName">
            <summary>
            Gets or sets the display name of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.ETag">
            <summary>
            Gets the ETag for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.ExecutionInformation">
            <summary>
            Gets the execution information for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Id">
            <summary>
            Gets or sets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobManagerTask">
            <summary>
            Gets or sets the Job Manager task. The Job Manager task is launched when the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task. The Batch service will run the Job Preparation task on a compute node 
            before starting any tasks of that job on that compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task. The Batch service runs the Job Release task when the job ends, on each compute 
            node where any task of the job has run.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.LastModified">
            <summary>
            Gets the last modified time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PoolInformation">
            <summary>
            Gets or sets the pool on which the Batch service runs the job's tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PreviousState">
            <summary>
            Gets the previous state of the job.
            </summary>
            <remarks>
            If the job is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobState.Active"/> state, the PreviousState property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the job entered its previous state.
            </summary>
            <remarks>
            If the job is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobState.Active"/> state, the PreviousStateTransitionTime property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Priority">
            <summary>
            Gets or sets the priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest 
            priority and 1000 being the highest priority.
            </summary>
            <remarks>
            The default value is 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.State">
            <summary>
            Gets the current state of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.StateTransitionTime">
            <summary>
            Gets the time at which the job entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Statistics">
            <summary>
            Gets resource usage statistics for the entire lifetime of the job.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudJob"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.Url">
            <summary>
            Gets the URL of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies">
            <summary>
            Gets or sets whether tasks in the job can define dependencies on each other.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJob.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.DetailLevel">
            <summary>
            Controls the amount of detail requested from the Azure Batch service when listing or
            retrieving resources.
            </summary>
            <remarks>The only supported implementation of DetailLevel is <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/>.
            Other implementations are ignored.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.ErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingIncorrectArtifact">
            <summary>
              Looks up a localized string similar to An incorrect artifact implementation class was provided..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingLocalFileNotFound">
            <summary>
              Looks up a localized string similar to The following local file cannot be staged because it cannot be found: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingOnlyASingleStorageAccount">
            <summary>
              Looks up a localized string similar to All files destined for the default blob container must use the same instance of StorageCredentials..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.ErrorMessages.FileStagingPropertyCanBeSetOnlyOnce">
            <summary>
              Looks up a localized string similar to The following property has been set once and cannot be set again: {0}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount">
            <summary>
            Holds storage account information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccount">
            <summary>
            Specifies the storage account to be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.StorageAccountKey">
            <summary>
            Specifies the storage account key to be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.BlobEndpoint">
            <summary>
            The serviced endpoint for blob storage.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.StagingStorageAccount.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StagingStorageAccount class using the specified credentials and service endpoint.
            </summary>
            <param name="storageAccount">A string specifying the storage account to be used.</param>
            <param name="storageAccountKey">A string specifying the storage account key to be used.</param>
            <param name="blobEndpoint">A string specifying the primary Blob service endpoint.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.Constants">
            <summary>
            Set of useful constants for interacting with file staging.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.FileStaging.Constants.DefaultContainerPolicyFragment">
            <summary>
            The default container policy fragment.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.FileToStage">
            <summary>
            Provides for file staging of a local file to blob storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.LocalFileToStage">
            <summary>
            The name of the local file to stage to blob storage
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.NodeFileName">
            <summary>
            The target filename, on the compute node, to which the blob contents will be downloaded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.StagedFiles">
            <summary>
            The instances of ResourcesFile for the staged local file.
            For this implementation, successful file staging of this object will
            result in a collection with only one entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.FileToStage.Exception">
            <summary>
            The exception, if any, caught while attempting to stage this file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.#ctor(System.String,Microsoft.Azure.Batch.FileStaging.StagingStorageAccount,System.String)">
            <summary>
            Specifies that a local file should be staged to blob storage.  
            The specified account will be charged for storage costs.
            </summary>
            <param name="localFileToStage">The name of the local file.</param>
            <param name="storageCredentials">The storage credentials to be used when creating the default container.</param>
            <param name="nodeFileName">Optional name to be given to the file on the compute node.  If this parameter is null or missing 
            the name on the compute node will be set to the value of localFileToStage stripped of all path information.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            See <see cref="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)"/>.
            </summary>
            <param name="filesToStage">The instances of IFileStagingProvider to stage.</param>
            <param name="fileStagingArtifact">IFileStagingProvider specific staging artifacts including error/progress.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateStagingArtifact">
            <summary>
            See <see cref="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact"/>.
            </summary>
            <returns>An instance of IFileStagingArtifact with default values.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.Validate">
            <summary>
            See <see cref="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.ConstructBlobSource(System.String,System.String)">
            <summary>
            combine container and blob into an URL.
            </summary>
            <param name="container">container url</param>
            <param name="blob">blob url</param>
            <returns>full url</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.CreateContainerWithPolicySASIfNotExist(System.String,System.String,System.Uri,System.String,System.String,System.DateTime,System.DateTime,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPermissions)">
            <summary>
            create a container if doesn't exist, setting permission with policy, and return assosciated SAS signature
            </summary>
            <param name="account">storage account</param>
            <param name="key">storage key</param>
            <param name="container">container to be created</param>
            <param name="policy">name for the policy</param>
            <param name="start">start time of the policy</param>
            <param name="end">expire time of the policy</param>
            <param name="permissions">permission on the name</param>
            <param name="blobUri">blob URI</param>
            <returns>the SAS for the container, in full URI format.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.FindAtLeastOne(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider})">
            <summary>
            Since this is the SequentialFileStagingProvider, all files are supposed to be of this type.
            Find any one and return the implementation instance.
            </summary>
            <param name="filesToStage"></param>
            <returns>Null means there was not even one.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesInternalAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            Starts an asynchronous call to stage the given files.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact)">
            <summary>
            Stages all files in the queue 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileToStage.StageOneFileAsync(Microsoft.Azure.Batch.FileStaging.FileToStage,Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact)">
            <summary>
            Stage a single file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.FileStagingLinkedSources.BucketizeFileStagingProviders(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider})">
            <summary>
            Creates buckets for the FileStagingProviders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingManager.ListBlobsAsync">
            <summary>
            Begins asychronous call to list all the blobs in the current container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingManager.ListBlobs">
            <summary>
            Blocking call to list all the blobs in the current container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingManager.CreateSASForBlob(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.TimeSpan)">
            <summary>
            Creates a SAS for a blob that already exists.
            </summary>
            <param name="blob"></param>
            <param name="ttl"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider">
            <summary>
            Provides basic file staging features.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StageFilesAsync(System.Collections.Generic.List{Microsoft.Azure.Batch.FileStaging.IFileStagingProvider},Microsoft.Azure.Batch.IFileStagingArtifact)">
            <summary>
            Begins an asynchronous operation to stage all of the files in the given collection.
            When file staging begins, all instances of IFileStagingProvider are bucketized by their implementation type.
            This produces one collection of instances per implementation.
            Each implmentation of IFileStagingProvider has a StageFilesAsync() method.  That method is called once with the 
            collection produced by the bucketization step oulined above.
            </summary>
            <param name="filesToStage">Collection of all file staging objects to be staged.  All instances must have the same implementation type.</param>
            <param name="fileStagingArtifact">IFileStagingProvider specific staging artifacts including error/progress.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.CreateStagingArtifact">
            <summary>
            Returns an instance of IFileStagingArtifact with whatever values the implementation requires.
            This will be called during file staging whenever a staging artifact has not been otherwise provided.
            </summary>
            <returns>An instance of IFileStagingArtifact with whatever values the implementation requires.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.Validate">
            <summary>
            Performs client-side validation on the current object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider.StagedFiles">
            <summary>
            The collection of ResourceFile objects that are the result of file staging.   
            Must be set by the IFileStagingProvider.StageFilesAsync() method.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact">
            <summary>
            The file staging artifact payload for this file staging provider
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated">
            <summary>
            The name of any blob container created.  
            
            A blob container is created if there is at least one file 
            to be uploaded that does not have an explicit container specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.NamingFragment">
            <summary>
            Optionally set by caller.  Optionally used by implementation. A name fragment that can be used when constructing default names.
            
            Can only be set once.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.DefaultContainerSAS">
            <summary>
            Holds the SAS for the default container after it is created.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IInheritedBehaviors">
            <summary>
            Methods and properties that are inherited from the instantiating parent object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IInheritedBehaviors.CustomBehaviors">
            <summary>
            This collection is initially populated by instantiation or by copying from the instantiating parent object (inheritance).
            In this model, the collections are independent but the members are shared references.
            Members of this collection alter or customize various behaviors of Azure Batch Service client objects.
            These behaviors are generally inherited by any child class instances.  
            Modifications are applied in the order of the collection.
            The last write wins.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPagedEnumerable`1">
            <summary>
            Exposes enumerators for a paged collection. These enumerators support simple iteration over a paged collection of a specified type.
            
            Paged collections are backed by one or more calls to the Batch Service.  
            Each of these calls can return a variable sized page of data which is then consumed by the enumerator. 
            </summary>
            <typeparam name="T">The type of objects to enumerate.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerable`1.GetPagedEnumerator">
            <summary>
            Returns an asynchronous enumerator that iterates through the paged collection.
            </summary>
            <returns>The type of objects to enumerate.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.IPagedEnumerator`1">
            <summary>
            An enumerator which exposes an asynchronous mechanism for iteration.
            
            Enumerator instances are not threadsafe.
            
            Each enumerator fetches the collection from the server. 
            As a consequence, each enumerator can see different data (collection size, contents, etc.).
            
            Care should be taken to avoid multiple retrievals of the data from the server via casual use of foreach/ForeachAsync and other collection operations.
            
            </summary>
            <typeparam name="T">The type of the enumerator.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.IPagedEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerator`1.MoveNextAsync(System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to advance the enumerator to the next element of the collection.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IPagedEnumerator`1.ResetAsync(System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to set the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudPool">
            <summary>
            A pool in the Azure Batch service.
            </summary>
            <summary>
            A pool in the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this pool.
            </summary>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this pool.
            </summary>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
            </remarks>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudPool" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudPool" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Resizes this pool.
            </summary>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            <para>The resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Resize(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes this pool.
            </summary>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.ResizeAsync(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Stops a resize operation on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>The stop resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.StopResize(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a resize operation on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.StopResizeAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ListComputeNodes(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> of this pool.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate compute nodes asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>The get node operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.GetComputeNode(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.GetComputeNodeAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling on this pool.
            </summary>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>The enable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on this pool.
            </summary>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScale(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on this pool.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.DisableAutoScaleAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on this pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on this pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScaleAsync(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>The evaluate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on this pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on this pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.CloudPool.EnableAutoScale(System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.EvaluateAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from this pool.
            </summary>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPool(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from this pool.
            </summary>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes from <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.RemoveFromPoolAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Changes the operating system version of this pool.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>The change version operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersion(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of this pool.
            </summary>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudPool.ChangeOSVersionAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudPool"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AllocationState">
            <summary>
            Gets an <see cref="T:Microsoft.Azure.Batch.Common.AllocationState"/> which indicates what node allocation activity is occurring on the 
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AllocationStateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application packages to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled">
            <summary>
            Gets or sets whether the pool size should automatically adjust according to the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
            <remarks>
            <para>If false, the <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated"/> property is required, and <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> must 
            be null.</para> <para>If true, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/> property is required, and <see cref="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated"/> 
            must be null. The pool automatically resizes according to the formula.</para><para>The default value is false.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval at which to automatically adjust the pool size according to the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum allowed value is 5 minutes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            <para>This property is required if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true. It must be null if AutoScaleEnabled 
            is false.</para><para>The formula is checked for validity before the pool is created. If the formula is not valid, 
            an exception is thrown when you try to commit the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.AutoScaleRun">
            <summary>
            Gets the results and errors from the last execution of the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleFormula"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.CloudPool.CloudServiceConfiguration"/> for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CreationTime">
            <summary>
            Gets the creation time for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.CurrentDedicated">
            <summary>
            Gets the number of compute nodes currently in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.DisplayName">
            <summary>
            Gets or sets the display name of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ETag">
            <summary>
            Gets the ETag for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Id">
            <summary>
            Gets or sets the id of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.InterComputeNodeCommunicationEnabled">
            <summary>
            Gets or sets whether the pool permits direct communication between its compute nodes.
            </summary>
            <remarks>
            Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes 
            of the pool. This may result in the pool not reaching its desired size.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.LastModified">
            <summary>
            Gets the last modified time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.MaxTasksPerComputeNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
            </summary>
            <remarks>
            The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool 
            (the <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize"/> property).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ResizeError">
            <summary>
            Gets the resize error encountered while performing the last resize on the <see cref="T:Microsoft.Azure.Batch.CloudPool"/>. This error 
            is returned only when the Batch service encountered an error while resizing the pool, and when the pool's <see 
            cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState">Steady</see>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to 
            the pool or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.State">
            <summary>
            Gets the current state of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.StateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Statistics">
            <summary>
            Gets the resource usage statistics for the pool.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudPool"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            This property must be null if <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> is set to true. It is required if AutoScaleEnabled 
            is set to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.Url">
            <summary>
            Gets the URL of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineConfiguration"/> of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">
            <summary>
            Gets or sets the size of compute node virtual machines in the pool. All VMs in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines, see the Azure documentation. Batch supports all Azure 
            VM sizes except ExtraSmall.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudPool.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#PoolAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudTask">
            <summary>
            An Azure Batch task.  A task is a piece of work that is associated with a job and runs on a compute node.
            </summary>
            <summary>
            An Azure Batch task. A task is a piece of work that is associated with a job and runs on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> class.
            </summary>
            <param name="id">The id of the task.</param>
            <param name="commandline">The command line of the task.</param>
            <remarks>The newly created CloudTask is initially not associated with any task in the Batch service.
            To associate it with a job and submit it to the Batch service, use <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.StageFilesAsync(System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact})">
            <summary>
            Stages the files listed in the <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/> list.
            </summary>
            <param name="allFileStagingArtifacts">An optional collection to customize and receive information about the file staging process.
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The staging operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.StageFiles">
            <summary>
            Stages the files listed in the <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/> list.
            </summary>
            <returns>A collection of information about the file staging process.
            For more information see <see cref="T:Microsoft.Azure.Batch.IFileStagingArtifact"/>.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.StageFilesAsync(System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the files in the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="recursive">If true, performs a recursive list of all files of the task. If false, returns only the files in the root task directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.ListSubtasks(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the subtasks of the multi-instance <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudTask" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The commit operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudTask" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, marking it as completed.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>The terminate operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Terminate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>, marking it as completed.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.NodeFile"/> from the <see cref="T:Microsoft.Azure.Batch.CloudTask"/>'s directory on its compute node.
            </summary>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> representing the specified file.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudTask.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudTask.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudTask.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudTask"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.AffinityInformation">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service to select a node on which to start the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CommandLine">
            <summary>
            Gets or sets the command line of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ComputeNodeInformation">
            <summary>
            Gets information about the compute node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.CreationTime">
            <summary>
            Gets the creation time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.DependsOn">
            <summary>
            Gets or sets any other tasks that this <see cref="T:Microsoft.Azure.Batch.CloudTask"/> depends on. The task will not be scheduled until 
            all depended-on tasks have completed successfully.
            </summary>
            <remarks>
            The job must set <see cref="P:Microsoft.Azure.Batch.CloudJob.UsesTaskDependencies"/> to true in order to use task dependencies. If UsesTaskDependencies 
            is false (the default), adding a task with dependencies will fail with an error.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.DisplayName">
            <summary>
            Gets or sets the display name of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ETag">
            <summary>
            Gets the ETag for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ExecutionInformation">
            <summary>
            Gets the execution information for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.FilesToStage">
            <summary>
            Gets or sets a list of files to be staged for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Id">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.LastModified">
            <summary>
            Gets the last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.MultiInstanceSettings">
            <summary>
            Gets or sets information about how to run the multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.PreviousState">
            <summary>
            Gets the previous state of the task.
            </summary>
            <remarks>
            If the task is in its initial <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Active"/> state, the PreviousState property is not 
            defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the task entered its previous state.
            </summary>
            <remarks>
            If the task is in its initial <see cref="F:Microsoft.Azure.Batch.Common.TaskState.Active"/> state, the PreviousStateTransitionTime property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.RunElevated">
            <summary>
            Gets or sets whether to run the task in elevated mode.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.State">
            <summary>
            Gets the current state of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.StateTransitionTime">
            <summary>
            Gets the time at which the task entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Statistics">
            <summary>
            Gets resource usage statistics for the task.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudTask"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudTask.Url">
            <summary>
            Gets the URL of the task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATADetailLevel">
             <summary>
             Controls the amount of detail requested from the Azure Batch service when listing or
             retrieving resources, using OData query clauses.
             </summary>
             <remarks>
             <para>Azure Batch supports OData queries, which allow the client to gain finer control over query
             performance by controlling which resources are returned in List operations (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause"/>),
             and which properties of each resource are returned in List, Get or Refresh operations
             (<see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause"/> and <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/>).</para>
             <para>By default, if you do not pass a <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> to a List, Get or Refresh operation,
             the Batch client specifies no filter (all records are returned), no select clause (all simple properties are
             returned) and no expand clause (associated entities are not returned).  Consequently, by default, associated entity
             properties are null, rather than being populated like other properties.  Refer to individual class
             documentation to find out which properties are considered associated entities and need to be expanded
             to be populated.</para>
             <para>Because the OData queries are passed directly to the REST API, clause strings must use the JSON attribute
             names from the REST API, which are not always the same as .NET property names.  For example, the
             .NET <see cref="P:Microsoft.Azure.Batch.CloudPool.VirtualMachineSize">CloudPool.VirtualMachineSize</see> property corresponds to
             the vmSize attribute in the REST API; therefore, to filter a pool list operations by VM size, you would
             need to write vmSize rather than VirtualMachineSize in your filter string.  Refer to the REST API
             documentation to find out the JSON attribute name corresponding to a .NET property.</para>
             <para>For additional information about using OData to efficiently query the Azure Batch service, see
             <a href="https://azure.microsoft.com/en-us/documentation/articles/batch-efficient-list-queries/">Efficient List Queries</a> on MSDN.</para>
             </remarks>
             <example>
             This sample shows how to specify an ODataDetailLevel that lists only active <see cref="T:Microsoft.Azure.Batch.CloudPool">CloudPools</see>,
             and retrieves only the <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/>, <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics"/>
             for each pool (for example, for display in a reporting user interface).
             <code>
             var detailLevel = new ODATADetailLevel(
                 filterClause: "state eq 'active'",
                 selectClause: "id,displayName,stats",
                 expandClause: "stats"
             );
            
             var pools = batchClient.PoolOperations.ListPools(detailLevel);
             </code>
             </example>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.FilterClause">
            <summary>
            Gets or sets the OData filter clause. Used to restrict a list operation to items that match specified criteria.
            </summary>
            <remarks>
            <para>This is an optional OData $filter expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398094">(see the OData specification)</a>.
            For example, you can restrict a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> operation to return
            only active pools with the expression <c>state eq 'active'</c>.</para>
            <para>Filters must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no filter expression, which means all resources are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause">
            <summary>
            Gets or sets the OData select clause. Used to retrieve only specific properties instead of all object properties.
            </summary>
            <remarks>
            <para>This is an optional OData $select expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398163">(see the OData specification)</a>.
            If you provide a SelectClause, then <b>only</b> the properties listed in that clause are populated; other properties
            have their default values (typically null).  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>
            operation with a SelectClause of <c>id,displayName</c>, then each <see cref="T:Microsoft.Azure.Batch.CloudPool"/> will have its
            <see cref="P:Microsoft.Azure.Batch.CloudPool.Id"/> and <see cref="P:Microsoft.Azure.Batch.CloudPool.DisplayName"/> properties
            populated, but other properties such as <see cref="P:Microsoft.Azure.Batch.CloudPool.State"/> will not be retrieved and therefore
            will have their default values (typically null).</para>
            <para>If, when an entity was retrieved (via a List, Get or Refresh), you specifed a SelectClause which did not include
            the property or properties that uniquely identify the object
            (usually the Id property, but for <see cref="T:Microsoft.Azure.Batch.Certificate"/> the Thumbprint and ThumbprintAlgorithm properties,
            then any methods that access the Batch service to retrieve data or perform operations will fail.
            This includes most methods on the object, including <see cref="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> and <see cref="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            You can still access properties (though only properties included in the SelectClause will be populated).</para>
            <para>Selections must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no select expression, which means all properties are returned.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause">
            <summary>
            Gets or sets the OData expand clause. Used to retrieve associated entities of the main entity being retrieved.
            </summary>
            <remarks>
            <para>This is an optional OData $expand expression string
            <a href="http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398162">(see the OData specification)</a>.
            Properties containing associated entities will be null unless included in an ExpandClause.
            Specifically, if you perform a List, Get or Refresh and do not specify an ExpandClause, then all associated
            entity properties will be null.  For example, if you perform a <see cref="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>
            operation without an ExpandClause then the <see cref="P:Microsoft.Azure.Batch.CloudPool.Statistics"/> property will be null.  To populate
            the Statistics property you must supply an ExpandClause of <c>stats</c>.  Refer to individual class
            documentation to find out which properties are considered associated entities.</para>
            <para>If you specify both an ExpandClause and a <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.SelectClause"/>, then properties listed in the
            ExpandClause must be repeated in the SelectClause (because only properties listed in the SelectClause are
            included in the service response).  (This requirement does not arise if you do not specify a SelectClause, because that
            means 'include all properties in the response.')</para>
            <para>Expansions must be specified using REST API attribute names, not .NET property names.</para>
            <para>The default is no expand expression, which means no associated objects are returned (and the
            corresponding properties are null).</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/> class with the specified clauses.
            </summary>
            <param name="filterClause">The filter clause.</param>
            <param name="selectClause">The select clause.</param>
            <param name="expandClause">The expand clause.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATADetailLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ODATADetailLevel"/> class with empty clauses.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitorControl">
            <summary>
            Contains control settings used for optimal retrieval of state data via OData predicates.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ODATAMonitorControl.DelayBetweenDataFetch">
            <summary>
            The minimum time between attempts to fetch data for a monitored instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitorControl.ODATAPredicateLimit">
            <summary>
            The maximum number of characters allowed for a single OData predicate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ListDelegate`1">
            <summary>
            Use a lambda to construct the correct ListFoo calls with correct params.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitor">
            <summary>
            A class that leverages OData predicates to poll the states of instances.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.WhenAllAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Func{``0,System.String},Microsoft.Azure.Batch.ListDelegate{``0},System.TimeSpan,System.Threading.CancellationToken,Microsoft.Azure.Batch.ODATADetailLevel,Microsoft.Azure.Batch.ODATAMonitorControl,System.Boolean)">
            <summary>
            Polls the collection of instances until each has passed the condition at least once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionToMonitor"></param>
            <param name="condition"></param>
            <param name="getName"></param>
            <param name="listObjects"></param>
            <param name="timeout"></param>
            <param name="cancellationToken"></param>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.</param>
            <param name="control"></param>
            <param name="throwOnTimeout"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1">
            <summary>
            Will accept instances of T and construct a filter predicate.
            The predicate will be used (and reset) when it is full or if
            the given instance was to recently refreshed (DOS avoidance).
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._condition">
            <summary>
            Holds the delegate that determines of the given instance no longer needs to be polled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._listObjects">
            <summary>
            Delegate to fetch new instances fresh state data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._odataDetailLevel">
            <summary>
            To be updated with filter predicate for refreshing instance state data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1._odataMonitorControl">
            <summary>
            Holds control data for this odata monitor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1.SwapQueues">
            <summary>
            Will swap the queues.  This is the transition from one pass to the next.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ODATAMonitor.RefreshViaODATAFilterList`1.CallListAndProcessResults">
            <summary>
            Uses list func to fetch fresh data on the instances in the predicate.
            Instances that fail the condition are enqueued for the next pass.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.MonitorLastCall`1">
            <summary>
            A class to track the last time an instance was refreshed/monitored.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddCollectionBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskAddCollection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddCollectionBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddCollectionBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskUpdateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskUpdate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskUpdateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskUpdateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListSubtasksBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskListSubtasks operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListSubtasksBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListSubtasksBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskTerminateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskTerminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskTerminateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskTerminateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the TaskListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.TaskListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the AccountListNodeAgentSkus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the AccountListNodeAgentSkusNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.AccountListNodeAgentSkusNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ApplicationList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ApplicationGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ApplicationListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ApplicationListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateCancelDeletionBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateCancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateCancelDeletionBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateCancelDeletionBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the CertificateListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.CertificateListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeAddUserBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeAddUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeAddUserBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeAddUserBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDeleteUserBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeDeleteUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDeleteUserBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDeleteUserBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeUpdateUserBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeUpdateUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeUpdateUserBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeUpdateUserBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeRebootBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeReboot operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeRebootBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeRebootBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeReimageBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeReimage operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeReimageBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeReimageBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDisableSchedulingBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeDisableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDisableSchedulingBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeDisableSchedulingBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeEnableSchedulingBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeEnableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeEnableSchedulingBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeEnableSchedulingBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteLoginSettingsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeGetRemoteLoginSettings operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteLoginSettingsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteLoginSettingsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteDesktopBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeGetRemoteDesktop operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteDesktopBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeGetRemoteDesktopBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the ComputeNodeListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.ComputeNodeListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileDeleteFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetNodeFilePropertiesFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileDeleteFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileDeleteFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileGetNodeFilePropertiesFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileGetNodeFilePropertiesFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromTaskNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromTaskNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the FileListFromComputeNodeNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.FileListFromComputeNodeNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetAllJobsLifetimeStatisticsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobGetAllJobsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetAllJobsLifetimeStatisticsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetAllJobsLifetimeStatisticsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobPatchBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobPatch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobPatchBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobPatchBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobUpdateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobUpdate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobUpdateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobUpdateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDisableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobDisable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDisableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobDisableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobEnableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobEnable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobEnableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobEnableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobTerminateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobTerminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobTerminateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobTerminateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListFromJobSchedule operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListPreparationAndReleaseTaskStatus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListFromJobScheduleNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListFromJobScheduleNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobListPreparationAndReleaseTaskStatusNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobListPreparationAndReleaseTaskStatusNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleExistsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleExists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleExistsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleExistsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobSchedulePatchBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobSchedulePatch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobSchedulePatchBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobSchedulePatchBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleUpdateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleUpdate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleUpdateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleUpdateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDisableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleDisable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDisableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleDisableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleEnableBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleEnable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleEnableBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleEnableBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleTerminateBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleTerminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleTerminateBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleTerminateBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the JobScheduleListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.JobScheduleListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolListPoolUsageMetrics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetAllPoolsLifetimeStatisticsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolGetAllPoolsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetAllPoolsLifetimeStatisticsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetAllPoolsLifetimeStatisticsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolAddBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolAdd operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolAddBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolAddBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolList operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDeleteBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolDelete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDeleteBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDeleteBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolExistsBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolExists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolExistsBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolExistsBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolGet operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolGetBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolPatchBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolPatch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolPatchBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolPatchBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDisableAutoScaleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolDisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDisableAutoScaleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolDisableAutoScaleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEnableAutoScaleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolEnableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEnableAutoScaleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEnableAutoScaleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEvaluateAutoScaleBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolEvaluateAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEvaluateAutoScaleBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolEvaluateAutoScaleBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolResizeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolResizeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolResizeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolStopResizeBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolStopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolStopResizeBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolStopResizeBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpdatePropertiesBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolUpdateProperties operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpdatePropertiesBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpdatePropertiesBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpgradeOSBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolUpgradeOS operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpgradeOSBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolUpgradeOSBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolRemoveNodesBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolRemoveNodes operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolRemoveNodesBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolRemoveNodesBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolListPoolUsageMetricsNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListPoolUsageMetricsNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListNextBatchRequest">
            <summary>
            An <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> for the PoolListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListNextBatchRequest.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequests.PoolListNextBatchRequest" /> class.
            </summary>
            <param name="serviceClient">The service client to use.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> controlling the request lifetime.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchRequest">
            <summary>
            Represents a request to the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.RestClient">
            <summary>
            Gets the REST client that will be used for this request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Options">
            <summary>
            Gets the options needed by the REST proxy for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.RetryPolicy">
            <summary>
            Gets or sets the retry policy to be applied.
            Null means no retries will be attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.OperationContext">
            <summary>
            Gets the operation context associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Timeout">
            <summary>
            Gets or sets the client side timeout for a request to the Batch service.
            </summary>
            <remarks>
            <para>
            This timeout applies to a single Batch service request; if a retry policy is specified, then each retry will be granted the
            full duration of this value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.CancellationToken">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
            <remarks>
            <para>
            Cancelling this token will cancel the currently ongoing request. This applies to the initial request as well
            as any subsequent requests created due to <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.RetryPolicy"/>. Cancelling this token also forbids all
            future retries of this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.ClientRequestIdProvider">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.ClientRequestIdProvider"/> used by this request to generate client request ids.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchRequest`1">
            <summary>
            Represents a request to the Batch Service with a particular response type.
            </summary>
            <typeparam name="TResponse">The type of the response returned by the Batch service.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IBatchRequest`1.ExecuteRequestAsync">
            <summary>
            Executes the request.
            </summary>
            <returns>An asynchronous operation of return type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IOptions">
            <summary>
            Optional arguments applicable to all service requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ITimeoutOptions">
            <summary>
            Optional arguments for service requests which support timeouts.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ITimeoutOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IODataFilter">
            <summary>
            Represents an options object supporting the OData $filter parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IODataFilter.Filter">
            <summary>
            Gets or sets the OData $filter clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IODataSelect">
            <summary>
            Represents an options object supporting the OData $select parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IODataSelect.Select">
            <summary>
            Gets or sets the OData $select clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.IODataExpand">
            <summary>
            Represents an options object supporting the OData $expand parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.IODataExpand.Expand">
            <summary>
            Gets or sets the OData $expand clause.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions">
            <summary>
            Additional parameters for the ListNodeAgentSkus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.#ctor">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions">
            <summary>
            Additional parameters for the ListNodeAgentSkusNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            AccountListNodeAgentSkusNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            AccountListNodeAgentSkusNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.#ctor">
            <summary>
            Initializes a new instance of the ApplicationGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.#ctor">
            <summary>
            Initializes a new instance of the ApplicationListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the ApplicationListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions">
            <summary>
            Additional parameters for the Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateAddOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions">
            <summary>
            Additional parameters for the CancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions">
            <summary>
            Additional parameters for the Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateDeleteOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the CertificateListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions">
            <summary>
            Additional parameters for the AddUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions">
            <summary>
            Additional parameters for the DeleteUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions">
            <summary>
            Additional parameters for the GetRemoteDesktop operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions">
            <summary>
            Additional parameters for the GetRemoteLoginSettings operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions">
            <summary>
            Additional parameters for the Reboot operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRebootOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeRebootOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions">
            <summary>
            Additional parameters for the Reimage operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeReimageOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeReimageOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions">
            <summary>
            Additional parameters for the RemoveNodes operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolRemoveNodesOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolRemoveNodesOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions">
            <summary>
            Additional parameters for the UpdateUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions">
            <summary>
            Additional parameters for the DeleteFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions">
            <summary>
            Additional parameters for the DeleteFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions">
            <summary>
            Additional parameters for the GetFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.OcpRange">
            <summary>
            Specifies the byte range to be retrieved. The default is to
            retrieve the entire file.  The format is startRange-endRange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions">
            <summary>
            Additional parameters for the GetFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileGetFromTaskOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.OcpRange">
            <summary>
            Specifies the byte range to be retrieved. The default is to
            retrieve the entire file.  The format is startRange-endRange.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions">
            <summary>
            Additional parameters for the GetNodeFilePropertiesFromComputeNode
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromComputeNodeOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromComputeNodeOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions">
            <summary>
            Additional parameters for the GetNodeFilePropertiesFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromTaskOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions">
            <summary>
            Additional parameters for the ListFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions">
            <summary>
            Additional parameters for the ListFromComputeNodeNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            FileListFromComputeNodeNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            FileListFromComputeNodeNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions">
            <summary>
            Additional parameters for the ListFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.#ctor">
            <summary>
            Initializes a new instance of the FileListFromTaskOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromTaskOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions">
            <summary>
            Additional parameters for the ListFromTaskNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.#ctor">
            <summary>
            Initializes a new instance of the FileListFromTaskNextOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromTaskNextOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions">
            <summary>
            Additional parameters for the Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.#ctor">
            <summary>
            Initializes a new instance of the JobAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobAddOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions">
            <summary>
            Additional parameters for the Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the JobDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobDeleteOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions">
            <summary>
            Additional parameters for the Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobDisableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobDisableOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions">
            <summary>
            Additional parameters for the Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobEnableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobEnableOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions">
            <summary>
            Additional parameters for the GetAllJobsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobGetAllJobsLifetimeStatisticsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobGetAllJobsLifetimeStatisticsOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.#ctor">
            <summary>
            Initializes a new instance of the JobGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions">
            <summary>
            Additional parameters for the ListFromJobSchedule operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions">
            <summary>
            Additional parameters for the ListFromJobScheduleNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobListFromJobScheduleNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListFromJobScheduleNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the JobListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions">
            <summary>
            Additional parameters for the ListPreparationAndReleaseTaskStatus
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions">
            <summary>
            Additional parameters for the ListPreparationAndReleaseTaskStatusNext
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions">
            <summary>
            Additional parameters for the Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.#ctor">
            <summary>
            Initializes a new instance of the JobPatchOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobPatchOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions">
            <summary>
            Additional parameters for the Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleAddOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions">
            <summary>
            Additional parameters for the Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleDeleteOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions">
            <summary>
            Additional parameters for the Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDisableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleDisableOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions">
            <summary>
            Additional parameters for the Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleEnableOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleEnableOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions">
            <summary>
            Additional parameters for the Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExistsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleExistsOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions">
            <summary>
            Additional parameters for the Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulePatchOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobSchedulePatchOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions">
            <summary>
            Additional parameters for the Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleTerminateOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleTerminateOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions">
            <summary>
            Additional parameters for the Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleUpdateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleUpdateOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions">
            <summary>
            Additional parameters for the Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobTerminateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobTerminateOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions">
            <summary>
            Additional parameters for the Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the JobUpdateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobUpdateOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions">
            <summary>
            Additional parameters for the Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolAddOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions">
            <summary>
            Additional parameters for the Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolDeleteOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions">
            <summary>
            Additional parameters for the DisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions">
            <summary>
            Additional parameters for the EnableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions">
            <summary>
            Additional parameters for the EvaluateAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions">
            <summary>
            Additional parameters for the Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolExistsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolExistsOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions">
            <summary>
            Additional parameters for the GetAllPoolsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions.#ctor">
            <summary>
            Initializes a new instance of the
            PoolGetAllPoolsLifetimeStatisticsOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            PoolGetAllPoolsLifetimeStatisticsOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions">
            <summary>
            Additional parameters for the ListPoolUsageMetrics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolListPoolUsageMetricsOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListPoolUsageMetricsOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.StartTime">
            <summary>
            The earliest time from which to include metrics. This must be at
            least two and a half hours before the current time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.EndTime">
            <summary>
            The latest time from which to include metrics. This must be at
            least two hours before the current time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions">
            <summary>
            Additional parameters for the ListPoolUsageMetricsNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            PoolListPoolUsageMetricsNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            PoolListPoolUsageMetricsNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions">
            <summary>
            Additional parameters for the Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolPatchOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolPatchOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions">
            <summary>
            Additional parameters for the Resize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolResizeOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolResizeOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions">
            <summary>
            Additional parameters for the StopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolStopResizeOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolStopResizeOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions">
            <summary>
            Additional parameters for the UpdateProperties operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesOptions
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions">
            <summary>
            Additional parameters for the UpgradeOS operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.#ctor">
            <summary>
            Initializes a new instance of the PoolUpgradeOSOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolUpgradeOSOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions">
            <summary>
            Additional parameters for the Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskAddOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskAddOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions">
            <summary>
            Additional parameters for the AddCollection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskAddCollectionOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions">
            <summary>
            Additional parameters for the Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskDeleteOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskDeleteOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions">
            <summary>
            Additional parameters for the Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskGetOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskGetOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions">
            <summary>
            Additional parameters for the List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskListOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Filter">
            <summary>
            Sets an OData $filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Expand">
            <summary>
            Sets an OData $expand clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.MaxResults">
            <summary>
            Sets the maximum number of items to return in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions">
            <summary>
            Additional parameters for the ListNext operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskListNextOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListNextOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions">
            <summary>
            Additional parameters for the Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskTerminateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskTerminateOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions">
            <summary>
            Additional parameters for the Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskUpdateOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskUpdateOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag is an exact match as specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfNoneMatch">
            <summary>
            An ETag is specified. Specify this header to perform the operation
            only if the resource's ETag does not match the specified ETag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfModifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has been modified since the specified date/time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions.IfUnmodifiedSince">
            <summary>
            Specify this header to perform the operation only if the resource
            has not been modified since the specified date/time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions">
            <summary>
            Additional parameters for the ListSubtasks operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.#ctor">
            <summary>
            Initializes a new instance of the TaskListSubtasksOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListSubtasksOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.Select">
            <summary>
            Sets an OData $select clause.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions">
            <summary>
            Additional parameters for the EnableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions">
            <summary>
            Additional parameters for the DisableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingOptions class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingOptions class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.Timeout">
            <summary>
            Sets the maximum time that the server can spend processing the
            request, in seconds. The default is 30 seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no
            decoration such as curly braces e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.ReturnClientRequestId">
            <summary>
            Specifies if the server should return the client-request-id
            identifier in the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions.OcpDate">
            <summary>
            The time the request was issued. If not specified, this header
            will be automatically populated with the current system clock
            time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders">
            <summary>
            Defines headers for GetNodeFilePropertiesFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromTaskHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.OcpCreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.OcpBatchFileUrl">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.OcpBatchFileMode">
            <summary>
            Gets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskHeaders.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders">
            <summary>
            Defines headers for GetFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FileGetFromTaskHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpCreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpBatchFileUrl">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.OcpBatchFileMode">
            <summary>
            Gets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskHeaders.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders">
            <summary>
            Defines headers for GetFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the FileGetFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpCreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpBatchFileUrl">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.OcpBatchFileMode">
            <summary>
            Gets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeHeaders.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders">
            <summary>
            Defines headers for GetNodeFilePropertiesFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromComputeNodeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the
            FileGetNodeFilePropertiesFromComputeNodeHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.OcpCreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.OcpBatchFileIsdirectory">
            <summary>
            Gets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.OcpBatchFileUrl">
            <summary>
            Gets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.OcpBatchFileMode">
            <summary>
            Gets the file mode attribute in octal format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeHeaders.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders">
            <summary>
            Defines headers for ListNodeAgentSkus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.#ctor">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the AccountListNodeAgentSkusHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation">
            <summary>
            A locality hint that can be used by the Batch service to select a
            compute node on which to start a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.#ctor">
            <summary>
            Initializes a new instance of the AffinityInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AffinityInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AffinityInformation.AffinityId">
            <summary>
            Gets or sets an opaque string representing the location of a
            compute node or a task that has run previously.  You can pass the
            AffinityId of a compute node or task to indicate that this task
            needs to be placed close to the node or task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AllocationState">
            <summary>
            Defines values for AllocationState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the ApplicationGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.#ctor">
            <summary>
            Initializes a new instance of the ApplicationListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference">
            <summary>
            A reference to an application package to be installed on compute nodes
            in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.#ctor">
            <summary>
            Initializes a new instance of the ApplicationPackageReference
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ApplicationPackageReference
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.ApplicationId">
            <summary>
            Gets or sets the application package id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.Version">
            <summary>
            Gets or sets the application package version. If not specified,
            the default is used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary">
            <summary>
            Contains information about an application in an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor">
            <summary>
            Initializes a new instance of the ApplicationSummary class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ApplicationSummary class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Id">
            <summary>
            Gets or sets a string that uniquely identifies the application
            within the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.DisplayName">
            <summary>
            Gets or sets the display name for the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Versions">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ApplicationSummary.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification">
            <summary>
            Specifies characteristics for a temporary 'auto pool'. The Batch
            service will create this auto pool, run all the tasks for the job on
            it, and will delete the pool once the job has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the AutoPoolSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolLifetimeOption,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.PoolSpecification)">
            <summary>
            Initializes a new instance of the AutoPoolSpecification class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.AutoPoolIdPrefix">
            <summary>
            Gets or sets a prefix to be added to the unique identifier when a
            pool is automatically created. The prefix can be up to 20
            characters long.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.PoolLifetimeOption">
            <summary>
            Gets or sets the minimum lifetime of created auto pools, and how
            multiple jobs on a schedule are assigned to pools. Possible
            values include: 'jobschedule', 'job', 'unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.KeepAlive">
            <summary>
            Gets or sets whether to keep an auto pool alive after its lifetime
            expires.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.Pool">
            <summary>
            Gets or sets the pool specification for the auto pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun">
            <summary>
            The results and errors from an execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.#ctor(System.DateTime,System.String,Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError)">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Timestamp">
            <summary>
            Gets or sets the time at which the autoscale formula was last
            evaluated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Results">
            <summary>
            Gets or sets the final values of all variables used in the
            evaluation of the autoscale formula.  Each variable value is
            returned in the form $variable=value, and variables are separated
            by semicolons.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Error">
            <summary>
            Gets or sets details of the error encountered evaluating the
            autoscale formula on the pool, if the evaluation was unsuccessful.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError">
            <summary>
            An error that occurred when executing or evaluating a pool autoscale
            formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Code">
            <summary>
            Gets or sets an identifier for the autoscale error.  Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Message">
            <summary>
            Gets or sets a message describing the autoscale error, intended to
            be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.AutoScaleRunError.Values">
            <summary>
            Gets or sets a list of additional error details related to the
            autoscale error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchError">
            <summary>
            An error response received from the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor">
            <summary>
            Initializes a new instance of the BatchError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchError.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.ErrorMessage,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Initializes a new instance of the BatchError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Code">
            <summary>
            Gets or sets an identifier for the error. Codes are invariant and
            are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Message">
            <summary>
            Gets or sets a message describing the error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchError.Values">
            <summary>
            Gets or sets a collection of key-value pairs containing additional
            details about the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail">
            <summary>
            An item of additional information included in an Azure Batch error
            response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.#ctor">
            <summary>
            Initializes a new instance of the BatchErrorDetail class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the BatchErrorDetail class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.Key">
            <summary>
            Gets or sets an identifier specifying the meaning of the Value
            property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail.Value">
            <summary>
            Gets or sets the additional information included with the error
            response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException">
            <summary>
            Exception thrown for an invalid response with BatchError information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.#ctor">
            <summary>
            Initializes a new instance of the BatchErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BatchErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.BatchErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the BatchErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Certificate">
            <summary>
            A certificate that can be installed on compute nodes and can be used
            to authenticate operations on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Certificate.#ctor">
            <summary>
            Initializes a new instance of the Certificate class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Certificate.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError)">
            <summary>
            Initializes a new instance of the Certificate class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Thumbprint">
            <summary>
            Get or sets the X.509 thumbprint of the certificate. This is a
            sequence of up to 40 hex digits (it may include spaces but these
            are removed).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm used to derive the thumbprint. This
            must be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.Url">
            <summary>
            Gets or sets the URL of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.State">
            <summary>
            Gets or sets the current state of the certificate. Possible values
            include: 'active', 'deleting', 'deletefailed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.StateTransitionTime">
            <summary>
            Gets or sets the time at which the certificate entered its current
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PreviousState">
            <summary>
            Gets or sets the previous state of the certificate. This property
            is not set if the certificate is in its initial Active state.
            Possible values include: 'active', 'deleting', 'deletefailed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the certificate entered its
            previous state.  This property is not set if the certificate is
            in its initial Active state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.PublicData">
            <summary>
            Gets or sets the public part of the certificate as a base-64
            encoded .cer file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Certificate.DeleteCertificateError">
            <summary>
            Gets or sets the error that occurred on the last attempt to delete
            this certificate.  This property is set only if the certificate
            is in the deletefailed state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the CertificateAddHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter">
            <summary>
            A certificate that can be installed on compute nodes and can be used
            to authenticate operations on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor">
            <summary>
            Initializes a new instance of the CertificateAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateFormat},System.String)">
            <summary>
            Initializes a new instance of the CertificateAddParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Thumbprint">
            <summary>
            Get or sets the X.509 thumbprint of the certificate. This is a
            sequence of up to 40 hex digits (it may include spaces but these
            are removed).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm used to derive the thumbprint. This
            must be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Data">
            <summary>
            Gets or sets the base64-encoded contents of the certificate. The
            maximum size is 10KB. This property is not populated by the Get
            Certificate operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.CertificateFormat">
            <summary>
            Gets or sets the format of the certificate data. Possible values
            include: 'pfx', 'cer', 'unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Password">
            <summary>
            Gets or sets the password to access the certificate's private key.
            This property is not populated by the Get Certificate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders">
            <summary>
            Defines headers for CancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the CertificateCancelDeletionHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateDeleteHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateFormat">
            <summary>
            Defines values for CertificateFormat.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.#ctor">
            <summary>
            Initializes a new instance of the CertificateListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the CertificateListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateReference">
            <summary>
            A reference to a certificate to be installed on compute nodes in a
            pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}})">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Thumbprint">
            <summary>
            Gets or sets the thumbprint of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm with which the thumbprint is
            associated.  This must be sha1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreLocation">
            <summary>
            Gets or sets the location of the certificate store on the compute
            node into which to install the certificate. The default value is
            CurrentUser. Possible values include: 'currentuser',
            'localmachine', 'unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.StoreName">
            <summary>
            Gets or sets the name of the certificate store on the compute node
            into which to install the certificate. The default value is My.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Visibility">
            <summary>
            Gets or sets which user accounts on the compute node should have
            access to the private data of the certificate. This may be any
            subset of the values 'starttask', 'task' and 'remoteuser',
            separated by commas. The default is all accounts, corresponding
            to the string 'starttask,task,remoteuser'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CertificateReference.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateState">
            <summary>
            Defines values for CertificateState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateStoreLocation">
            <summary>
            Defines values for CertificateStoreLocation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility">
            <summary>
            Defines values for CertificateVisibility.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJob">
            <summary>
            An Azure Batch job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor">
            <summary>
            Initializes a new instance of the CloudJob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobState},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobStatistics)">
            <summary>
            Initializes a new instance of the CloudJob class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Id">
            <summary>
            Gets or sets a string that uniquely identifies the job within the
            account. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters. It is common to use a GUID for the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.DisplayName">
            <summary>
            Gets or sets the display name for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.UsesTaskDependencies">
            <summary>
            Gets or sets the flag that determines if this job will use tasks
            with dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Url">
            <summary>
            Gets or sets the URL of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ETag">
            <summary>
            Gets or sets the ETag of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.LastModified">
            <summary>
            Gets or sets the last modified time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CreationTime">
            <summary>
            Gets or sets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.State">
            <summary>
            Gets or sets the current state of the job. Possible values
            include: 'active', 'disabling', 'disabled', 'enabling',
            'terminating', 'completed', 'deleting'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.StateTransitionTime">
            <summary>
            Gets or sets the time at which the job entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousState">
            <summary>
            Gets or sets the previous state of the job. This property is not
            set if the job is in its initial Active state. Possible values
            include: 'active', 'disabling', 'disabled', 'enabling',
            'terminating', 'completed', 'deleting'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the job entered its previous state.
            This property is not set if the job is in its initial Active
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Priority">
            <summary>
            Gets or sets the priority of the job. Priority values can range
            from -1000 to 1000, with -1000 being the lowest priority and 1000
            being the highest priority. The default value is 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when the
            job is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.CommonEnvironmentSettings">
            <summary>
            Gets or sets the list of common environment variable settings.
            These environment variables are set for all tasks in the job
            (including the Job Manager, Job Preparation and Job Release
            tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the jobâ€™s
            tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.ExecutionInfo">
            <summary>
            Gets or sets the execution information for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Stats">
            <summary>
            Gets or sets resource usage statistics for the entire lifetime of
            the job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJob.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run
            jobs and a specification used to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.#ctor">
            <summary>
            Initializes a new instance of the CloudJobSchedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobScheduleState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.JobScheduleState},System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics)">
            <summary>
            Initializes a new instance of the CloudJobSchedule class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Id">
            <summary>
            Gets or sets a string that uniquely identifies the schedule within
            the account. A GUID is recommended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.DisplayName">
            <summary>
            Gets or sets the display name for the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Url">
            <summary>
            Gets or sets the URL of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.ETag">
            <summary>
            Gets or sets the ETag of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.LastModified">
            <summary>
            Gets or sets the last modified time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.CreationTime">
            <summary>
            Gets or sets the creation time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.State">
            <summary>
            Gets or sets the current state of the job schedule. Possible
            values include: 'active', 'completed', 'disabled', 'terminating',
            'deleting'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.StateTransitionTime">
            <summary>
            Gets or sets the time at which the job schedule entered the
            current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.PreviousState">
            <summary>
            Gets or sets the previous state of the job schedule. Possible
            values include: 'active', 'completed', 'disabled', 'terminating',
            'deleting'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the job schedule entered its
            previous state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Schedule">
            <summary>
            Gets or sets the schedule according to which jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.JobSpecification">
            <summary>
            Gets or sets the details of the jobs to be created on this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.ExecutionInfo">
            <summary>
            Gets or sets information about jobs that have been and will be run
            under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the
            schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Stats">
            <summary>
            Gets or sets the lifetime resource usage statistics for the job
            schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudJobSchedule.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudPool">
            <summary>
            A pool in the Azure Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor">
            <summary>
            Initializes a new instance of the CloudPool class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.PoolState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.ResizeError,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},Microsoft.Azure.Batch.Protocol.Models.AutoScaleRun,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.PoolStatistics)">
            <summary>
            Initializes a new instance of the CloudPool class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Id">
            <summary>
            Gets or sets a string that uniquely identifies the pool within the
            account. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Url">
            <summary>
            Gets or sets the URL of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ETag">
            <summary>
            Gets or sets the ETag of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.LastModified">
            <summary>
            Gets or sets the last modified time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CreationTime">
            <summary>
            Gets or sets the creation time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.State">
            <summary>
            Gets or sets the current state of the pool. Possible values
            include: 'active', 'deleting', 'upgrading'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StateTransitionTime">
            <summary>
            Gets or sets the time at which the pool entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationState">
            <summary>
            Gets or sets whether the pool is resizing. Possible values
            include: 'steady', 'resizing', 'stopping'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AllocationStateTransitionTime">
            <summary>
            Gets or sets the time at which the pool entered its current
            allocation state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool.  All VMs in
            a pool are the same size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool. This
            property and VirtualMachineConfiguration are mutually exclusive
            and one of the properties must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool. This
            property and CloudServiceConfiguration are mutually exclusive and
            one of the properties must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool. In a Get Pool operation, this is the timeout for the most
            recent resize operation. The default value is 10 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ResizeError">
            <summary>
            Gets or sets details of any error encountered while performing the
            last resize on the pool. This property is set only if an error
            occurred during the last pool resize, and only when the pool
            AllocationState is Steady.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CurrentDedicated">
            <summary>
            Gets or sets the number of compute nodes currently in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool. This
            property must have the default value if EnableAutoScale is true.
            It is required if EnableAutoScale is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableAutoScale">
            <summary>
            Gets or sets whether the pool size should automatically adjust
            over time. If true, the AutoScaleFormula property must be set. If
            false, the TargetDedicated property must be set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval for the desired AutoScale evaluation
            period in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.AutoScaleRun">
            <summary>
            Gets or sets the results and errors from the last execution of the
            autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.EnableInterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.StartTask">
            <summary>
            Gets or sets a task specified to run on each compute node as it
            joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.CertificateReferences">
            <summary>
            Gets or sets the list of certificates to be installed on each
            compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.ApplicationPackageReferences">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.TaskSchedulingPolicy">
            <summary>
            Gets or sets how the Batch service distributes tasks between
            compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool
            as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Stats">
            <summary>
            Gets or sets utilization and resource usage statistics for the
            entire lifetime of the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudPool.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration">
            <summary>
            The configuration of cloud service for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the CloudServiceConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CloudServiceConfiguration class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.OsFamily">
            <summary>
            Gets or sets the Azure Guest OS family to be installed on the
            virtual machines in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the
            virtual machines in the pool. The default value is * which
            specifies the latest operating system version for the specified
            OS family.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.CurrentOSVersion">
            <summary>
            Gets or sets the Azure Guest OS Version currently installed on the
            virtual machines in the pool. This may differ from
            TargetOSVersion if the pool state is Upgrading.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTask">
            <summary>
            An Azure Batch task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor">
            <summary>
            Initializes a new instance of the CloudTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskStatistics,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies)">
            <summary>
            Initializes a new instance of the CloudTask class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the task within the
            job. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DisplayName">
            <summary>
            Gets or sets a display name for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Url">
            <summary>
            Gets or sets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ETag">
            <summary>
            Gets or sets the ETag of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.LastModified">
            <summary>
            Gets or sets the last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CreationTime">
            <summary>
            Gets or sets the creation time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.State">
            <summary>
            Gets or sets the current state of the task. Possible values
            include: 'active', 'preparing', 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.StateTransitionTime">
            <summary>
            Gets or sets the time at which the task entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousState">
            <summary>
            Gets or sets the previous state of the task. This property is not
            set if the task is in its initial Active state. Possible values
            include: 'active', 'preparing', 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the task entered its previous
            state. This property is not set if the task is in its initial
            Active state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.CommandLine">
            <summary>
            Gets or sets the command line of the task. For multi-instance
            tasks, the command line is executed on the primary subtask after
            all the subtasks have finished executing the coordianation
            command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the
            compute node before running the command line. For multi-instance
            tasks, the resource files will only be downloaded to the compute
            node on which the primary subtask is executed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.AffinityInfo">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service
            to select a compute node on which to start the new task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.RunElevated">
            <summary>
            Gets or sets whether to run the task in elevated mode.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.ExecutionInfo">
            <summary>
            Gets or sets information about the execution of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.NodeInfo">
            <summary>
            Gets or sets information about the compute node on which the task
            ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.MultiInstanceSettings">
            <summary>
            Gets or sets information about how to run the multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Stats">
            <summary>
            Gets or sets resource usage statistics for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTask.DependsOn">
            <summary>
            Gets or sets any dependencies this task has.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTask.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult">
            <summary>
            Response to a CloudTaskOperations.ListSubtasks request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult.#ctor">
            <summary>
            Initializes a new instance of the CloudTaskListSubtasksResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation})">
            <summary>
            Initializes a new instance of the CloudTaskListSubtasksResult
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.CloudTaskListSubtasksResult.Value">
            <summary>
            Gets or sets the list of information of subtasks.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNode">
            <summary>
            A compute node in the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.#ctor">
            <summary>
            Initializes a new instance of the ComputeNode class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeState},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.SchedulingState},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskInformation},Microsoft.Azure.Batch.Protocol.Models.StartTask,Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Initializes a new instance of the ComputeNode class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Id">
            <summary>
            Gets or sets the id of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Url">
            <summary>
            Gets or sets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.State">
            <summary>
            Gets or sets the current state of the compute node. Possible
            values include: 'idle', 'rebooting', 'reimaging', 'running',
            'unusable', 'creating', 'starting', 'waitingforstarttask',
            'starttaskfailed', 'unknown', 'leavingpool', 'offline'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.SchedulingState">
            <summary>
            Gets or sets whether the compute node should be available for task
            scheduling. Possible values include: 'enabled', 'disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StateTransitionTime">
            <summary>
            Gets or sets the time at which the compute node entered its
            current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.LastBootTime">
            <summary>
            Gets or sets the time at which the compute node was started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.AllocationTime">
            <summary>
            Gets or sets the time at which this compute node was allocated to
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.IpAddress">
            <summary>
            Gets or sets the IP address that other compute nodes can use to
            communicate with this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.AffinityId">
            <summary>
            Gets or sets an identifier which can be passed in the Add Task API
            to request that the task be scheduled close to this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.VmSize">
            <summary>
            Gets or sets the size of the virtual machine hosting the compute
            node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.TotalTasksRun">
            <summary>
            Gets or sets the total number of job tasks completed on the
            compute node. This includes Job Preparation, Job Release and Job
            Manager tasks, but not the pool start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.RecentTasks">
            <summary>
            Gets or sets the list of tasks that are currently running on the
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StartTask">
            <summary>
            Gets or sets the task specified to run on the compute node as it
            joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.StartTaskInfo">
            <summary>
            Gets or sets runtime information about the execution of the start
            task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.CertificateReferences">
            <summary>
            Gets or sets the list of certificates installed on the compute
            node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Errors">
            <summary>
            Gets or sets the list of errors that are currently being
            encountered by the compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNode.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders">
            <summary>
            Defines headers for AddUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeAddUserHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeallocationOption">
            <summary>
            Defines values for ComputeNodeDeallocationOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders">
            <summary>
            Defines headers for DeleteUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeDeleteUserHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders">
            <summary>
            Defines headers for DisableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the
            ComputeNodeDisableSchedulingHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders">
            <summary>
            Defines headers for EnableScheduling operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the
            ComputeNodeEnableSchedulingHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError">
            <summary>
            An error encountered by a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the ComputeNodeError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.Code">
            <summary>
            Gets or sets an identifier for the compute node error.  Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.Message">
            <summary>
            Gets or sets a message describing the compute node error, intended
            to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError.ErrorDetails">
            <summary>
            Gets or sets the list of additional error details related to the
            compute node error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeFillType">
            <summary>
            Defines values for ComputeNodeFillType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders">
            <summary>
            Defines headers for GetRemoteDesktop operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteDesktopHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders">
            <summary>
            Defines headers for GetRemoteLoginSettings operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult">
            <summary>
            Response to a ComputeNodeOperation.GetRemoteLoginSettings request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.#ctor">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the
            ComputeNodeGetRemoteLoginSettingsResult class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.RemoteLoginIPAddress">
            <summary>
            Gets or sets the IP address used for remote login to the compute
            node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.RemoteLoginPort">
            <summary>
            Gets or sets the port used for remote login to the compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsResult.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation">
            <summary>
            Information about the compute node on which a task ran.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.AffinityId">
            <summary>
            Gets or sets an identifier for the compute node on which the task
            ran, which can be passed when adding a task to request that the
            task be scheduled close to this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.NodeUrl">
            <summary>
            Gets or sets the URL of the node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.PoolId">
            <summary>
            Gets or sets the id of the pool on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.NodeId">
            <summary>
            Gets or sets the id of the node on which the task ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.TaskRootDirectory">
            <summary>
            Gets or sets the root directory of the task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation.TaskRootDirectoryUrl">
            <summary>
            Gets or sets the URL to the root directory of the task on the
            compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ComputeNodeListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders">
            <summary>
            Defines headers for Reboot operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeRebootHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeRebootHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption">
            <summary>
            Defines values for ComputeNodeRebootOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders">
            <summary>
            Defines headers for Reimage operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeReimageHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeReimageHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption">
            <summary>
            Defines values for ComputeNodeReimageOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeState">
            <summary>
            Defines values for ComputeNodeState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders">
            <summary>
            Defines headers for UpdateUser operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeUpdateUserHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser">
            <summary>
            An user account on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor">
            <summary>
            Initializes a new instance of the ComputeNodeUser class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Initializes a new instance of the ComputeNodeUser class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Name">
            <summary>
            Gets or sets the user name of the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.IsAdmin">
            <summary>
            Gets or sets whether the account should be an administrator on the
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.ExpiryTime">
            <summary>
            Gets or sets the time at which the account should expire. If
            omitted, the default is 1 day from the current time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Password">
            <summary>
            Gets or sets the password of the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.SshPublicKey">
            <summary>
            Gets or sets the SSH public key that can be used for remote login
            to the compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError">
            <summary>
            An error encountered by the Batch service when deleting a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.#ctor">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Code">
            <summary>
            Gets or sets an identifier for the certificate deletion error.
            Codes are invariant and are intended to be consumed
            programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Message">
            <summary>
            Gets or sets a message describing the certificate deletion error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.DeleteCertificateError.Values">
            <summary>
            Gets or sets a list of additional error details related to the
            certificate deletion error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption">
            <summary>
            Defines values for DisableComputeNodeSchedulingOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.DisableJobOption">
            <summary>
            Defines values for DisableJobOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.#ctor">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Name">
            <summary>
            Gets or sets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting.Value">
            <summary>
            Gets or sets the value of the environment variable.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage">
            <summary>
            An error message received in an Azure Batch error response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.#ctor">
            <summary>
            Initializes a new instance of the ErrorMessage class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ErrorMessage class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.Lang">
            <summary>
            Gets or sets the language code of the error message
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ErrorMessage.Value">
            <summary>
            Gets or sets the text of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders">
            <summary>
            Defines headers for DeleteFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the FileDeleteFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders">
            <summary>
            Defines headers for DeleteFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the FileDeleteFromTaskHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders">
            <summary>
            Defines headers for ListFromComputeNode operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromComputeNodeHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders">
            <summary>
            Defines headers for ListFromTask operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileListFromTaskHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileListFromTaskHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.FileProperties">
            <summary>
            The properties of a file on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.#ctor">
            <summary>
            Initializes a new instance of the FileProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.#ctor(System.DateTime,System.Int64,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Initializes a new instance of the FileProperties class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.CreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.LastModified">
            <summary>
            Gets or sets the time at which the file was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.ContentLength">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.FileProperties.FileMode">
            <summary>
            Gets or sets the file mode attribute in octal format. This
            property will be returned only from a Linux compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.FileProperties.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ImageReference">
            <summary>
            The information about the platform or marketplace image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ImageReference.#ctor">
            <summary>
            Initializes a new instance of the ImageReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ImageReference.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ImageReference class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Publisher">
            <summary>
            Gets or sets the publisher of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Offer">
            <summary>
            Gets or sets the offer of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Sku">
            <summary>
            Gets or sets the SKU of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Version">
            <summary>
            Gets or sets the version of the image. A value of 'latest' can be
            specified to select the latest version of an image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ImageReference.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobAddHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter">
            <summary>
            An Azure Batch job to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.#ctor">
            <summary>
            Initializes a new instance of the JobAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobAddParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the job within the
            account. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters. It is common to use a GUID for the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.DisplayName">
            <summary>
            Gets or sets the display name for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Priority">
            <summary>
            Gets or sets the priority of the job. Priority values can range
            from -1000 to 1000, with -1000 being the lowest priority and 1000
            being the highest priority. The default value is 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Constraints">
            <summary>
            Gets or sets the execution constraints for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when the
            job is started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.CommonEnvironmentSettings">
            <summary>
            Gets or sets the list of common environment variable settings.
            These environment variables are set for all tasks in the job
            (including the Job Manager, Job Preparation and Job Release
            tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the jobâ€™s
            tasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the job as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.UsesTaskDependencies">
            <summary>
            Gets or sets the flag that determines if this job will use tasks
            with dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobAddParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobConstraints">
            <summary>
            Specifies the execution constraints for jobs created on a schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor">
            <summary>
            Initializes a new instance of the JobConstraints class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the JobConstraints class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the job may run,
            measured from the time the job starts. If the job does not
            complete within the time limit, the Batch service terminates it
            and any tasks that are still running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times each task may be retried.
            The Batch service retries a task if its exit code is nonzero.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobDeleteHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDeleteHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders">
            <summary>
            Defines headers for Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobDisableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobDisableHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter">
            <summary>
            Parameters for a CloudJobOperations.Disable request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor">
            <summary>
            Initializes a new instance of the JobDisableParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.DisableJobOption)">
            <summary>
            Initializes a new instance of the JobDisableParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.DisableTasks">
            <summary>
            Sets what to do with active tasks associated with the job.
            Possible values include: 'requeue', 'terminate', 'wait'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobDisableParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders">
            <summary>
            Defines headers for Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobEnableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobEnableHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobEnableHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation">
            <summary>
            Contains information about the execution of a job in the Azure Batch
            service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the JobExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError,System.String)">
            <summary>
            Initializes a new instance of the JobExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.StartTime">
            <summary>
            Gets or sets the start time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.EndTime">
            <summary>
            Gets or sets the completion time of the job. This property is set
            only if the job is in the completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.PoolId">
            <summary>
            Gets or sets the id of the pool to which this job is assigned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.SchedulingError">
            <summary>
            Gets or sets details of any error encountered by the service in
            starting the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.TerminateReason">
            <summary>
            Gets or sets a string describing the reason the job ended.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobExecutionInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders">
            <summary>
            Defines headers for GetAllJobsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            JobGetAllJobsLifetimeStatisticsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobGetAllJobsLifetimeStatisticsHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders">
            <summary>
            Defines headers for ListFromJobSchedule operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListFromJobScheduleHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders">
            <summary>
            Defines headers for ListPreparationAndReleaseTaskStatus operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobListPreparationAndReleaseTaskStatusHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask">
            <summary>
            Specifies details of a Job Manager task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor">
            <summary>
            Initializes a new instance of the JobManagerTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobManagerTask class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the Job Manager
            task. A GUID is recommended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.DisplayName">
            <summary>
            Gets or sets the display name of the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.CommandLine">
            <summary>
            Gets or sets the command line of the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the
            compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the Job
            Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.Constraints">
            <summary>
            Gets or sets constraints that apply to the Job Manager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.KillJobOnCompletion">
            <summary>
            Gets or sets whether completion of the Job Manager task signifies
            completion of the entire job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunElevated">
            <summary>
            Gets or sets whether to run the Job Manager task in elevated mode.
            The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobManagerTask.RunExclusive">
            <summary>
            Gets or sets whether the Job Manager task requires exclusive use
            of the compute node where it runs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders">
            <summary>
            Defines headers for Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobPatchHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobPatchHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter">
            <summary>
            Parameters for a CloudJobOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.#ctor">
            <summary>
            Initializes a new instance of the JobPatchParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobPatchParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Priority">
            <summary>
            Sets the priority of the job. Priority values can range from -1000
            to 1000, with -1000 being the lowest priority and 1000 being the
            highest priority. If omitted, the priority of the job is left
            unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Constraints">
            <summary>
            Sets the execution constraints for the job. If omitted, the
            existing execution constraints are left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.PoolInfo">
            <summary>
            Sets the pool on which the Batch service runs the job's tasks. If
            omitted, the job continues to run on its current pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Metadata">
            <summary>
            Sets a list of name-value pairs associated with the job as
            metadata. If omitted, the existing job metadata is left unchanged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation">
            <summary>
            The status of the Job Preparation and Job Release tasks on a
            particular compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobPreparationAndReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation)">
            <summary>
            Initializes a new instance of the
            JobPreparationAndReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.PoolId">
            <summary>
            Gets or sets the id of the pool containing the compute node to
            which this entry refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeId">
            <summary>
            Gets or sets the id of the compute node to which this entry refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.NodeUrl">
            <summary>
            Gets or sets the URL of the compute node to which this entry
            refers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInfo">
            <summary>
            Gets or sets information about the execution status of the Job
            Preparation task on this compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInfo">
            <summary>
            Gets or sets information about the execution status of the Job
            Release task on this compute node. This property is set only if
            the Job Release task has run on the node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationAndReleaseTaskExecutionInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask">
            <summary>
            A Job Preparation task to run before any tasks of the job on any given
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor">
            <summary>
            Initializes a new instance of the JobPreparationTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobPreparationTask class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the job preparation
            task within the job. The id can contain any combination of
            alphanumeric characters including hyphens and underscores and
            cannot contain more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.CommandLine">
            <summary>
            Gets or sets the command line of the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the
            compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the Job
            Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.Constraints">
            <summary>
            Gets or sets constraints that apply to the Job Preparation task..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.WaitForSuccess">
            <summary>
            Gets or sets whether the Batch Service should wait for the Job
            Preparation task to complete successfully before scheduling any
            other tasks of the job on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RunElevated">
            <summary>
            Gets or sets whether to run the Job Preparation task in elevated
            mode. The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask.RerunOnNodeRebootAfterSuccess">
            <summary>
            Gets or sets whether the Batch service should rerun the Job
            Preparation task after a compute node reboots. The default value
            is true.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Preparation task on
            a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobPreparationTaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskState,System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            JobPreparationTaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.StartTime">
            <summary>
            Gets or sets the time at which the Job Preparation task started
            running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the Job Preparation task completed.
            This property is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.State">
            <summary>
            Gets or sets the current running state of the Job Preparation task
            on the compute node. Possible values include: 'running',
            'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets or sets the root directory of the Job Preparation task on the
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets or sets the URL to the root directory of the Job Preparation
            task on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the Job Preparation task. This
            property is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.SchedulingError">
            <summary>
            Gets or sets any error starting the Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.RetryCount">
            <summary>
            Gets or sets the number of times the Job Preparation task has been
            retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.LastRetryTime">
            <summary>
            Gets or sets the most recent time at which a retry of the Job
            Preparation task started running. This property is set only if
            the task was retried (i.e. retryCount is nonzero).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskExecutionInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobPreparationTaskState">
            <summary>
            Defines values for JobPreparationTaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask">
            <summary>
            A Job Release task to run on job completion on any compute node where
            the job has run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor">
            <summary>
            Initializes a new instance of the JobReleaseTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the JobReleaseTask class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.Id">
            <summary>
            Gets or sets a string that uniquely identifies the Job Release
            task within the job. The id can contain any combination of
            alphanumeric characters including hyphens and underscores and
            cannot contain more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.CommandLine">
            <summary>
            Gets or sets the command line of the Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the
            compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the Job
            Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the Job Release task
            may run on a given compute node, measured from the time the task
            starts. If the task does not complete within the time limit, the
            Batch service terminates it. The default value is 15 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RetentionTime">
            <summary>
            Gets or sets the minimum time to retain the working directory for
            the Job Release task on the compute node.  After this time, the
            Batch service may delete the working directory and all its
            contents. The default is infinite.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask.RunElevated">
            <summary>
            Gets or sets whether to run the Job Release task in elevated mode.
            The default value is false.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Release task on a
            compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the
            JobReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.#ctor(System.DateTime,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError)">
            <summary>
            Initializes a new instance of the
            JobReleaseTaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.StartTime">
            <summary>
            Gets or sets the time at which the Job Release task started
            running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the Job Release task completed.
            This property is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.State">
            <summary>
            Gets or sets the current running state of the Job Release task on
            the compute node. Possible values include: 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets or sets the root directory of the Job Release task on the
            compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets or sets the URL to the root directory of the Job Release task
            on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the Job Release task. This property
            is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.SchedulingError">
            <summary>
            Gets or sets any error starting the Job Release task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskExecutionInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobReleaseTaskState">
            <summary>
            Defines values for JobReleaseTaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleAddHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run
            jobs and a specification used to create each job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobScheduleAddParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the schedule within
            the account. A GUID is recommended.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.DisplayName">
            <summary>
            Gets or sets the display name for the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Schedule">
            <summary>
            Gets or sets the schedule according to which jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.JobSpecification">
            <summary>
            Gets or sets the details of the jobs to be created on this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the
            schedule as metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobScheduleDeleteHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders">
            <summary>
            Defines headers for Disable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleDisableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleDisableHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders">
            <summary>
            Defines headers for Enable operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleEnableHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleEnableHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation">
            <summary>
            Specifies how tasks should be run in a job associated with a job
            schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExecutionInformation
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.#ctor(System.Nullable{System.DateTime},Microsoft.Azure.Batch.Protocol.Models.RecentJob,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleExecutionInformation
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.NextRunTime">
            <summary>
            Gets or sets the next time at which a job will be created under
            this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.RecentJob">
            <summary>
            Gets or sets information about the most recent job under the job
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the schedule ended. This property
            is set only if the job schedule is in the completed state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders">
            <summary>
            Defines headers for Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleExistsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleExistsHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the JobScheduleListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders">
            <summary>
            Defines headers for Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulePatchHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobSchedulePatchHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter">
            <summary>
            Parameters for a CloudJobScheduleOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulePatchParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobSchedulePatchParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.Schedule">
            <summary>
            Sets the schedule according to which jobs will be created. If you
            do not specify this element, the existing schedule is not
            modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.JobSpecification">
            <summary>
            Sets the details of the jobs to be created on this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.Metadata">
            <summary>
            Sets a list of name-value pairs associated with the job schedule
            as metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleState">
            <summary>
            Defines values for JobScheduleState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics">
            <summary>
            The lifetime resource usage statistics for a job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.#ctor(System.String,System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int64,System.Int64,System.Double,System.Double,System.Int64,System.Int64,System.Int64,System.TimeSpan)">
            <summary>
            Initializes a new instance of the JobScheduleStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.Url">
            <summary>
            Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.UserCPUTime">
            <summary>
            Gets or sets the total user mode CPU time (summed across all cores
            and all compute nodes) consumed by all the tasks in all the jobs
            created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.KernelCPUTime">
            <summary>
            Gets or sets the total kernel mode CPU time (summed across all
            cores and all compute nodes) consumed by all the tasks in all the
            jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WallClockTime">
            <summary>
            Gets or sets the total wall clock time of all the tasks in all the
            jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.ReadIOps">
            <summary>
            Gets or sets the total number of I/O read operations performed by
            all the tasks in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WriteIOps">
            <summary>
            Gets or sets the total number of I/O write operations performed by
            all the tasks in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.ReadIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB of I/O read by all
            the tasks in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WriteIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB of I/O written by all
            the tasks in all the jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.NumSucceededTasks">
            <summary>
            Gets or sets the total number of tasks successfully completed
            during the given time range in jobs created under the schedule.
            A task completes successfully if it returns exit code 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.NumFailedTasks">
            <summary>
            Gets or sets the total number of tasks that failed during the
            given time range in jobs created under the schedule. A task fails
            if it exhausts its maximum retry count without returning exit
            code 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.NumTaskRetries">
            <summary>
            Gets or sets the total number of retries during the given time
            range on all the tasks in jobs created under the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.WaitTime">
            <summary>
            Gets or sets the total wait time of all the tasks in jobs created
            under the schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleStatistics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders">
            <summary>
            Defines headers for Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleTerminateHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleTerminateHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleUpdateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobScheduleUpdateHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter">
            <summary>
            Parameters for a CloudJobScheduleOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the JobScheduleUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.Schedule,Microsoft.Azure.Batch.Protocol.Models.JobSpecification,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobScheduleUpdateParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.Schedule">
            <summary>
            Sets the schedule according to which jobs will be created. If you
            do not specify this element, it is equivalent to passing the
            default schedule: that is, a single job scheduled to run
            immediately.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.JobSpecification">
            <summary>
            Sets details of the jobs to be created on this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.Metadata">
            <summary>
            Sets a list of name-value pairs associated with the job schedule
            as metadata. If you do not specify this element, it takes the
            default value of an empty list; in effect, any existing metadata
            is deleted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError">
            <summary>
            An error encountered by the Batch service when scheduling a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.#ctor">
            <summary>
            Initializes a new instance of the JobSchedulingError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.#ctor(Microsoft.Azure.Batch.Protocol.Models.SchedulingErrorCategory,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the JobSchedulingError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Category">
            <summary>
            Gets or sets the category of the job scheduling error. Possible
            values include: 'usererror', 'servererror', 'unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Code">
            <summary>
            Gets or sets an identifier for the job scheduling error.  Codes
            are invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Message">
            <summary>
            Gets or sets a message describing the job scheduling error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Details">
            <summary>
            Gets or sets a list of additional error details related to the
            scheduling error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSchedulingError.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobSpecification">
            <summary>
            Specifies details of the jobs to be created on a schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.#ctor">
            <summary>
            Initializes a new instance of the JobSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,Microsoft.Azure.Batch.Protocol.Models.JobManagerTask,Microsoft.Azure.Batch.Protocol.Models.JobPreparationTask,Microsoft.Azure.Batch.Protocol.Models.JobReleaseTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobSpecification class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Priority">
            <summary>
            Gets or sets the priority of jobs created under this schedule.
            Priority values can range from -1000 to 1000, with -1000 being
            the lowest priority and 1000 being the highest priority. The
            default value is 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.DisplayName">
            <summary>
            Gets or sets the display name for jobs created under this
            schedule. It need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.UsesTaskDependencies">
            <summary>
            Gets or sets the flag that determines if this job will use tasks
            with dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Constraints">
            <summary>
            Gets or sets the execution constraints for jobs created under this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobManagerTask">
            <summary>
            Gets or sets the details of a Job Manager task to be launched when
            a job is started under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task for jobs created under this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task for jobs created under this
            schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings.
            These environment variables are set for all tasks in jobs
            created under this schedule (including the Job Manager, Job
            Preparation and Job Release tasks).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.PoolInfo">
            <summary>
            Gets or sets the pool on which the Batch service runs the tasks of
            jobs created under this schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with each job
            created under this schedule as metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobSpecification.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobState">
            <summary>
            Defines values for JobState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobStatistics">
            <summary>
            Resource usage statistics for a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.#ctor">
            <summary>
            Initializes a new instance of the JobStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.#ctor(System.String,System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int64,System.Int64,System.Double,System.Double,System.Int64,System.Int64,System.Int64,System.TimeSpan)">
            <summary>
            Initializes a new instance of the JobStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.Url">
            <summary>
            Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between StartTime and
            LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.UserCPUTime">
            <summary>
            Gets or sets the total user mode CPU time (summed across all cores
            and all compute nodes) consumed by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.KernelCPUTime">
            <summary>
            Gets or sets the total kernel mode CPU time (summed across all
            cores and all compute nodes) consumed by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WallClockTime">
            <summary>
            Gets or sets the total wall clock time of all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.ReadIOps">
            <summary>
            Gets or sets the total number of I/O read operations performed by
            all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WriteIOps">
            <summary>
            Gets or sets the total number of I/O write operations performed by
            all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.ReadIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB of I/O read by all
            the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WriteIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB of I/O written by all
            the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.NumSucceededTasks">
            <summary>
            Gets or sets the total number of tasks successfully completed in
            the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.NumFailedTasks">
            <summary>
            Gets or sets the total number of tasks in the job that failed
            during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.NumTaskRetries">
            <summary>
            Gets or sets the total number of retries on all the tasks in the
            job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.WaitTime">
            <summary>
            Gets or sets the total wait time of all the tasks in the job.  The
            wait time for a task is defined as the elapsed time between the
            creation of the task creation and the start of task execution.
            This value is reported only in the account lifetime statistics;
            it is not included in individual job statistics.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobStatistics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders">
            <summary>
            Defines headers for Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobTerminateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobTerminateHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter">
            <summary>
            Parameters for a CloudJobOperations.Terminate request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter.#ctor">
            <summary>
            Initializes a new instance of the JobTerminateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JobTerminateParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobTerminateParameter.TerminateReason">
            <summary>
            Sets the text you want to appear as the job's TerminateReason. The
            default is 'UserTerminate'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.#ctor">
            <summary>
            Initializes a new instance of the JobUpdateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the JobUpdateHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter">
            <summary>
            Parameters for a CloudJobOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the JobUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.PoolInformation,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.JobConstraints,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the JobUpdateParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Priority">
            <summary>
            Sets the priority of the job. Priority values can range from -1000
            to 1000, with -1000 being the lowest priority and 1000 being the
            highest priority. If omitted, the priority of the job is left
            unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Constraints">
            <summary>
            Sets the execution constraints for the job. If omitted, the
            existing execution constraints are left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.PoolInfo">
            <summary>
            Sets the pool on which the Batch service runs the job's tasks. If
            omitted, the job continues to run on its current pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Metadata">
            <summary>
            Sets a list of name-value pairs associated with the job as
            metadata. If omitted, the existing job metadata is left unchanged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.MetadataItem">
            <summary>
            A metadata item associated with an Azure Batch resource. The Batch
            service does not assign any meaning to metadata; it is solely for the
            use of user code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.#ctor">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Name">
            <summary>
            Gets or sets the name of the metadata item.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MetadataItem.Value">
            <summary>
            Gets or sets the value of the metadata item.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings">
            <summary>
            Information about the settings required for multi-instance task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.#ctor">
            <summary>
            Initializes a new instance of the MultiInstanceSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.#ctor(System.Int32,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Initializes a new instance of the MultiInstanceSettings class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.NumberOfInstances">
            <summary>
            Gets or sets the number of compute node instances used for
            multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.CoordinationCommandLine">
            <summary>
            Gets or sets the command to be run on the compute node instances
            to setup coordination among the subtasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.CommonResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download on all
            subtasks.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NameValuePair">
            <summary>
            Represents a name-value pair.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.#ctor">
            <summary>
            Initializes a new instance of the NameValuePair class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the NameValuePair class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.Name">
            <summary>
            Gets or sets the name in the name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NameValuePair.Value">
            <summary>
            Gets or sets the value in the name-value pair.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku">
            <summary>
            Information about supported node agent SKU.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor">
            <summary>
            Initializes a new instance of the NodeAgentSku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ImageReference},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.OSType})">
            <summary>
            Initializes a new instance of the NodeAgentSku class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.Id">
            <summary>
            Gets or sets the node agent SKU id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.VerifiedImageReferences">
            <summary>
            Gets the list of images verified to be compatible with the node
            agent SKU. This collection is not exhaustive; the node agent SKU
            may be compatible with other images.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeAgentSku.OsType">
            <summary>
            Gets or sets the type of OS that the node Agent SKU is targeted
            against. Possible values include: 'linux', 'windows', 'unmapped'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter">
            <summary>
            Parameters for a ComputeNodeOperations.DisableScheduling request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeDisableSchedulingParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption})">
            <summary>
            Initializes a new instance of the NodeDisableSchedulingParameter
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeDisableSchedulingParameter.NodeDisableSchedulingOption">
            <summary>
            Gets or sets what to do with currently running tasks when disable
            task scheduling on the compute node. The default value is
            requeue. Possible values include: 'requeue', 'terminate',
            'taskcompletion'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeFile">
            <summary>
            Information about a file or directory on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor">
            <summary>
            Initializes a new instance of the NodeFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.#ctor(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileProperties)">
            <summary>
            Initializes a new instance of the NodeFile class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Name">
            <summary>
            Gets or sets the file path.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Url">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.IsDirectory">
            <summary>
            Gets or sets whether the object represents a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Properties">
            <summary>
            Gets or sets the file properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeFile.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter">
            <summary>
            Parameters for a ComputeNodeOperations.Reboot request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeRebootParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption})">
            <summary>
            Initializes a new instance of the NodeRebootParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRebootParameter.NodeRebootOption">
            <summary>
            Sets when to reboot the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values
            include: 'requeue', 'terminate', 'taskcompletion', 'retaineddata'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter">
            <summary>
            Parameters for a ComputeNodeOperations.Reimage request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeReimageParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption})">
            <summary>
            Initializes a new instance of the NodeReimageParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.NodeReimageOption">
            <summary>
            Sets when to reimage the compute node and what to do with
            currently running tasks. The default value is requeue. Possible
            values include: 'requeue', 'terminate', 'taskcompletion',
            'retaineddata'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter">
            <summary>
            Parameters for a ComputeNodeOperations.Remove request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeRemoveParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeallocationOption})">
            <summary>
            Initializes a new instance of the NodeRemoveParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.NodeList">
            <summary>
            Sets a list containing the id of the compute nodes to be removed
            from the specified pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.ResizeTimeout">
            <summary>
            Sets the timeout for removal of compute nodes to the pool. The
            default value is 10 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.NodeDeallocationOption">
            <summary>
            Sets when compute nodes may be removed from the pool. Possible
            values include: 'requeue', 'terminate', 'taskcompletion',
            'retaineddata'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter">
            <summary>
            Parameters for a ComputeNodeOperations.UpdateUser request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.#ctor">
            <summary>
            Initializes a new instance of the NodeUpdateUserParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.#ctor(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the NodeUpdateUserParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.Password">
            <summary>
            Sets the password of the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.ExpiryTime">
            <summary>
            Sets the time at which the account should expire. If omitted, the
            default is 1 day from the current time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter.SshPublicKey">
            <summary>
            Gets or sets the SSH public key that can be used for remote login
            to the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.OSType">
            <summary>
            Defines values for OSType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolAddHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter">
            <summary>
            A pool in the Azure Batch service to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.#ctor(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the PoolAddParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the pool within the
            account. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool.  All VMs in
            a pool are the same size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool. This
            property and VirtualMachineConfiguration are mutually exclusive
            and one of the properties must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool. This
            property and CloudServiceConfiguration are mutually exclusive and
            one of the properties must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool. In a Get Pool operation, this is the timeout for the most
            recent resize operation. The default value is 10 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool. This
            property must have the default value if EnableAutoScale is true.
            It is required if EnableAutoScale is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.EnableAutoScale">
            <summary>
            Gets or sets whether the pool size should automatically adjust
            over time. If true, the AutoScaleFormula property must be set. If
            false, the TargetDedicated property must be set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval for the desired autoscale evaluation
            period in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.EnableInterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.StartTask">
            <summary>
            Gets or sets a task specified to run on each compute node as it
            joins the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.CertificateReferences">
            <summary>
            Gets or sets the list of certificates to be installed on each
            compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.ApplicationPackageReferences">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.TaskSchedulingPolicy">
            <summary>
            Gets or sets how the Batch service distributes tasks between
            compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool
            as metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PoolDeleteHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDeleteHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders">
            <summary>
            Defines headers for DisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders">
            <summary>
            Defines headers for EnableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter">
            <summary>
            Parameters for a CloudPoolOperations.EnableAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.#ctor(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the PoolEnableAutoScaleParameter
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.AutoScaleFormula">
            <summary>
            Sets the formula for the desired number of compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval for the desired autoscale evaluation
            period in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders">
            <summary>
            Defines headers for EvaluateAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter">
            <summary>
            Parameters for a CloudJobOperations.EvaluateAutoScale request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolEvaluateAutoScaleParameter
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.AutoScaleFormula">
            <summary>
            Sets a formula for the desired number of compute nodes in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders">
            <summary>
            Defines headers for Exists operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolExistsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolExistsHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolExistsHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders">
            <summary>
            Defines headers for GetAllPoolsLifetimeStatistics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            PoolGetAllPoolsLifetimeStatisticsHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the
            PoolGetAllPoolsLifetimeStatisticsHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolInformation">
            <summary>
            Specifies how a job should be assigned to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.#ctor">
            <summary>
            Initializes a new instance of the PoolInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.#ctor(System.String,Microsoft.Azure.Batch.Protocol.Models.AutoPoolSpecification)">
            <summary>
            Initializes a new instance of the PoolInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.PoolId">
            <summary>
            Gets or sets the id of an existing pool. All the tasks of the job
            will run on the specified pool. You must specify either PoolId or
            AutoPoolSpecification, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.AutoPoolSpecification">
            <summary>
            Gets or sets characteristics for a temporary 'auto pool'. The
            Batch service will create this auto pool and run all of the tasks
            of the job on it, and will delete the pool once the job has
            completed. You must specify either PoolId or
            AutoPoolSpecification, but not both.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolLifetimeOption">
            <summary>
            Defines values for PoolLifetimeOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders">
            <summary>
            Defines headers for ListPoolUsageMetrics operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolListPoolUsageMetricsHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the PoolListPoolUsageMetricsHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders">
            <summary>
            Defines headers for Patch operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolPatchHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolPatchHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter">
            <summary>
            Parameters for a CloudPoolOperations.Patch request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolPatchParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the PoolPatchParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask">
            <summary>
            Sets a task to run on each compute node as it joins the pool. If
            omitted, any existing start task is left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences">
            <summary>
            Sets a list of certificates to be installed on each compute node
            in the pool. If omitted, any existing certificate references are
            left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences">
            <summary>
            Sets a list of application packages to be installed on each
            compute node in the pool. If omitted, any existing application
            package references are left unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata">
            <summary>
            Sets a list of name-value pairs associated with the pool as
            metadata. If omitted, any existing metadata is left unchanged.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders">
            <summary>
            Defines headers for RemoveNodes operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolRemoveNodesHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolRemoveNodesHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders">
            <summary>
            Defines headers for Resize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolResizeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolResizeHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter">
            <summary>
            Parameters for a CloudPoolOperations.Resize request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolResizeParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.#ctor(System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeallocationOption})">
            <summary>
            Initializes a new instance of the PoolResizeParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.TargetDedicated">
            <summary>
            Sets the desired number of compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.ResizeTimeout">
            <summary>
            Sets the timeout for allocation of compute nodes to the pool or
            removal of compute nodes from the pool. The default value is 10
            minutes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.NodeDeallocationOption">
            <summary>
            Sets when nodes may be removed from the pool, if the pool size is
            decreasing. Possible values include: 'requeue', 'terminate',
            'taskcompletion', 'retaineddata'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification">
            <summary>
            Specification for creating a new pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the PoolSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.#ctor(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CloudServiceConfiguration,Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Initializes a new instance of the PoolSpecification class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.VmSize">
            <summary>
            Gets or sets the size of the virtual machines in the pool. All VMs
            in a pool are the same size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool. This
            property and VirtualMachineConfiguration are mutually exclusive
            and one of the properties must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool. This
            property and CloudServiceConfiguration are mutually exclusive and
            one of the properties must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.EnableAutoScale">
            <summary>
            Gets or sets whether the pool size should automatically adjust
            over time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.AutoScaleFormula">
            <summary>
            Gets or sets the formula for the desired number of compute nodes
            in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval for the desired AutoScale evaluation
            period in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.EnableInterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the
            pool. The task runs when the node is added to the pool or when
            the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each
            compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.ApplicationPackageReferences">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool
            as metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolSpecification.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolState">
            <summary>
            Defines values for PoolState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics">
            <summary>
            Contains utilization and resource usage statistics for the lifetime of
            a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.#ctor">
            <summary>
            Initializes a new instance of the PoolStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.#ctor(System.String,System.DateTime,System.DateTime,Microsoft.Azure.Batch.Protocol.Models.UsageStatistics,Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics)">
            <summary>
            Initializes a new instance of the PoolStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.Url">
            <summary>
            Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.UsageStats">
            <summary>
            Gets or sets statistics related to pool usage information, such as
            the amount of core-time used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.ResourceStats">
            <summary>
            Gets or sets statistics related to resource consumption by compute
            nodes in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStatistics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders">
            <summary>
            Defines headers for StopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolStopResizeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolStopResizeHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders">
            <summary>
            Defines headers for UpdateProperties operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesHeaders
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesHeaders
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter">
            <summary>
            Parameters for a CloudPoolOperations.UpdateProperties request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},Microsoft.Azure.Batch.Protocol.Models.StartTask)">
            <summary>
            Initializes a new instance of the PoolUpdatePropertiesParameter
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.StartTask">
            <summary>
            Sets a task to run on each compute node as it joins the pool. If
            omitted, any existing start task is removed from the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.CertificateReferences">
            <summary>
            Sets a list of certificates to be installed on each compute node
            in the pool. If you specify an empty collection, any existing
            certificate references are removed from the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.ApplicationPackageReferences">
            <summary>
            Sets a list of application packages to be installed on each
            compute node in the pool. If you specify an empty collection, any
            existing application packages references are removed from the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.Metadata">
            <summary>
            Sets a list of name-value pairs associated with the pool as
            metadata. If you specify an empty collection, any existing
            metadata is removed from the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders">
            <summary>
            Defines headers for UpgradeOS operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.#ctor">
            <summary>
            Initializes a new instance of the PoolUpgradeOSHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the PoolUpgradeOSHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter">
            <summary>
            Parameters for a CloudPoolOperations.UpgradeOS request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.#ctor">
            <summary>
            Initializes a new instance of the PoolUpgradeOSParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolUpgradeOSParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.TargetOSVersion">
            <summary>
            Sets the Azure Guest OS version to be installed on the virtual
            machines in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics">
            <summary>
            Usage metrics for a pool across an aggregation interval.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor">
            <summary>
            Initializes a new instance of the PoolUsageMetrics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.#ctor(System.String,System.DateTime,System.DateTime,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the PoolUsageMetrics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.PoolId">
            <summary>
            Gets or sets the id of the pool whose metrics are being aggregated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.StartTime">
            <summary>
            Gets or sets the start time of the aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.EndTime">
            <summary>
            Gets or sets the end time of the aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool.  All VMs in
            a pool are the same size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.TotalCoreHours">
            <summary>
            Gets or sets the total core hours used in the pool during this
            aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataIngressGiB">
            <summary>
            Gets or sets the cross data center network ingress in GiB to the
            pool during this interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.DataEgressGiB">
            <summary>
            Gets or sets the cross data center network egress in GiB from the
            pool during this interval.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.PoolUsageMetrics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.RecentJob">
            <summary>
            Information about the most recent job to run under the job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.RecentJob.#ctor">
            <summary>
            Initializes a new instance of the RecentJob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.RecentJob.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RecentJob class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.RecentJob.Id">
            <summary>
            Gets or sets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.RecentJob.Url">
            <summary>
            Gets or sets the URL of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResizeError.#ctor">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResizeError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Code">
            <summary>
            Gets or sets an identifier for the pool resize error.  Codes are
            invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Message">
            <summary>
            Gets or sets a message describing the pool resize error, intended
            to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResizeError.Values">
            <summary>
            Gets or sets a list of additional error details related to the
            pool resize error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResourceFile">
            <summary>
            A file to be downloaded from Azure blob storage to a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.BlobSource">
            <summary>
            Gets or sets the URL of a blob in Azure storage. The Batch service
            downloads the blob to the specified file path. The URL must be
            readable using anonymous access.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FilePath">
            <summary>
            Gets or sets the location on the compute node to which the file
            should be downloaded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceFile.FileMode">
            <summary>
            Gets or sets the file mode attribute in octal format. This
            property will be ignored if it is specified for a resourceFile
            which will be downloaded to a Windows compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics">
            <summary>
            Statistics related to resource consumption by compute nodes in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.#ctor">
            <summary>
            Initializes a new instance of the ResourceStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.#ctor(System.DateTime,System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the ResourceStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AvgCPUPercentage">
            <summary>
            Gets or sets the average CPU usage across all nodes in the pool
            (percentage per node).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AvgMemoryGiB">
            <summary>
            Gets or sets the average memory usage in GiB across all nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.PeakMemoryGiB">
            <summary>
            Gets or sets the peak memory usage in GiB across all nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.AvgDiskGiB">
            <summary>
            Gets or sets the average used disk space in GiB across all nodes
            in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.PeakDiskGiB">
            <summary>
            Gets or sets the peak used disk space in GiB across all nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskReadIOps">
            <summary>
            Gets or sets the total number of disk read operations across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskWriteIOps">
            <summary>
            Gets or sets the total number of disk write operations across all
            nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskReadGiB">
            <summary>
            Gets or sets the total amount of data in GiB of disk reads across
            all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.DiskWriteGiB">
            <summary>
            Gets or sets the total amount of data in GiB of disk writes across
            all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.NetworkReadGiB">
            <summary>
            Gets or sets the total amount of data in GiB of network reads
            across all nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.NetworkWriteGiB">
            <summary>
            Gets or sets the total amount of data in GiB of network writes
            across all nodes in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.ResourceStatistics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.Schedule">
            <summary>
            The schedule according to which jobs will be created
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Schedule.#ctor">
            <summary>
            Initializes a new instance of the Schedule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.Schedule.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the Schedule class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.DoNotRunUntil">
            <summary>
            Gets or sets the earliest time at which any job may be created
            under this job schedule. If you do not specify a doNotRunUntil
            time, the schedule becomes ready to create jobs immediately.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.DoNotRunAfter">
            <summary>
            Gets or sets a time after which no job will be created under this
            job schedule.  The schedule will move to the completed state as
            soon as this deadline is past and there is no active job under
            this job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.StartWindow">
            <summary>
            Gets or sets the time interval, starting from the time at which
            the schedule indicates a job should be created, within which a
            job must be created.  If a job is not created within the
            startWindow interval, then the 'opportunity' is lost; no job will
            be created until the next recurrence of the schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.Schedule.RecurrenceInterval">
            <summary>
            Gets or sets the time interval between the start times of two
            successive jobs under the job schedule. A job schedule can have
            at most one active job under it at any given time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.SchedulingErrorCategory">
            <summary>
            Defines values for SchedulingErrorCategory.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.SchedulingState">
            <summary>
            Defines values for SchedulingState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTask">
            <summary>
            A task defined on a pool and run by compute nodes when they join the
            pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTask.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.CommandLine">
            <summary>
            Gets or sets the command line of the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the
            compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the start
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.RunElevated">
            <summary>
            Gets or sets whether to run the start task in elevated mode. The
            default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times the task may be retried.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTask.WaitForSuccess">
            <summary>
            Gets or sets whether the Batch Service should wait for the start
            task to complete successfully (that is, to exit with exit code 0)
            before scheduling any tasks on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation">
            <summary>
            Information about a start task running on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.#ctor">
            <summary>
            Initializes a new instance of the StartTaskInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTaskState,System.DateTime,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the StartTaskInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.State">
            <summary>
            Gets or sets the state of the start task on the compute node.
            Possible values include: 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.StartTime">
            <summary>
            Gets or sets the time at which the start task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.EndTime">
            <summary>
            Gets or sets the time at which the start task stopped running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.SchedulingError">
            <summary>
            Gets or sets any error encountered scheduling the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.RetryCount">
            <summary>
            Gets or sets the number of times the task has been retried by the
            Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.LastRetryTime">
            <summary>
            Gets or sets the most recent time at which a retry of the task
            started running.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.StartTaskInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.StartTaskState">
            <summary>
            Defines values for StartTaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation">
            <summary>
            Information about an Azure Batch subtask.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor">
            <summary>
            Initializes a new instance of the SubtaskInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.#ctor(System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeInformation,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.TaskState},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SubtaskInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Id">
            <summary>
            Gets or sets the id of the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.NodeInfo">
            <summary>
            Gets or sets information about the compute node on which the
            subtask ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StartTime">
            <summary>
            Gets or sets the time at which the subtask started running. If the
            subtask has been restarted or retried, this is the most recent
            time at which the subtask started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.EndTime">
            <summary>
            Gets or sets the time at which the subtask completed. This
            property is set only if the subtask is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the subtask. This property is set
            only if the subtask is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.SchedulingError">
            <summary>
            Gets or sets details of any error encountered scheduling the
            subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.State">
            <summary>
            Gets or sets the current state of the subtask. Possible values
            include: 'active', 'preparing', 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.StateTransitionTime">
            <summary>
            Gets or sets the time at which the subtask entered its current
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousState">
            <summary>
            Gets or sets the previous state of the subtask. This property is
            not set if the subtask is in its initial Active state. Possible
            values include: 'active', 'preparing', 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.PreviousStateTransitionTime">
            <summary>
            Gets or sets the time at which the subtask entered its previous
            state. This property is not set if the subtask is in its initial
            Active state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.SubtaskInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders">
            <summary>
            Defines headers for AddCollection operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TaskAddCollectionHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter">
            <summary>
            A collection of Azure Batch tasks to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter})">
            <summary>
            Initializes a new instance of the TaskAddCollectionParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.Value">
            <summary>
            The collection of tasks to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult">
            <summary>
            Response to a TaskOperations.AddCollection request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult.#ctor">
            <summary>
            Initializes a new instance of the TaskAddCollectionResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddResult})">
            <summary>
            Initializes a new instance of the TaskAddCollectionResult class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionResult.Value">
            <summary>
            Gets or sets the results of the add task collection operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders">
            <summary>
            Defines headers for Add operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskAddHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskAddHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter">
            <summary>
            An Azure Batch task to add.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor">
            <summary>
            Initializes a new instance of the TaskAddParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting},Microsoft.Azure.Batch.Protocol.Models.AffinityInformation,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.MultiInstanceSettings,Microsoft.Azure.Batch.Protocol.Models.TaskDependencies)">
            <summary>
            Initializes a new instance of the TaskAddParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Id">
            <summary>
            Gets or sets a string that uniquely identifies the task within the
            job. The id can contain any combination of alphanumeric
            characters including hyphens and underscores, and cannot contain
            more than 64 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DisplayName">
            <summary>
            Gets or sets a display name for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.CommandLine">
            <summary>
            Gets or sets the command line of the task. For multi-instance
            tasks, the command line is executed on the primary subtask after
            all the subtasks have finished executing the coordianation
            command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.ResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download to the
            compute node before running the command line. For multi-instance
            tasks, the resource files will only be downloaded to the compute
            node on which the primary subtask is executed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.AffinityInfo">
            <summary>
            Gets or sets a locality hint that can be used by the Batch service
            to select a compute node on which to start the new task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Constraints">
            <summary>
            Gets or sets the execution constraints that apply to this task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.RunElevated">
            <summary>
            Gets or sets whether to run the task in elevated mode.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.MultiInstanceSettings">
            <summary>
            Gets or sets information about how to run the multi-instance task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.DependsOn">
            <summary>
            Gets or sets any dependencies this task has.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult">
            <summary>
            Result for a single task added as part of an add task collection
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor">
            <summary>
            Initializes a new instance of the TaskAddResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus,System.String,System.String,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Batch.Protocol.Models.BatchError)">
            <summary>
            Initializes a new instance of the TaskAddResult class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Status">
            <summary>
            The status of the add task request. Possible values include:
            'success', 'clienterror', 'servererror', 'unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.TaskId">
            <summary>
            The id of the task for which this is the result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.ETag">
            <summary>
            The ETag of the task, if the task was successfully added.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.LastModified">
            <summary>
            The last modified time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Location">
            <summary>
            The URL of the task, if the task was successfully added.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Error">
            <summary>
            The error encountered while attempting to add the task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskAddResult.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskAddStatus">
            <summary>
            Defines values for TaskAddStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints">
            <summary>
            Constraints to apply to the Job Manager task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.#ctor">
            <summary>
            Initializes a new instance of the TaskConstraints class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the TaskConstraints class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum elapsed time that the task may run,
            measured from the time the task starts. If the task does not
            complete within the time limit, the Batch service terminates it.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.RetentionTime">
            <summary>
            Gets or sets the minimum time to retain the working directory for
            the task on the compute node where it ran. After this time, the
            Batch service may delete the working directory and all its
            contents. The default is infinite.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times the task may be retried.
            The Batch service retries a task if its exit code is nonzero.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskDeleteHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TaskDeleteHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDeleteHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies">
            <summary>
            Specifies any dependencies of a task.  Any task that is explicitly
            specified or within a dependency range must complete before the
            dependant task will be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.#ctor">
            <summary>
            Initializes a new instance of the TaskDependencies class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Initializes a new instance of the TaskDependencies class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.TaskIds">
            <summary>
            Gets or sets the list of task ids that must complete before this
            task can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskDependencies.TaskIdRanges">
            <summary>
            Gets or sets the list of task ranges that must complete before
            this task can be scheduled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation">
            <summary>
            Information about the execution of a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskExecutionInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.#ctor(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskExecutionInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.StartTime">
            <summary>
            Gets or sets the time at which the task started running. If the
            task has been restarted or retried, this is the most recent time
            at which the task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.EndTime">
            <summary>
            Gets or sets the time at which the task completed. This property
            is set only if the task is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.ExitCode">
            <summary>
            Gets or sets the exit code of the task. This property is set only
            if the task is in completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.SchedulingError">
            <summary>
            Gets or sets details of any error encountered scheduling the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RetryCount">
            <summary>
            Gets or sets the number of times the task has been retried by the
            Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRetryTime">
            <summary>
            Gets or sets the most recent time at which a retry of the task
            started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.RequeueCount">
            <summary>
            Gets or sets the number of times the task has been requeued by the
            Batch service as the result of a user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.LastRequeueTime">
            <summary>
            Gets or sets the most recent time at which the task has been
            requeued by the Batch service as the result of a user request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskGetHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskGetHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskGetHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange">
            <summary>
            A range of task ids that a task can depend on. All tasks with ids in
            the range must complete successfully before the dependent task can be
            scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.#ctor">
            <summary>
            Initializes a new instance of the TaskIdRange class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the TaskIdRange class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.Start">
            <summary>
            Gets or sets the first task id in the range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.End">
            <summary>
            Gets or sets the last task id in the range.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskIdRange.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskInformation">
            <summary>
            Information about a task running on a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor">
            <summary>
            Initializes a new instance of the TaskInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskState,System.String,System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskExecutionInformation)">
            <summary>
            Initializes a new instance of the TaskInformation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskUrl">
            <summary>
            Gets or sets the URL of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.JobId">
            <summary>
            Gets or sets the id of the job to which the task belongs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskId">
            <summary>
            Gets or sets the id of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.SubtaskId">
            <summary>
            Gets or sets the id of the subtask if the task is a multi-instance
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.TaskState">
            <summary>
            Gets or sets the current state of the task. Possible values
            include: 'active', 'preparing', 'running', 'completed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.ExecutionInfo">
            <summary>
            Gets or sets information about the execution of the task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskInformation.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders">
            <summary>
            Defines headers for List operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskListHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders">
            <summary>
            Defines headers for ListSubtasks operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskListSubtasksHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TaskListSubtasksHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError">
            <summary>
            Information about an error when scheduling a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.#ctor">
            <summary>
            Initializes a new instance of the TaskSchedulingError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.#ctor(Microsoft.Azure.Batch.Protocol.Models.SchedulingErrorCategory,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Initializes a new instance of the TaskSchedulingError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Category">
            <summary>
            Gets or sets the category of the task scheduling error. Possible
            values include: 'usererror', 'servererror', 'unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Code">
            <summary>
            Gets or sets an identifier for the task scheduling error.  Codes
            are invariant and are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Message">
            <summary>
            Gets or sets a message describing the task scheduling error,
            intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Details">
            <summary>
            Gets or sets the list of additional error details related to the
            scheduling error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingError.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.#ctor">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.#ctor(Microsoft.Azure.Batch.Protocol.Models.ComputeNodeFillType)">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.NodeFillType">
            <summary>
            Gets or sets how tasks should be distributed across compute nodes.
            Possible values include: 'spread', 'pack', 'unmapped'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskState">
            <summary>
            Defines values for TaskState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics">
            <summary>
            Resource usage statistics for a task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.#ctor">
            <summary>
            Initializes a new instance of the TaskStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.#ctor(System.String,System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int64,System.Int64,System.Double,System.Double,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TaskStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.Url">
            <summary>
            Gets or sets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.UserCPUTime">
            <summary>
            Gets or sets the total user mode CPU time (summed across all cores
            and all compute nodes) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.KernelCPUTime">
            <summary>
            Gets or sets the total kernel mode CPU time (summed across all
            cores and all compute nodes) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WallClockTime">
            <summary>
            Gets or sets the total wall clock time of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.ReadIOps">
            <summary>
            Gets or sets the total number of I/O read operations performed by
            the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WriteIOps">
            <summary>
            Gets or sets the total number of I/O write operations performed by
            the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.ReadIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB of I/O read by the
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WriteIOGiB">
            <summary>
            Gets or sets the total amount of data in GiB of I/O written by the
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.WaitTime">
            <summary>
            Gets or sets the elapsed time between the creation of the task and
            the start of task execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskStatistics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders">
            <summary>
            Defines headers for Terminate operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskTerminateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskTerminateHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskTerminateHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.#ctor">
            <summary>
            Initializes a new instance of the TaskUpdateHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TaskUpdateHeaders class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.ClientRequestId">
            <summary>
            Gets the ClientRequestId provided by the client during the
            request, if present and requested to be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.RequestId">
            <summary>
            Gets the value that uniquely identifies a request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.ETag">
            <summary>
            Gets the content of the ETag HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.LastModified">
            <summary>
            Gets the content of the Last-Modified HTTP response header.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateHeaders.DataServiceId">
            <summary>
            Gets the OData id of the resource to which the request applied.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter">
            <summary>
            Parameters for a CloudTaskOperations.Update request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the TaskUpdateParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.TaskConstraints)">
            <summary>
            Initializes a new instance of the TaskUpdateParameter class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.TaskUpdateParameter.Constraints">
            <summary>
            Sets constraints that apply to this task. If omitted, the task is
            given the default constraints.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics">
            <summary>
            Statistics related to pool usage information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.#ctor">
            <summary>
            Initializes a new instance of the UsageStatistics class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.#ctor(System.DateTime,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the UsageStatistics class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.StartTime">
            <summary>
            Gets or sets the start time of the time range covered by the
            statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.LastUpdateTime">
            <summary>
            Gets or sets the time at which the statistics were last updated.
            All statistics are limited to the range between startTime and
            lastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.DedicatedCoreTime">
            <summary>
            Gets or sets the aggregated wall-clock time of the dedicated
            compute node cores being part of the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.UsageStatistics.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration">
            <summary>
            The configuration of virtual machines for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor">
            <summary>
            Initializes a new instance of the VirtualMachineConfiguration
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.Protocol.Models.ImageReference,System.String,Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration)">
            <summary>
            Initializes a new instance of the VirtualMachineConfiguration
            class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.ImageReference">
            <summary>
            Gets or sets information about the platform or marketplace image
            to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.NodeAgentSKUId">
            <summary>
            Gets or sets the SKU of Batch Node Agent that needs to be
            provisioned on the compute node. This property must match the
            ImageReference property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.WindowsConfiguration">
            <summary>
            Gets or sets Windows operating system settings on the virtual
            machine. This property must not be specified if the
            ImageReference property referencs a Linux OS image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration.Validate">
            <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration">
            <summary>
            Windows operating system settings on the virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration.#ctor">
            <summary>
            Initializes a new instance of the WindowsConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the WindowsConfiguration class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.Models.WindowsConfiguration.EnableAutomaticUpdates">
            <summary>
            Gets or sets whether virtual machine is enabled for automatic
            updates. If omitted, the default value is true.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchConstants">
            <summary>
            Constants defined in batch client.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.GroupVersionStringFormat">
            <summary>
            String format for Batch API group version.
            [YYYY-MM-DD]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MajorMinorVersionStringFormat">
            <summary>
            String format for Batch API major minor version.
            [Major.Minor]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.ApiVersionStringFormat">
            <summary>
            String format for Batch API version.
            [GroupVersion.MajorMinorVersion]
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.UTF8CharSet">
            <summary>
            utf-8 char set.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MetadataStringInUri">
            <summary>
            metadata string in url.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceMaxResults">
            <summary>
            The maximum results the Batch service can return.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.KB">
            <summary>
            A constant representing a kilo-byte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.MB">
            <summary>
            A constant representing a megabyte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.GB">
            <summary>
            A constant representing a megabyte (Non-SI version).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceRequestMaxPayload">
            <summary>
            The maximum size of a string property for the Batch service in bytes, 4MB is the limit.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.BatchServiceResponseMaxPayload">
            <summary>
            The maximum payload the Batch service can return (1000 * 4MB).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.ForwardSlash">
            <summary>
            Forward slash.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.PropertySeparator">
            <summary>
            Property separator.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.LogSourceName">
            <summary>
            Common name to be used for all loggers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.DefaultCertificateAlgorithm">
            <summary>
            The default certificate algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.CertificateAlgorithmAndThumbprintDelimiter">
            <summary>
            Delimiter for the composition of certificate's algorithm and thumbprint.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.EntityNameSpace">
            <summary>
            The namespace for all entity types defined in the EdmModel.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.EntityNameSpaceDot">
            <summary>
            The entity namespace plus dot in the end.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchConstants.UnmappedEnumValueFromServer">
            <summary>
            Default unknown enum value from server.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.BatchCustomHeaderNamePrefix">
            <summary>
            The prefix for a Batch custom header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.AzureCustomHeaderNamePrefix">
            <summary>
            The prefix for an Azure custom header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Date">
            <summary>
            The date.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.KeyNameHeader">
            <summary>
            The key-name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.RequestId">
            <summary>
            A unique id for the current operation which is generated by the Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ClientRequestId">
            <summary>
            Caller generated request identity, in the form of a GUID with no decoration such as curly braces 
            e.g. client-request-id: 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ReturnClientRequestId">
            <summary>
            The request header instructs whether the server to include the client-request-id in the response.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.DataServiceVersion">
            <summary>
            The OData service version header.
            If specified by a client it means the client can interpret a message with the indicated version of the OData protocol. 
            The Batch service returns the OData version of the response.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.MinDataServiceVersion">
            <summary>
            The minimum OData service version header.
            If specified it means that the response can be interpreted by a client that
            knows at least the indicated version (or later). 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.MaxDataServiceVersion">
            <summary>
            The maximum OData service version header.
            If specified it means that the response can be interpreted by a client 
            that only knows up to the version indicated in this header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentType">
            <summary>
            Request: Mime type of request body (PUT/POST/PATCH) 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentLength">
            <summary>
            Content length header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ContentId">
            <summary>
            Content-ID header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Disabled">
            <summary>
            Disable header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.IsDirectory">
            <summary>
            IsDirectory header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.FileUrl">
            <summary>
            FileUrl Header
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CreationTime">
            <summary>
            Creation time (file).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CustomRange">
            <summary>
            file range.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.CustomRangeFormat">
            <summary>
            File range format in the header.
            {0} the file beginning position to read.
            {1} the file end position to read.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.DataServiceId">
            <summary>
            The Batch service returns this header if responding with no body to POST, PUT, PATCH.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.Location">
            <summary>
            Location header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.ETag">
            <summary>
            ETag.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchHttpHeaderConstants.LastModified">
            <summary>
            The last-modified header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchCredentials">
            <summary>
            Base class for credentials used to authenticate a HTTP request to Azure Batch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchCredentials.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Signs a HTTP request with the current <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
            <param name="httpRequest">The HTTP request to be signed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler">
            <summary>
            A <see cref="T:System.Net.Http.HttpMessageHandler"/> that adds authentication to outgoing requests using a <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler.#ctor(Microsoft.Azure.Batch.Protocol.BatchCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler"/> class.
            </summary>
            <param name="credential">The <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/> to be used for authenticating requests made through this handler.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchAuthenticationDelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Adds authentication to a HTTP request then sends it to the inner handler to send to the server
            as an asynchronous operation.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel the operation.</param>
            <returns>The response to the HTTP request</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2">
            <summary>
            A base class for all Batch service requests. Represents the information required to make a particular call with no request body to the Batch service REST API.
            </summary>
            <typeparam name="TOptions">The type of the parameters passed outside the request body associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.CustomHeaders">
            <summary>
            Gets the headers used for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ServiceRequestFunc">
            <summary>
            Gets or sets the function which will create a <see cref="T:System.Threading.Tasks.Task"/> calling the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.Options">
            <summary>
            Gets or sets the options used for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.Microsoft#Azure#Batch#Protocol#IBatchRequest#Options">
            <summary>
            Gets the options needed by the REST proxy for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.RestClient">
            <summary>
            Gets the REST client that will be used for this request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.RetryPolicy">
            <summary>
            Gets or sets the retry policy to be applied.
            Null means no retries will be attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.OperationContext">
            <summary>
            Gets the operation context associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.Timeout">
            <summary>
            Gets or sets the client side timeout for a request to the Batch service.
            </summary>
            <remarks>
            <para>
            This timeout applies to a single Batch service request; if a retry policy is specified, then each retry will be granted the
            full duration of this value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.CancellationToken">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.CancellationToken"/> associated with this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
            <remarks>
            <para>
            Cancelling this token will cancel the currently ongoing request. This applies to the initial request as well
            as any subsequent requests created due to <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.RetryPolicy"/>. Cancelling this token also forbids all
            future retries of this <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ClientRequestIdProvider">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ClientRequestIdProvider"/> used by this request to generate client request ids.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2"/> class.
            </summary>
            <param name="restClient">The REST client to use.</param>
            <param name="cancellationToken">The cancellationToken to use.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ExecuteRequestAsync">
            <summary>
            Executes the request.
            </summary>
            <returns>An asynchronous operation of return type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ThrowIfRequestExecutionHasStarted">
            <summary>
            Throws an exception if request execution has started.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ExtractClientRequestId">
            <summary>
            Extracts the client request ID from the options.
            </summary>
            <returns>The client request ID GUID or null if there wasn't one.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequestBase`2.ExecuteRequestWithCancellationAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`1}})">
            <summary>
            Executes the specified function with a cancellation token which is a composite token for the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.Timeout"/>
            and the <see cref="P:Microsoft.Azure.Batch.Protocol.IBatchRequest.CancellationToken"/>.
            </summary>
            <param name="func">The function defining what work to be called in a cancellable way</param>
            <returns>A task with the async state of the func</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequest`2">
            <summary>
            Represents the information required to make a particular call with no request body to the Batch service REST API.
            </summary>
            <typeparam name="TOptions">The type of the parameters passed outside the request body associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`2.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest`2"/> class.
            </summary>
            <param name="restClient">The REST client to use.</param>
            <param name="cancellationToken">The cancellationToken to use.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequest`3">
            <summary>
            Represents the information required to make a particular call with a request body of type <typeparamref name="TBody"/> to the Batch service REST API.
            </summary>
            <typeparam name="TBody">The type of the body parameters associated with the request.</typeparam>
            <typeparam name="TOptions">The type of the parameters passed outside the request body associated with the request.</typeparam>
            <typeparam name="TResponse">The response type expected from the request.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchRequest`3.Parameters">
            <summary>
            Gets or sets the parameters passed in the REST API request body.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchRequest`3.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient,`0,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchRequest`3"/> class.
            </summary>
            <param name="restClient">The REST client to use.</param>
            <param name="parameters">The parameters to use.</param>
            <param name="cancellationToken">The cancellationToken to use.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchServiceExtensions">
            <summary>
            Provides extension methods for <see cref="!:IBatchService"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential">
            <summary>
            Shared key credentials for an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.KeyValue">
            <summary>
            Gets the account access key, as a Base64-encoded string.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential"/> class.
            </summary>
            <param name="accountName">The name of the Batch account.</param>
            <param name="keyValue">The access key of the Batch account, as a Base64-encoded string.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Signs a HTTP request with the current <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
            <param name="httpRequest">The HTTP request to be signed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchSharedKeyCredential.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Signs a HTTP request with the current <see cref="T:Microsoft.Azure.Batch.Protocol.BatchCredentials"/>.
            </summary>
            <param name="request">The HTTP request</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchTokenCredential">
            <summary>
            BatchCredentials which implement Azure AD auth
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.DefaultAuthorizationScheme">
            <summary>
            The default authorization scheme.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.Token">
            <summary>
            Auth token
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="token">The OAuth authentication token.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchTokenCredential.SignRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sign request
            </summary>
            <param name="httpRequest">The HTTP request to be signed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for the request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous signing operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.Logger.FormatLine(System.String,System.String,System.Object[])">
            <summary>
            Creates a well-formatted log entry so that logs can be easily parsed
            </summary>
            <param name="clientRequestId">The client-request-id.</param>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>Log entry that contains common log prefix and a copy of format in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.Logger.ShouldLog(Microsoft.Azure.Batch.Protocol.LogLevel,Microsoft.Azure.Batch.Protocol.LogLevel)">
            <summary>
            Determines if the current entry should be logged.
            </summary>
            <param name="entryLogLevel">Log level of the entry.</param>
            <param name="intentedLogLevel">Intended log level.</param>
            <returns><c>true</c> if the entry should be logged; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Core.NullType">
            <summary>
            A NullBatchReturn type.
            </summary>
            Make it to internal (no use so far)
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.Core.NullType.Value">
            <summary>
            Represents a no-return from Batch.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.NullType.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.Core.NullType"/> class from being created.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder">
            <summary>
            A <see cref="T:System.UriBuilder"/> style class for creating Uri query strings.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.parameters">
            <summary>
            Stores the query parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.Add(System.String,System.String)">
            <summary>
            Add the value with Uri escaping.
            </summary>
            <param name="name">The query name.</param>
            <param name="value">The query value.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.AppendToUri(System.Uri)">
            <summary>
            Append query parameter to an existing Uri. This takes care of any existing query parameters in the Uri.
            </summary>
            <param name="uri">Original Uri which may contain query parameters already.</param>
            <returns>The appended Uri.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.Core.UriQueryBuilder.InsertToUri(System.Uri)">
            <summary>
            Insert query parameter to an existing Uri. This takes care of any existing query parameters in the Uri.
            </summary>
            <param name="uri">Original Uri which may contain query parameters already.</param>
            <returns>The appended Uri.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestModificationInterceptHandler">
            <summary>
            Represents a method that intercepts a request to the Batch service in order
            to modify the parameters.
            </summary>
            <param name="request">The parameters of the request being intercepted.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler">
            <summary>
            Represents a method that intercepts a request to the Batch service in order
            to replace the parameters and/or operation context.
            </summary>
            <param name="request">The parameters of the request being intercepted.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor">
            <summary>
            Derived classes can inspect, replace or modify a BatchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor">
            <summary>
            Initializes a new instance of RequestReplacementInterceptor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestReplacementInterceptHandler)">
            <summary>
            Initializes a new instance of RequestReplacementInterceptor
            </summary>
            <param name="replacementInterceptor"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.NOOP(Microsoft.Azure.Batch.Protocol.IBatchRequest@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.RequestReplacementInterceptor.ReplacementInterceptHandler">
            <summary>
            Gets or sets a method that will be called just before a <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/> is executed.
            The request can be inspected, replaced, modified or ignored.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.RequestInterceptor">
            <summary>
            This class enables an interceptor to inspect, modify or ignore a <see cref="T:Microsoft.Azure.Batch.Protocol.IBatchRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.#ctor">
            <summary>
            Initializes a new instance of RequestInterceptor.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.BatchRequestModificationInterceptHandler)">
            <summary>
            Initializes a new instance of RequestInterceptor that calls a given BatchRequestModificationInterceptHandler.
            </summary>
            <param name="interceptor">A delegate that will be allowed to inspect, modify or ignore a BatchRequest.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ModificationInterceptHandler">
            <summary>
            Gets or sets the BatchRequestModificationInterceptHandler.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.NOOP(System.Object)">
            <summary>
            An interceptor that does nothing.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.RequestInterceptor.ReplacementInterceptHandler(Microsoft.Azure.Batch.Protocol.IBatchRequest@)">
            <summary>
            A replacment interceptor that calls our modification interceptor.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.LogLevel">
            <summary>
            Specifies what messages to output to the log.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Off">
            <summary>
            Output no tracing and debugging messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Error">
            <summary>
            Output error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Warning">
            <summary>
            Output warnings and error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Informational">
            <summary>
            Output informational messages, warnings, and error-handling messages.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Protocol.LogLevel.Verbose">
            <summary>
            Output all debugging and tracing messages.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor">
            <summary>
            A BatchClientBehavior that enables inspection and modification of the BatchResponse.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler">
            <summary>
            A callback that can inspect and modify a BatchResponse.
            </summary>
            <param name="response">The response to be inspected and optionally modified.</param>
            <param name="request">The request to which the <paramref name="response"/> is a response.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.#ctor(Microsoft.Azure.Batch.Protocol.ResponseInterceptor.BatchResponseInterceptHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Protocol.ResponseInterceptor"/> class.
            </summary>
            <param name="responseInterceptHandler">The method to invoke on the intercepted response.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ResponseInterceptor.ResponseInterceptHandler">
            <summary>
            Gets or sets the method to invoke on the intercepted response.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.AccountOperations">
            <summary>
            AccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the AccountOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.AccountOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.ListNodeAgentSkusWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperations.ListNodeAgentSkusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions">
            <summary>
            Extension methods for AccountOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkus(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNext(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.AccountOperationsExtensions.ListNodeAgentSkusNextAsync(Microsoft.Azure.Batch.Protocol.IAccountOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ApplicationOperations">
            <summary>
            ApplicationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the ApplicationOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ApplicationOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='applicationId'>
            The id of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions">
            <summary>
            Extension methods for ApplicationOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationId'>
            The id of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='applicationId'>
            The id of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ApplicationOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IApplicationOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient">
            <summary>
            A client for issuing REST requests to the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Credentials">
            <summary>
            Gets Azure subscription credentials.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.ApiVersion">
            <summary>
            Client API Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Application">
            <summary>
            Gets the IApplicationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Pool">
            <summary>
            Gets the IPoolOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Account">
            <summary>
            Gets the IAccountOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Job">
            <summary>
            Gets the IJobOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Certificate">
            <summary>
            Gets the ICertificateOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.File">
            <summary>
            Gets the IFileOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.JobSchedule">
            <summary>
            Gets the IJobScheduleOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Task">
            <summary>
            Gets the ITaskOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchServiceClient.ComputeNode">
            <summary>
            Gets the IComputeNodeOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the BatchServiceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Gets Azure subscription credentials.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.BatchServiceClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CertificateOperations">
            <summary>
            CertificateOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the CertificateOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.CertificateOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='certificate'>
            Specifies the certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.CancelDeletionWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions">
            <summary>
            Extension methods for CertificateOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificate'>
            Specifies the certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificate'>
            Specifies the certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletion(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.CertificateOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ICertificateOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations">
            <summary>
            ComputeNodeOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the ComputeNodeOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.AddUserWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            Specifies the user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.DeleteUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.UpdateUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the specified
            compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.RebootWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            Sets when to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ReimageWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            Sets when to reimage the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.DisableSchedulingWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disable task scheduling of the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to disable task scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            Gets or sets what to do with currently running tasks when disable task
            scheduling on the compute node. The default value is requeue. Possible
            values include: 'requeue', 'terminate', 'taskcompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.EnableSchedulingWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enable task scheduling of the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetRemoteLoginSettingsWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which to obtain the remote login settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.GetRemoteDesktopWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions">
            <summary>
            Extension methods for ComputeNodeOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            Specifies the user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.AddUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            Specifies the user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DeleteUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUser(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions)">
            <summary>
            Updates the password or expiration time of a user account on the specified
            compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.UpdateUserAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the specified
            compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reboot(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            Sets when to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.RebootAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            Sets when to reboot the compute node and what to do with currently running
            tasks. The default value is requeue. Possible values include: 'requeue',
            'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.Reimage(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            Sets when to reimage the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ReimageAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            Sets when to reimage the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values include:
            'requeue', 'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions)">
            <summary>
            Disable task scheduling of the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to disable task scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            Gets or sets what to do with currently running tasks when disable task
            scheduling on the compute node. The default value is requeue. Possible
            values include: 'requeue', 'terminate', 'taskcompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.DisableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Threading.CancellationToken)">
            <summary>
            Disable task scheduling of the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to disable task scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            Gets or sets what to do with currently running tasks when disable task
            scheduling on the compute node. The default value is requeue. Possible
            values include: 'requeue', 'terminate', 'taskcompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableScheduling(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions)">
            <summary>
            Enable task scheduling of the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.EnableSchedulingAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Threading.CancellationToken)">
            <summary>
            Enable task scheduling of the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettings(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which to obtain the remote login settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteLoginSettingsAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which to obtain the remote login settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktop(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.GetRemoteDesktopAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which you want to get the Remote Desktop
            Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ComputeNodeOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IComputeNodeOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.FileOperations">
            <summary>
            FileOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the FileOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.FileOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.DeleteFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName parameter
            represents a directory instead of a file, you can set Recursive to true
            to delete the directory and all of the files and subdirectories in it. If
            Recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to retrieve.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetNodeFilePropertiesFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to get the properties of.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.DeleteFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node from which you want to delete the file.
            </param>
            <param name='fileName'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName parameter
            represents a directory instead of a file, you can set Recursive to true
            to delete the directory and all of the files and subdirectories in it. If
            Recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.GetNodeFilePropertiesFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the compute node file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromTaskWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromTaskNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperations.ListFromComputeNodeNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions">
            <summary>
            Extension methods for FileOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions)">
            <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName parameter
            represents a directory instead of a file, you can set Recursive to true
            to delete the directory and all of the files and subdirectories in it. If
            Recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the task ran.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName parameter
            represents a directory instead of a file, you can set Recursive to true
            to delete the directory and all of the files and subdirectories in it. If
            Recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to retrieve.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to retrieve.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to get the properties of.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to get the properties of.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node from which you want to delete the file.
            </param>
            <param name='fileName'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName parameter
            represents a directory instead of a file, you can set Recursive to true
            to delete the directory and all of the files and subdirectories in it. If
            Recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.DeleteFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node from which you want to delete the file.
            </param>
            <param name='fileName'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName parameter
            represents a directory instead of a file, you can set Recursive to true
            to delete the directory and all of the files and subdirectories in it. If
            Recursive is false then the directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the compute node file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.GetNodeFilePropertiesFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the compute node file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTask(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNode(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromTaskNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNext(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.FileOperationsExtensions.ListFromComputeNodeNextAsync(Microsoft.Azure.Batch.Protocol.IFileOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified compute node.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IAccountOperations">
            <summary>
            AccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.ListNodeAgentSkusWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='accountListNodeAgentSkusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IAccountOperations.ListNodeAgentSkusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.AccountListNodeAgentSkusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the node agent SKUs supported by Azure Batch Service.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='accountListNodeAgentSkusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IApplicationOperations">
            <summary>
            ApplicationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IApplicationOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.ApplicationListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='applicationListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IApplicationOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='applicationId'>
            The id of the application.
            </param>
            <param name='applicationGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IApplicationOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ApplicationListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications available in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='applicationListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IBatchServiceClient">
            <summary>
            A client for issuing REST requests to the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Credentials">
            <summary>
            Gets Azure subscription credentials.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ApiVersion">
            <summary>
            Client API Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is
            generated and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Application">
            <summary>
            Gets the IApplicationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Pool">
            <summary>
            Gets the IPoolOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Account">
            <summary>
            Gets the IAccountOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Job">
            <summary>
            Gets the IJobOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Certificate">
            <summary>
            Gets the ICertificateOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.File">
            <summary>
            Gets the IFileOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.JobSchedule">
            <summary>
            Gets the IJobScheduleOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.Task">
            <summary>
            Gets the ITaskOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.IBatchServiceClient.ComputeNode">
            <summary>
            Gets the IComputeNodeOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ICertificateOperations">
            <summary>
            CertificateOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateAddParameter,Microsoft.Azure.Batch.Protocol.Models.CertificateAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a certificate to the specified account.
            </summary>
            <param name='certificate'>
            Specifies the certificate to be added.
            </param>
            <param name='certificateAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.CertificateListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the
            specified account.
            </summary>
            <param name='certificateListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.CancelDeletionWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateCancelDeletionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must
            be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate being deleted.
            </param>
            <param name='certificateCancelDeletionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate from the specified account.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must
            be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to be deleted.
            </param>
            <param name='certificateDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='thumbprintAlgorithm'>
            The algorithm used to derive the thumbprint parameter. This must
            be sha1.
            </param>
            <param name='thumbprint'>
            The thumbprint of the certificate to get.
            </param>
            <param name='certificateGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ICertificateOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.CertificateListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates that have been added to the
            specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='certificateListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations">
            <summary>
            ComputeNodeOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.AddUserWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUser,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeAddUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a user account to the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to create a user account.
            </param>
            <param name='user'>
            Specifies the user account to be created.
            </param>
            <param name='computeNodeAddUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.DeleteUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDeleteUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a user account from the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to delete a user account.
            </param>
            <param name='userName'>
            The name of the user account to delete.
            </param>
            <param name='computeNodeDeleteUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.UpdateUserWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeUpdateUserParameter,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeUpdateUserOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the password or expiration time of a user account on the
            specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the machine on which you want to update a user account.
            </param>
            <param name='userName'>
            The name of the user account to update.
            </param>
            <param name='nodeUpdateUserParameter'>
            The parameters for the request.
            </param>
            <param name='computeNodeUpdateUserOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to get information about.
            </param>
            <param name='computeNodeGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.RebootWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeRebootOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restarts the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeRebootOption'>
            Sets when to reboot the compute node and what to do with currently
            running tasks. The default value is requeue. Possible values
            include: 'requeue', 'terminate', 'taskcompletion', 'retaineddata'
            </param>
            <param name='computeNodeRebootOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ReimageWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to restart.
            </param>
            <param name='nodeReimageOption'>
            Sets when to reimage the compute node and what to do with
            currently running tasks. The default value is requeue. Possible
            values include: 'requeue', 'terminate', 'taskcompletion',
            'retaineddata'
            </param>
            <param name='computeNodeReimageOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.DisableSchedulingWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Protocol.Models.DisableComputeNodeSchedulingOption},Microsoft.Azure.Batch.Protocol.Models.ComputeNodeDisableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disable task scheduling of the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to disable task
            scheduling.
            </param>
            <param name='nodeDisableSchedulingOption'>
            Gets or sets what to do with currently running tasks when disable
            task scheduling on the compute node. The default value is
            requeue. Possible values include: 'requeue', 'terminate',
            'taskcompletion'
            </param>
            <param name='computeNodeDisableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.EnableSchedulingWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeEnableSchedulingOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enable task scheduling of the specified compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that you want to enable task scheduling.
            </param>
            <param name='computeNodeEnableSchedulingOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetRemoteLoginSettingsWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteLoginSettingsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which to obtain the remote login
            settings.
            </param>
            <param name='computeNodeGetRemoteLoginSettingsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.GetRemoteDesktopWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeGetRemoteDesktopOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the Remote Desktop Protocol file for the specified compute
            node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node for which you want to get the Remote
            Desktop Protocol file.
            </param>
            <param name='computeNodeGetRemoteDesktopOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool from which you want to list nodes.
            </param>
            <param name='computeNodeListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IComputeNodeOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.ComputeNodeListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the compute nodes in the specified pool.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='computeNodeListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IFileOperations">
            <summary>
            FileOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.DeleteFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node where the
            task ran.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to delete.
            </param>
            <param name='fileName'>
            The path to the task file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName
            parameter represents a directory instead of a file, you can set
            Recursive to true to delete the directory and all of the files
            and subdirectories in it. If Recursive is false then the
            directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to retrieve.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetNodeFilePropertiesFromTaskWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified task file.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose file you want to get the properties of.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.DeleteFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileDeleteFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified task file from the compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node from which you want to delete the file.
            </param>
            <param name='fileName'>
            The path to the file that you want to delete.
            </param>
            <param name='recursive'>
            Sets whether to delete children of a directory. If the fileName
            parameter represents a directory instead of a file, you can set
            Recursive to true to delete the directory and all of the files
            and subdirectories in it. If Recursive is false then the
            directory must be empty or deletion will fail.
            </param>
            <param name='fileDeleteFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the content of the specified task file.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the task file that you want to get the content of.
            </param>
            <param name='fileGetFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.GetNodeFilePropertiesFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.FileGetNodeFilePropertiesFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of the specified compute node file.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node that contains the file.
            </param>
            <param name='fileName'>
            The path to the compute node file that you want to get the
            properties of.
            </param>
            <param name='fileGetNodeFilePropertiesFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromTaskWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromTaskOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromComputeNodeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified
            compute node.
            </summary>
            <param name='poolId'>
            The id of the pool that contains the compute node.
            </param>
            <param name='nodeId'>
            The id of the compute node whose files you want to list.
            </param>
            <param name='recursive'>
            Sets whether to list children of a directory.
            </param>
            <param name='fileListFromComputeNodeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromTaskNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromTaskNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the files in a task's directory on its compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromTaskNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IFileOperations.ListFromComputeNodeNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.FileListFromComputeNodeNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the files in task directories on the specified
            compute node.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='fileListFromComputeNodeNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IJobOperations">
            <summary>
            JobOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.GetAllJobsLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the
            specified account. Statistics are aggregated across all jobs that
            have ever existed in the account, from account creation to the
            last update time of the statistics.
            </summary>
            <param name='jobGetAllJobsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <param name='jobId'>
            The id of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='jobId'>
            The id of the job to disable.
            </param>
            <param name='disableTasks'>
            Sets what to do with active tasks associated with the job.
            Possible values include: 'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='jobId'>
            The id of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='jobId'>
            The id of the job to terminate.
            </param>
            <param name='terminateReason'>
            Sets the text you want to appear as the job's TerminateReason. The
            default is 'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='job'>
            Specifies the job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListFromJobScheduleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule from which you want to get a list of
            jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListPreparationAndReleaseTaskStatusWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListFromJobScheduleNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job
            schedule.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobOperations.ListPreparationAndReleaseTaskStatusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release
            task for the specified job across the compute nodes where the job
            has run.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations">
            <summary>
            JobScheduleOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.TerminateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='cloudJobSchedule'>
            Specifies the job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IJobScheduleOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.IPoolOperations">
            <summary>
            PoolOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListPoolUsageMetricsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='poolListPoolUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.GetAllPoolsLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the
            specified account. Statistics are aggregated across all pools
            that have ever existed in the account, from account creation to
            the last update time of the statistics.
            </summary>
            <param name='poolGetAllPoolsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='pool'>
            Specifies the pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='poolId'>
            The id of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.DisableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.EnableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.EvaluateAutoScaleWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the
            pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to evaluate the automatic scaling
            formula.
            </param>
            <param name='autoScaleFormula'>
            Sets a formula for the desired number of compute nodes in the pool.
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.StopResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not
            restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the
            pool maintains its current state.
            </summary>
            <param name='poolId'>
            The id of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.UpdatePropertiesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.UpgradeOSWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            Sets the Azure Guest OS version to be installed on the virtual
            machines in the pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.RemoveNodesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListPoolUsageMetricsNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListPoolUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.IPoolOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.ITaskOperations">
            <summary>
            TaskOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.AddWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='jobId'>
            The id of the job to which the task is to be added.
            </param>
            <param name='task'>
            Specifies the task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.AddCollectionWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='jobId'>
            The id of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='jobId'>
            The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The id of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to update.
            </param>
            <param name='constraints'>
            Sets constraints that apply to this task. If omitted, the task is
            given the default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ListSubtasksWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskId'>
            The id of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.ITaskOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobOperations">
            <summary>
            JobOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the JobOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.JobOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.GetAllJobsLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account. Statistics are aggregated across all jobs that have ever existed
            in the account, from account creation to the last update time of the
            statistics.
            </summary>
            <param name='jobGetAllJobsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <param name='jobId'>
            The id of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='jobId'>
            The id of the job to disable.
            </param>
            <param name='disableTasks'>
            Sets what to do with active tasks associated with the job. Possible values
            include: 'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='jobId'>
            The id of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='jobId'>
            The id of the job to terminate.
            </param>
            <param name='terminateReason'>
            Sets the text you want to appear as the job's TerminateReason. The default
            is 'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='job'>
            Specifies the job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListFromJobScheduleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule from which you want to get a list of jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListPreparationAndReleaseTaskStatusWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListFromJobScheduleNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperations.ListPreparationAndReleaseTaskStatusNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions">
            <summary>
            Extension methods for JobOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllJobsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account. Statistics are aggregated across all jobs that have ever existed
            in the account, from account creation to the last update time of the
            statistics.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobGetAllJobsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAllJobsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobGetAllJobsLifetimeStatisticsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the jobs in the specified
            account. Statistics are aggregated across all jobs that have ever existed
            in the account, from account creation to the last update time of the
            statistics.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobGetAllJobsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions)">
            <summary>
            Deletes a job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to delete.
            </param>
            <param name='jobDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobPatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobPatchOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobPatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job whose properties you want to update.
            </param>
            <param name='jobUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to disable.
            </param>
            <param name='disableTasks'>
            Sets what to do with active tasks associated with the job. Possible values
            include: 'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.DisableJobOption,Microsoft.Azure.Batch.Protocol.Models.JobDisableOptions,System.Threading.CancellationToken)">
            <summary>
            Disables the specified job, preventing new tasks from running.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to disable.
            </param>
            <param name='disableTasks'>
            Sets what to do with active tasks associated with the job. Possible values
            include: 'requeue', 'terminate', 'wait'
            </param>
            <param name='jobDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobEnableOptions,System.Threading.CancellationToken)">
            <summary>
            Enables the specified job, allowing new tasks to run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to enable.
            </param>
            <param name='jobEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to terminate.
            </param>
            <param name='terminateReason'>
            Sets the text you want to appear as the job's TerminateReason. The default
            is 'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.JobTerminateOptions,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job, marking it as completed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to terminate.
            </param>
            <param name='terminateReason'>
            Sets the text you want to appear as the job's TerminateReason. The default
            is 'UserTerminate'.
            </param>
            <param name='jobTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='job'>
            Specifies the job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a job to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='job'>
            Specifies the job to be added.
            </param>
            <param name='jobAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,Microsoft.Azure.Batch.Protocol.Models.JobListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobSchedule(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule from which you want to get a list of jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule from which you want to get a list of jobs.
            </param>
            <param name='jobListFromJobScheduleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatus(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the jobs in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListFromJobScheduleNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListFromJobScheduleNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the jobs that have been created under the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListFromJobScheduleNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNext(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobOperationsExtensions.ListPreparationAndReleaseTaskStatusNextAsync(Microsoft.Azure.Batch.Protocol.IJobOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobListPreparationAndReleaseTaskStatusNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the execution status of the Job Preparation and Job Release task for
            the specified job across the compute nodes where the job has run.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobListPreparationAndReleaseTaskStatusNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobScheduleOperations">
            <summary>
            JobScheduleOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the JobScheduleOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.DisableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.EnableWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.TerminateWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='jobScheduleId'>
            The id of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='cloudJobSchedule'>
            Specifies the job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions">
            <summary>
            Extension methods for JobScheduleOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleExistsOptions,System.Threading.CancellationToken)">
            <summary>
            Checks the specified job schedule exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule which you want to check.
            </param>
            <param name='jobScheduleExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a job schedule from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to delete.
            </param>
            <param name='jobScheduleDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to get.
            </param>
            <param name='jobScheduleGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchParameter,Microsoft.Azure.Batch.Protocol.Models.JobSchedulePatchOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobSchedulePatchParameter'>
            The parameters for the request.
            </param>
            <param name='jobSchedulePatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to update.
            </param>
            <param name='jobScheduleUpdateParameter'>
            The parameters for the request.
            </param>
            <param name='jobScheduleUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Disable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.DisableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleDisableOptions,System.Threading.CancellationToken)">
            <summary>
            Disables a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to disable.
            </param>
            <param name='jobScheduleDisableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Enable(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.EnableAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleEnableOptions,System.Threading.CancellationToken)">
            <summary>
            Enables a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to enable.
            </param>
            <param name='jobScheduleEnableOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleTerminateOptions,System.Threading.CancellationToken)">
            <summary>
            Terminates a job schedule.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleId'>
            The id of the job schedule to terminates.
            </param>
            <param name='jobScheduleTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cloudJobSchedule'>
            Specifies the job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddParameter,Microsoft.Azure.Batch.Protocol.Models.JobScheduleAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a job schedule to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cloudJobSchedule'>
            Specifies the job schedule to be added.
            </param>
            <param name='jobScheduleAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobScheduleListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.JobScheduleOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IJobScheduleOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.JobScheduleListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the job schedules in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='jobScheduleListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.PoolOperations">
            <summary>
            PoolOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the PoolOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.PoolOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListPoolUsageMetricsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='poolListPoolUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.GetAllPoolsLifetimeStatisticsWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account. Statistics are aggregated across all pools that have ever
            existed in the account, from account creation to the last update time of
            the statistics.
            </summary>
            <param name='poolGetAllPoolsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.AddWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='pool'>
            Specifies the pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListWithHttpMessagesAsync(Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.DeleteWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='poolId'>
            The id of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ExistsWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.GetWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.PatchWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.DisableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.EnableAutoScaleWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.EvaluateAutoScaleWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
            <param name='poolId'>
            The id of the pool on which to evaluate the automatic scaling formula.
            </param>
            <param name='autoScaleFormula'>
            Sets a formula for the desired number of compute nodes in the pool.
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.StopResizeWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not restore the
            pool to its previous state before the resize operation: it only stops any
            further changes being made, and the pool maintains its current state.
            </summary>
            <param name='poolId'>
            The id of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.UpdatePropertiesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.UpgradeOSWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            Sets the Azure Guest OS version to be installed on the virtual machines in
            the pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.RemoveNodesWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='poolId'>
            The id of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListPoolUsageMetricsNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListPoolUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions">
            <summary>
            Extension methods for PoolOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetrics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListPoolUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListPoolUsageMetricsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatistics(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account. Statistics are aggregated across all pools that have ever
            existed in the account, from account creation to the last update time of
            the statistics.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolGetAllPoolsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAllPoolsLifetimeStatisticsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolGetAllPoolsLifetimeStatisticsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the specified
            account. Statistics are aggregated across all pools that have ever
            existed in the account, from account creation to the last update time of
            the statistics.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolGetAllPoolsLifetimeStatisticsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='pool'>
            Specifies the pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolAddParameter,Microsoft.Azure.Batch.Protocol.Models.PoolAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a pool to the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='pool'>
            Specifies the pool to be added.
            </param>
            <param name='poolAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,Microsoft.Azure.Batch.Protocol.Models.PoolListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a pool from the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to delete.
            </param>
            <param name='poolDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Exists(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ExistsAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolExistsOptions,System.Threading.CancellationToken)">
            <summary>
            Gets basic properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolExistsOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to get.
            </param>
            <param name='poolGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Patch(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.PatchAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter,Microsoft.Azure.Batch.Protocol.Models.PoolPatchOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolPatchParameter'>
            The parameters for the request.
            </param>
            <param name='poolPatchOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolDisableAutoScaleOptions,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool on which to disable automatic scaling.
            </param>
            <param name='poolDisableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EnableAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleParameter,Microsoft.Azure.Batch.Protocol.Models.PoolEnableAutoScaleOptions,System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool on which to enable automatic scaling.
            </param>
            <param name='poolEnableAutoScaleParameter'>
            The parameters for the request.
            </param>
            <param name='poolEnableAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScale(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool on which to evaluate the automatic scaling formula.
            </param>
            <param name='autoScaleFormula'>
            Sets a formula for the desired number of compute nodes in the pool.
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.EvaluateAutoScaleAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolEvaluateAutoScaleOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool on which to evaluate the automatic scaling formula.
            </param>
            <param name='autoScaleFormula'>
            Sets a formula for the desired number of compute nodes in the pool.
            </param>
            <param name='poolEvaluateAutoScaleOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.Resize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolResizeParameter,Microsoft.Azure.Batch.Protocol.Models.PoolResizeOptions,System.Threading.CancellationToken)">
            <summary>
            Changes the number of compute nodes that are assigned to a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to resize.
            </param>
            <param name='poolResizeParameter'>
            The parameters for the request.
            </param>
            <param name='poolResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResize(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not restore the
            pool to its previous state before the resize operation: it only stops any
            further changes being made, and the pool maintains its current state.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolStopResizeOptions,System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool. This does not restore the
            pool to its previous state before the resize operation: it only stops any
            further changes being made, and the pool maintains its current state.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool whose resizing you want to stop.
            </param>
            <param name='poolStopResizeOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdateProperties(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpdatePropertiesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesParameter,Microsoft.Azure.Batch.Protocol.Models.PoolUpdatePropertiesOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to update.
            </param>
            <param name='poolUpdatePropertiesParameter'>
            The parameters for the request.
            </param>
            <param name='poolUpdatePropertiesOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOS(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            Sets the Azure Guest OS version to be installed on the virtual machines in
            the pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.UpgradeOSAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolUpgradeOSOptions,System.Threading.CancellationToken)">
            <summary>
            Upgrades the operating system of the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool to upgrade.
            </param>
            <param name='targetOSVersion'>
            Sets the Azure Guest OS version to be installed on the virtual machines in
            the pool.
            </param>
            <param name='poolUpgradeOSOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodes(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.RemoveNodesAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.NodeRemoveParameter,Microsoft.Azure.Batch.Protocol.Models.PoolRemoveNodesOptions,System.Threading.CancellationToken)">
            <summary>
            Removes compute nodes from the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='poolId'>
            The id of the pool from which you want to remove nodes.
            </param>
            <param name='nodeRemoveParameter'>
            The parameters for the request.
            </param>
            <param name='poolRemoveNodesOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListPoolUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListPoolUsageMetricsNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListPoolUsageMetricsNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the usage metrics, aggregated by pool across individual time
            intervals, for the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListPoolUsageMetricsNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.PoolOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.IPoolOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.PoolListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='poolListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.TaskOperations">
            <summary>
            TaskOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Initializes a new instance of the TaskOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.TaskOperations.Client">
            <summary>
            Gets a reference to the BatchServiceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.AddWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='jobId'>
            The id of the job to which the task is to be added.
            </param>
            <param name='task'>
            Specifies the task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ListWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.AddCollectionWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='jobId'>
            The id of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.DeleteWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='jobId'>
            The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The id of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.GetWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to update.
            </param>
            <param name='constraints'>
            Sets constraints that apply to this task. If omitted, the task is given
            the default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ListSubtasksWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskId'>
            The id of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.TerminateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperations.ListNextWithHttpMessagesAsync(System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions">
            <summary>
            Extension methods for TaskOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Add(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to which the task is to be added.
            </param>
            <param name='task'>
            Specifies the task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter,Microsoft.Azure.Batch.Protocol.Models.TaskAddOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a task to the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to which the task is to be added.
            </param>
            <param name='task'>
            Specifies the task to be added.
            </param>
            <param name='taskAddOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.List(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskListOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollection(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.AddCollectionAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.TaskAddParameter},Microsoft.Azure.Batch.Protocol.Models.TaskAddCollectionOptions,System.Threading.CancellationToken)">
            <summary>
            Adds a collection of tasks to the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job to which the task collection is to be added.
            </param>
            <param name='value'>
            The collection of tasks to add.
            </param>
            <param name='taskAddCollectionOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Delete(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The id of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.DeleteAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes a task from the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job from which to delete the task.
            </param>
            <param name='taskId'>
            The id of the task to delete.
            </param>
            <param name='taskDeleteOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Get(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.GetAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job that contains the task.
            </param>
            <param name='taskId'>
            The id of the task to get information about.
            </param>
            <param name='taskGetOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Update(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to update.
            </param>
            <param name='constraints'>
            Sets constraints that apply to this task. If omitted, the task is given
            the default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.UpdateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskConstraints,Microsoft.Azure.Batch.Protocol.Models.TaskUpdateOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to update.
            </param>
            <param name='constraints'>
            Sets constraints that apply to this task. If omitted, the task is given
            the default constraints.
            </param>
            <param name='taskUpdateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasks(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskId'>
            The id of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListSubtasksAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListSubtasksOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the subtasks that are associated with the specified
            multi-instance task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job.
            </param>
            <param name='taskId'>
            The id of the task.
            </param>
            <param name='taskListSubtasksOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.Terminate(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.TerminateAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskTerminateOptions,System.Threading.CancellationToken)">
            <summary>
            Terminates the specified task.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='jobId'>
            The id of the job containing the task.
            </param>
            <param name='taskId'>
            The id of the task to terminate.
            </param>
            <param name='taskTerminateOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNext(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
        </member>
        <member name="M:Microsoft.Azure.Batch.Protocol.TaskOperationsExtensions.ListNextAsync(Microsoft.Azure.Batch.Protocol.ITaskOperations,System.String,Microsoft.Azure.Batch.Protocol.Models.TaskListNextOptions,System.Threading.CancellationToken)">
            <summary>
            Lists all of the tasks that are associated with the specified job.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='taskListNextOptions'>
            Additional parameters for the operation
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.AddTaskCollectionDeserialziationError">
            <summary>
              Looks up a localized string similar to Deserialize AddTaskCollection response failed: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentEmptyError">
            <summary>
              Looks up a localized string similar to The argument must not be empty string..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentOutOfRangeError">
            <summary>
              Looks up a localized string similar to The argument is out of range..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentTooLargeError">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is larger than maximum of &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentTooSmallError">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is smaller than minimum of &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArgumentTypeMisMatch">
            <summary>
              Looks up a localized string similar to Argument is not a type of {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ArrayLengthZeroError">
            <summary>
              Looks up a localized string similar to The length of array {0} cannot be zero..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.CannotUpdateKeyWithoutAccountKeyCreds">
            <summary>
              Looks up a localized string similar to Cannot update key unless Account Key credentials are used..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ComparingObjectsOfDifferentClasses">
            <summary>
              Looks up a localized string similar to Comparing objects of different types: ({0}, {1}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ComparingObjectsOfDifferentClassesWithTrace">
            <summary>
              Looks up a localized string similar to {0}: Comparing objects of different types: ({1}, {2}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.CryptoFunctionFailed">
            <summary>
              Looks up a localized string similar to Crypto function failed with error code &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.Empty">
            <summary>
              Looks up a localized string similar to {0} is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.ErrorInFillProperties">
            <summary>
              Looks up a localized string similar to Error in FillProperties: type {0} OData property name {1} property value {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.InternalBatchClientError">
            <summary>
              Looks up a localized string similar to Unexpected internal batch client error..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.InvalidPropertyValue">
            <summary>
              Looks up a localized string similar to The value specified for property {0} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.InvalidPropertyValueForOperation">
            <summary>
              Looks up a localized string similar to The value specified for property {0} is invalid for operation {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.NavPropertyNotExist">
            <summary>
              Looks up a localized string similar to The navigation property {0} does not exist for entity {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.NullObject">
            <summary>
              Looks up a localized string similar to {0} is null..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.OneClassInstanceIsNull">
            <summary>
              Looks up a localized string similar to {0}: one instance is null, the other is not null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.OperationCanceled">
            <summary>
              Looks up a localized string similar to Operation was canceled by user..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.PatchRequestNoUpdateableProperty">
            <summary>
              Looks up a localized string similar to Patch request error - no updateable property present..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.PropertyNotExistInClass">
            <summary>
              Looks up a localized string similar to Property with name {0} does not exist in class {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.StringNullOrEmpty">
            <summary>
              Looks up a localized string similar to The value of {0} is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TimeoutExceptionMessage">
            <summary>
              Looks up a localized string similar to The client could not finish the operation within specified timeout..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TwoEntityPropertiesLengthNotEqual">
            <summary>
              Looks up a localized string similar to {0}: property {1} have different lengths ({2}, {3}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TwoEntityPropertiesNotEqual">
            <summary>
              Looks up a localized string similar to {0}: property {1} not equal ({2}, {3}).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.TwoPropertiesConflict">
            <summary>
              Looks up a localized string similar to The values of these two properties are conflicting:{0}, {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.UnexpectedResponseCode">
            <summary>
              Looks up a localized string similar to Unexpected response code, Expected:{0}, Received:{1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Protocol.BatchClientErrorMessages.UnKnownODataReaderState">
            <summary>
              Looks up a localized string similar to Unknown ODataReader State {0} in DeSerializing object of type {1}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyAccessController">
            <summary>
            Controls access to a set of properties.  All reads/writes pass through here.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessController.#ctor(Microsoft.Azure.Batch.BindingState)">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Azure.Batch.PropertyAccessController"/>.
            </summary>
            <param name="bindingState">The binding state to set this on this acesss controller.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessController.ReadProperty``1(System.Func{``0},Microsoft.Azure.Batch.BindingAccess,System.String)">
            <summary>
            Executes the specified <paramref name="propertyReadAction"/>.
            </summary>
            <typeparam name="T">The type of the property to read.</typeparam>
            <param name="propertyReadAction">The property read action to execute.</param>
            <param name="allowedAccess">The allowed access of the particular property.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The result of the <paramref name="propertyReadAction"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessController.WriteProperty(System.Action,Microsoft.Azure.Batch.BindingAccess,System.String)">
            <summary>
            Executes the specified <paramref name="propertyWriteAction"/>
            </summary>
            <param name="propertyWriteAction">The write action.</param>
            <param name="allowedAccess">The allowed access of the particular property.</param>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyAccessor`1">
            <summary>
            Controls access to an individual property of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessor`1.#ctor(Microsoft.Azure.Batch.PropertyAccessController,System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> with the default underlying property value.
            </summary>
            <param name="propertyAccessController">The access controller to use.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the property.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessor`1.#ctor(`0,Microsoft.Azure.Batch.PropertyAccessController,System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> with a specific underlying property value.
            </summary>
            <param name="value">The value of the property.</param>
            <param name="propertyAccessController">The access controller to use.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the property.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyAccessor`1.Value">
            <summary>
            Gets or sets the value of the underlying property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyAccessor`1.HasBeenModified">
            <summary>
            Gets if this property has been modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyAccessor`1.IsReadOnly">
            <summary>
            Gets or sets a value indicating if this <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> is read only.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyAccessor`1.ThrowIfReadOnly(System.Boolean)">
            <summary>
            Throws an exception if this is marked readonly.
            </summary>
            <param name="overrideReadOnly">If true, this method call will not throw an exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.PropertyCollection">
            <summary>
            A collection of properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyCollection.#ctor(Microsoft.Azure.Batch.BindingState)">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.
            </summary>
            <param name="bindingState">The binding state for the collection.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyCollection.HasBeenModified">
            <summary>
            Gets if any properties in the collection have been modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PropertyCollection.IsReadOnly">
            <summary>
            Gets or sets the readonlyness of this collection and all of it's properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyCollection.CreatePropertyAccessor``1(System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.
            </summary>
            <typeparam name="T">The type of the underlying property.</typeparam>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PropertyCollection.CreatePropertyAccessor``1(``0,System.String,Microsoft.Azure.Batch.BindingAccess)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.
            </summary>
            <typeparam name="T">The type of the underlying property.</typeparam>
            <param name="value">The initial value of the underlying property.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="allowedAccess">The allowed access of the <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.PropertyAccessor`1"/> included in this <see cref="T:Microsoft.Azure.Batch.PropertyCollection"/>.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.RetryPolicyProvider">
            <summary>
            A RequestInterceptor that sets the RetryPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RetryPolicyProvider.Policy">
            <summary>
            Gets or sets the retry policy to use.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.NoRetryProvider">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.NoRetry"/> policy.
            </summary>
            <returns>A provider configured to perform no retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.LinearRetryProvider(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.LinearRetry"/> policy.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries.</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
            <returns>A provider configured to perform linear retries using the specified backoff and max retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.ExponentialRetryProvider(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Azure.Batch.RetryPolicyProvider"/> using the <see cref="T:Microsoft.Azure.Batch.Common.ExponentialRetry"/> policy.
            </summary>
            <param name="deltaBackoff">The backoff interval between retries, where the resulting backoff is 2^n * deltaBackoff (where n is the number of retries)</param>
            <param name="maxRetries">The maximum number of retry attempts.</param>
            <returns>A provider configured to perform exponential retries using the specified backoff and max retries.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.RetryPolicyProvider.#ctor(Microsoft.Azure.Batch.Common.IRetryPolicy)">
            <summary>
            Initializes a new behavior to set the retry policy.
            </summary>
            <param name="retryPolicy">The retry policy to set.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.ClientRequestIdProvider">
            <summary>
            Interceptor which contains a function used to generate a client request id to set as <see cref="P:Microsoft.Azure.Batch.Protocol.Models.IOptions.ClientRequestId"/>.
            If there are multiple instances of this then the last set wins.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ClientRequestIdProvider.#ctor(System.Func{Microsoft.Azure.Batch.Protocol.IBatchRequest,System.Guid})">
            <summary>
            Initializes a new <see cref="T:Microsoft.Azure.Batch.ClientRequestIdProvider"/> for use in setting the client request id of a request.
            </summary>
            <param name="generateClientRequestIdFunc">
            A function used to generate the client request id.  This function may be called more than once for any
            given operation due to retries.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Batch.OSVersion">
            <summary>
            OSVersion.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumerable`1">
            <summary>
            Exposes synchronous and asynchronous enumerators based on async calls to server.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumerableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for working with sequences that
            implement <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking an asynchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The asynchronous delegate to execute for each element in <paramref name="source"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method awaits the asynchronous delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking an asynchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The asynchronous delegate to execute for each element in <paramref name="source"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method awaits the asynchronous delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ForEachAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Iterates over an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> sequence, invoking a synchronous delegate for each element.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to iterate over.</param>
            <param name="body">The delegate to execute for each element in <paramref name="source"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the iteration operation. The task
            completes when iteration is complete.</returns>
            <remarks>This method processes elements sequentially, not concurrently.  That is, for each element in the
            sequence, the method completes execution of the delegate before processing the next element.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PagedEnumerableExtensions.ToListAsync``1(Microsoft.Azure.Batch.IPagedEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/>.
            </summary>
            <param name="source">The <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> to create a list from.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The result
            of the task is a <see cref="T:System.Collections.Generic.List`1" /> containing all elements of the source sequence.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PagedEnumeratorBase`1">
            <summary>
            Implementents sync and async enumerator based on async calls to server.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior">
            <summary>
            A <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> which specifies how exceptions should be thrown from
            synchronous methods. 
            </summary>
            <remarks>
            By default, synchronous methods throw the same exceptions as asynchronous ones.  For compatability with versions 
            of the Azure.Batch client prior to 4.0, you can specify the <see cref="F:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior.ThrowAggregateException"/> behavior to wrap exceptions 
            thrown from synchronous methods in an <see cref="T:System.AggregateException"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior.ThrowAggregateException">
            <summary>
            This behavior causes synchronous methods to throw <see cref="T:System.AggregateException"/> on failure.
            </summary>
            <remarks>
            This was the default <see cref="T:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior"/> used by Azure.Batch versions prior to 4.0.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.SynchronousMethodExceptionBehavior"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskDependencies">
            <summary>
            Specifies the tasks that a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> depends on. The task will not be scheduled until all depended-on 
            tasks have completed successfully.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.TaskIdRange})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> class.
            </summary>
            <param name="taskIds">The list of task ids that must complete before this task can be scheduled. null is treated as an empty list.</param>
            <param name="taskIdRanges">The list of task ranges that must complete before this task can be scheduled. null is treated as an empty list.</param>
            <remarks>This constructor provides the most general way of initializing a TaskDependencies object.
            In practice, most dependencies are on a single task, a list of task ids, or a single range of
            tasks. You can express these dependencies more clearly using <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnId(System.String)"/>, <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnIds(System.String[])"/>,
            <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnTasks(Microsoft.Azure.Batch.CloudTask[])"/>, and <see cref="M:Microsoft.Azure.Batch.TaskDependencies.OnIdRange(System.Int32,System.Int32)"/> methods.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnId(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a single task.
            </summary>
            <param name="id">The task to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a single task.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of task ids.
            </summary>
            <param name="ids">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnIds(System.String[])">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of task ids.
            </summary>
            <param name="ids">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnTasks(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask})">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of tasks.
            </summary>
            <param name="tasks">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnTasks(Microsoft.Azure.Batch.CloudTask[])">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a list of tasks.
            </summary>
            <param name="tasks">The tasks to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified tasks.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.OnIdRange(System.Int32,System.Int32)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on a range of task ids.
            </summary>
            <param name="start">The first task id in the range to depend on.</param>
            <param name="end">The last task id in the range to depend on.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskDependencies"/> representing dependency on the specified range of tasks.</returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskDependencies.TaskIdRanges">
            <summary>
            Gets the list of task ranges that must complete before this task can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskDependencies.TaskIds">
            <summary>
            Gets the list of task ids that must complete before this task can be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskDependencies.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskDependencies}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskIdRange">
            <summary>
            A range of task ids that a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> depends on. All tasks with ids in the range must complete successfully 
            before the dependent task can be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskIdRange"/> class.
            </summary>
            <param name="start">The first task id in the range.</param>
            <param name="end">The last task id in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start"/> or <paramref name="end"/> is negative.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="end"/> is less than <paramref name="start"/>.</exception>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskIdRange.End">
            <summary>
            Gets the last task id in the range.
            </summary>
            <remarks>
            Ranges are inclusive. For example, if a task depends on a range with End 12, then task "12" must complete before 
            the task can be scheduled.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskIdRange.Start">
            <summary>
            Gets the first task id in the range.
            </summary>
            <remarks>
            Ranges are inclusive. For example, if a task depends on a range with Start 8, then task "8" must complete before 
            the task can be scheduled.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskIdRange}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskIdRange.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskIdRange})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudJobSchedule">
            <summary>
            A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
            </summary>
            <summary>
            A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each 
            job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The commit operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Commit(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Commits all pending changes to this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" /> to the Azure Batch service.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />, allowing jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The enable operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />, allowing jobs to be created according to the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.DisableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable operation runs asynchronously.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.EnableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Disable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.DisableAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.Enable(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Terminated schedules remain in the system but do not create new jobs.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>The terminate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Terminate(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule" />.  Terminated schedules remain in the system but do not create new jobs.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.CloudJobSchedule.TerminateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.ListJobs(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh.  If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors"/>.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.CreationTime">
            <summary>
            Gets the creation time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.DisplayName">
            <summary>
            Gets or sets the display name of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.ETag">
            <summary>
            Gets the ETag of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.ExecutionInformation">
            <summary>
            Gets the execution information for the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Id">
            <summary>
            Gets or sets the id of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification">
            <summary>
            Gets or sets a <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification" /> containing details of the jobs to be created according to the 
            <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.LastModified">
            <summary>
            Gets the last modified time of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the schedule as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.PreviousState">
            <summary>
            Gets the previous state of the job schedule.
            </summary>
            <remarks>
            If the schedule is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active"/> state, the PreviousState property 
            is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the job schedule entered its previous state.
            </summary>
            <remarks>
            If the schedule is in its initial <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Active"/> state, the PreviousStateTransitionTime 
            property is not defined.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule">
            <summary>
            Gets or sets the schedule that determines when jobs will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.State">
            <summary>
            Gets the current state of the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.StateTransitionTime">
            <summary>
            Gets the time at which the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Statistics">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.Batch.JobScheduleStatistics" /> containing resource usage statistics for the entire lifetime of the 
            job schedule.
            </summary>
            <remarks>
            This property is populated only if the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> was retrieved with an <see cref="P:Microsoft.Azure.Batch.ODATADetailLevel.ExpandClause"/> 
            including the 'stats' attribute; otherwise it is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudJobSchedule.Url">
            <summary>
            Gets the URL of the job schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudJobSchedule.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobScheduleAddParameter}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskStateMonitor">
            <summary>
            Provides utilities to help monitor CloudTask states.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStateMonitor.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WaitAllAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins asynchronous call to monitor an CloudTask collection until each of its members has reached a desired state at least once.
            The State of each CloudTask instance is assumed to authoritative at the time of the call.
            Instances that are already at the desiredState are ignored.
            The CloudTask instances in the collection are treated as read-only.
            No updates are made to any of these instances.
            This means that when the call completes (timeout or not) the CloudTask instances should be refreshed before using.
            </summary>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks.  The WaitAll will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>True if the WaitAll timed out, false if it did not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAllAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins asynchronous call to monitor an CloudTask collection until each of its members has reached a desired state at least once.
            The State of each CloudTask instance is assumed to authoritative at the time of the call.
            Instances that are already at the desiredState are ignored.
            The CloudTask instances in the collection are treated as read-only.
            No updates are made to any of these instances.
            This means that when the call completes (timeout or not) the CloudTask instances should be refreshed before using.
            </summary>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks.  The WhenAll will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>True if the WhenAll timed out, false if it did not.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WhenAllAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,System.Threading.CancellationToken,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Begins asynchronous call to monitor an CloudTask collection until each of its members has reached a desired state at least once.
            The State of each CloudTask instance is assumed to authoritative at the time of the call.
            Instances that are already at the desiredState are ignored.
            The CloudTask instances in the collection are treated as read-only.
            No updates are made to any of these instances.
            This means that when the call completes (timeout or not) the CloudTask instances should be refreshed before using.
            If time time specified in the <paramref name="timeout"/> is exceeded a <see cref="T:System.TimeoutException"/> is thrown.
            </summary>
            <remarks>This method throws an exception if a timeout or cancellation occurs.</remarks>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks.  The WaitAll will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskStateMonitor.WaitAll(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.Common.TaskState,System.TimeSpan,Microsoft.Azure.Batch.ODATAMonitorControl,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to monitor an CloudTask collection until each of its members has reached a desired state at least once.
            The State of each CloudTask instance is assumed to authoritative at the time of the call.
            Instances that are already at the desiredState are ignored.
            The CloudTask instances in the collection are treated as read-only.
            No updates are made to any of these instances.
            This means that when the call completes (timeout or not) the CloudTask instances should be refreshed before using.
            </summary>
            <param name="tasksToMonitor">The collection of tasks to monitor.</param>
            <param name="desiredState">The target state of the tasks.  The WaitAll will exit when all tasks have reached this state at least once.</param>
            <param name="timeout">The maximum amount of time this call will wait before timing out.</param>
            <param name="controlParams">Controls various settings of the monitor, such as delay between each poll.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>True if the WaitAll timed out, false if it did not.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Utilities">
            <summary>
            Tools and utilities for the Azure Batch Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Utilities.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.Utilities"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.Utilities.CreateTaskStateMonitor">
            <summary>
            Creates an TaskStateMonitor.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.TaskStateMonitor"/> instance.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics">
            <summary>
            Informs the Commit() call that the state transfer between the client and server is 
            either a create-user or update-user operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics.AddUser">
            <summary>
            The Commit operation is adding a new user.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics.UpdateUser">
            <summary>
            The Commit operation is updating an existing user.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeUser">
            <summary>
            A user for a specific Azure Batch compute node.
            </summary>
            <summary>
            A user for a specific Azure Batch compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to create or update a user account on the compute node.
            </summary>
            <param name="addOrUpdate">Selects the type of commit operation to perform.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Commit(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to create or update a user account on the compute node.
            </summary>
            <param name="addOrUpdate">Selects the type of commit operation to perform.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asyncrhonous call to delete the current user from the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Delete(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            call to delete the current user from the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.#ctor(Microsoft.Azure.Batch.BatchClient,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> class.
            </summary>
            <param name='parentBatchClient'>The parent <see cref="T:Microsoft.Azure.Batch.BatchClient"/> to use.</param>
            <param name='baseBehaviors'>The base behaviors to use.</param>
            <param name='parentPoolId'>The parentPoolId.</param>
            <param name='parentNodeId'>The parentNodeId.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.ExpiryTime">
            <summary>
            Gets or sets the expiry time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.IsAdmin">
            <summary>
            Gets or sets the administrative privilege level of the user account. The value of this property is ignored when 
            UpdateUser is specified for the commit operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.Name">
            <summary>
            Gets or sets the name. If AddUser is specified for the commit operation, the value of this property is the name 
            of the local Windows account created. If UpdateUser is specified for the commit operation, the value of this 
            property selects the local Windows account to modify. Changing this property does not rename the local Windows 
            account on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeUser.SshPublicKey">
            <summary>
            Gets or sets the SSH public key that can be used for remote login to the compute node.
            </summary>
            <remarks>
            <para>The public key should be compatible with Open SSH encoding and should be base 64 encoded. This property 
            can be specified only for Linux nodes. The Batch service will return an error if this property is set for pools 
            created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration"/> or <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> 
            with Windows compute nodes.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeUser.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ComputeNodeUser}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNode">
            <summary>
            Summarizes the state of a compute node.
            </summary>
            <summary>
            Summarizes the state of a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.CreateComputeNodeUser">
            <summary>
            Instantiates an unbound ComputeNodeUser object to be populated by the caller and used to create a user account on the compute node in the Azure Batch service.
            </summary>
            <returns>An <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUserAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to delete the specified ComputeNodeUser.
            </summary>
            <param name="userName">The name of the ComputeNodeUser to be deleted.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DeleteComputeNodeUser(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to delete the specified ComputeNodeUser.
            </summary>
            <param name="userName">The name of the ComputeNodeUser to be deleted.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.
            </summary>
            <param name="rdpStream">The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get RDP file data targeting the compute node of the current instance and write them to a specified Stream.
            </summary>
            <param name="rdpStream">The Stream into which the RDP file data will be written.  This stream will not be closed or rewound by this call.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.
            </summary>
            <param name="rdpFileNameToCreate">The name of the RDP file to be created.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRDPFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get RDP file data targeting the compute node of the current instance and write them to a file with the specified name.
            </summary>
            <param name="rdpFileNameToCreate">The name of the RDP file to be created.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The get remote login settings operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettings(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ComputeNode.GetRemoteLoginSettingsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPoolAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to remove the compute node from the pool.
            </summary>
            <param name="deallocationOption">The deallocation option to use when removing the compute node from the pool.</param>
            <param name="resizeTimeout">The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RemoveFromPool(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to remove the compute node from the pool.
            </summary>
            <param name="deallocationOption">The deallocation option to use when removing the compute node from the pool.</param>
            <param name="resizeTimeout">The maximum amount of time which the RemoveFromPool operation can take before being terminated by the Azure Batch system.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RebootAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to reboot the compute node.
            </summary>
            <param name="rebootOption">The reboot option associated with the reboot.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Reboot(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to reboot the compute node.
            </summary>
            <param name="rebootOption">The reboot option associated with the reboot.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.ReimageAsync(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous call to reimage the compute node.
            </summary>
            <param name="reimageOption">The reimage option associated with the reimage.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Reimage(System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to reimage the compute node.
            </summary>
            <param name="reimageOption">The reimage option associated with the reimage.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetNodeFileAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins an asynchronous request to get the specified NodeFile.
            </summary>
            <param name="fileName">The name of the NodeFile.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.GetNodeFile(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to get the specified NodeFile.
            </summary>
            <param name="fileName">The name of the NodeFile.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <returns>A bound <see cref="T:Microsoft.Azure.Batch.NodeFile"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.ListNodeFiles(System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Exposes synchronous and asynchronous enumeration of the files for the node.
            </summary>
            <param name="recursive">If true, performs a recursive list of all files of the node. If false, returns only the files at the node directory root.</param>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object and after the behavior implementing the DetailLevel.</param>
            <returns>An instance of IPagedEnumerable that can be used to enumerate objects using either synchronous or asynchronous patterns.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.EnableSchedulingAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables task scheduling on the compute node.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ComputeNode.EnableScheduling(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the compute node.
            </summary>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.DisableScheduling(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables task scheduling on the compute node.
            </summary>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.ComputeNode.DisableSchedulingAsync(System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Refreshes the current <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh. If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.ComputeNode.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous refresh operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNode.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Refreshes the <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <param name="detailLevel">The detail level for the refresh. If a detail level which omits the <see cref="P:Microsoft.Azure.Batch.ComputeNode.Id"/> property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.ComputeNode"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.AffinityId">
            <summary>
            Gets an opaque string that contains information about the location of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.AllocationTime">
            <summary>
            Gets the time at which this compute node was allocated to the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.CertificateReferences">
            <summary>
            Gets the list of certificates installed on this compute node. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Errors">
            <summary>
            Gets the list of errors that are currently being encountered by the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Id">
            <summary>
            Gets the id of compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.IPAddress">
            <summary>
            Gets the IP address associated with the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.LastBootTime">
            <summary>
            Gets the time at which the compute node was started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.RecentTasks">
            <summary>
            Gets the execution information for the most recent tasks that ran on this compute node. Note that this element 
            is only returned if at least one task was run on this compute node since the time it was assigned to its current 
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.SchedulingState">
            <summary>
            Gets whether the node is available for task scheduling.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StartTask">
            <summary>
            Gets the start task associated with all compute nodes in this pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StartTaskInformation">
            <summary>
            Gets the detailed runtime information of the start task, including current state, error details, exit code, start 
            time, end time, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.State">
            <summary>
            Gets the current state of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.StateTransitionTime">
            <summary>
            Gets the time at which the compute node entered the current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.TotalTasksRun">
            <summary>
            Gets the number of tasks that have been run on this compute node from the time it was allocated to this pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.Url">
            <summary>
            Gets the URL of compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNode.VirtualMachineSize">
            <summary>
            Gets the size of virtual machines in the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IModifiable">
            <summary>
            An interface to manage objects that can be modified.
            
            Please use "Explicit Interface Implementation" to hide these methods on public classes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.IModifiable.HasBeenModified">
            <summary>
            Returns true if the object has been modified.
            This is recursive through complex child properties.
            
            Note special care must be take for "administrative" property writes as they
            might trigger a false positive on this test.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.#ctor(System.String,Microsoft.Azure.Batch.Protocol.BatchCredentials)">
            <summary>
            instantiate based on creds and base url
            </summary>
            <param name="baseURL"></param>
            <param name="credentials"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.#ctor(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            instantiate based on customer provided rest proxy
            </summary>
            <param name="clientToUse"></param>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ExecuteRequestInterceptors``1(Microsoft.Azure.Batch.Protocol.IBatchRequest{``0},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Applies and executes the RequestInterceptors found in behaviors collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ProcessAndExecuteBatchRequest``1(Microsoft.Azure.Batch.Protocol.IBatchRequest{``0},Microsoft.Azure.Batch.BehaviorManager)">
            <summary>
            Process and executes a BatchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.ValidateReturnObject(System.Object,System.Type)">
            <summary>
            Common validation that will throw if an incorrect instance is returned by a custom behavior.
            </summary>
            <param name="proxyObj"></param>
            <param name="expectedType"></param>
        </member>
        <member name="F:Microsoft.Azure.Batch.ProtocolLayer._disposed">
            <summary>
            A value indicating whether or not the ServiceClient has already
            been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ProtocolLayer.Dispose">
            <summary>
            Dispose the ProtocolLayer class. This function is not thread-safe.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AffinityInformation">
            <summary>
            A locality hint that can be used by the Batch service to select a compute node on which to start a new task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AffinityInformation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AffinityInformation"/> class.
            </summary>
            <param name='affinityId'>An opaque string that represents a previously run task or compute node.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.AffinityInformation.AffinityId">
            <summary>
            Gets an opaque string that represents a previously run task or compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AffinityInformation.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#AffinityInformation}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ApplicationPackageReference">
            <summary>
            A reference to an application package to be installed on compute nodes in a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ApplicationPackageReference"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationPackageReference.ApplicationId">
            <summary>
            Gets or sets the id of the application to be installed on the compute nodes. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationPackageReference.Version">
            <summary>
            Gets or sets the version of the application to be installed on the compute nodes.
            </summary>
            <remarks>
            If not specified, the default version of the application, as defined in the application settings, is installed. 
            If no default version is defined in the application settings, you must specify a version in the <see cref="T:Microsoft.Azure.Batch.ApplicationPackageReference"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ApplicationPackageReference}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ApplicationPackageReference.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ApplicationSummary">
            <summary>
            Contains information about an application in an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationSummary.DisplayName">
            <summary>
            Gets the display name of the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationSummary.Id">
            <summary>
            Gets the id of the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ApplicationSummary.Versions">
            <summary>
            Gets a readonly list of available versions of the application.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoPoolSpecification">
            <summary>
            Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the 
            tasks for the job on it, and by default delete the pool once the job has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.AutoPoolSpecification"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.AutoPoolIdPrefix">
            <summary>
            Gets or sets a prefix to be added to the unique identifier when a pool is automatically created.
            </summary>
            <remarks>
            The prefix is optional. If present, it can be up to 20 characters long and must adhere to the usual rules for 
            ids (alphanumeric characters, hyphens and underscores only).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.KeepAlive">
            <summary>
            Gets or sets whether to keep the auto pool alive after its <see cref="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolLifetimeOption"/> expires.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolLifetimeOption">
            <summary>
            Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to 
            pools.
            </summary>
            <remarks>
            An auto pool may live longer than its PoolLifetimeOption if <see cref="P:Microsoft.Azure.Batch.AutoPoolSpecification.KeepAlive"/> is set.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoPoolSpecification.PoolSpecification">
            <summary>
            Gets or sets the pool specification for the auto pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.AutoPoolSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#AutoPoolSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleRun">
            <summary>
            The results and errors from an evaluation or execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Error">
            <summary>
            Gets details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Results">
            <summary>
            Gets the final values of all variables used in the evaluation of the autoscale formula. Each variable value is 
            returned in the form $variable=value, and variables are separated by semicolons.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRun.Timestamp">
            <summary>
            Gets the time at which the autoscale formula was last evaluated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AutoScaleRunError">
            <summary>
            An error that occurred when executing or evaluating a pool autoscale formula.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Code">
            <summary>
            Gets a code for the autoscale error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Message">
            <summary>
            Gets a message describing the autoscale error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.AutoScaleRunError.Values">
            <summary>
            Gets a list of additional error details related to the autoscale error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchError">
            <summary>
            An error received from the Azure Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchError.Code">
            <summary>
            Gets a code for the error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchError.Message">
            <summary>
            Gets a message describing the error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchError.Values">
            <summary>
            Gets a collection of key-value pairs containing additional details about the error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchErrorDetail">
            <summary>
            An item of additional information included in a <see cref="T:Microsoft.Azure.Batch.BatchError"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorDetail.Key">
            <summary>
            Gets an identifier specifying the meaning of the <see cref="P:Microsoft.Azure.Batch.BatchErrorDetail.Value"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorDetail.Value">
            <summary>
            Gets the additional information included with the <see cref="T:Microsoft.Azure.Batch.BatchError"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchErrorDetail.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchErrorDetail.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchErrorDetail.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.BatchErrorDetail})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.CloudServiceConfiguration">
            <summary>
            The configuration of cloud service for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudServiceConfiguration.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration"/> class.
            </summary>
            <param name='osFamily'>The Azure Guest OS family to be installed on the virtual machines in the pool.</param>
            <param name='targetOSVersion'>The Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which 
            specifies the latest operating system version for the specified <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily"/>.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion">
            <summary>
            Gets the Azure Guest OS version currently installed on the virtual machines in the pool. This may differ from 
            <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> if the pool state is <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily">
            <summary>
            Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value 
            is * which specifies the latest operating system version for the specified <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.OSFamily"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.CloudServiceConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#CloudServiceConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeError">
            <summary>
            An error encountered by an Azure Batch compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.Code">
            <summary>
            Gets a code for the compute node error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.ErrorDetails">
            <summary>
            Gets a list of additional error details related to the compute node error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeError.Message">
            <summary>
            Gets a message describing the compute node error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ComputeNodeError.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeError})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ComputeNodeInformation">
            <summary>
            The compute node information class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.AffinityId">
            <summary>
            Gets an opaque string that contains information about the location of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.ComputeNodeId">
            <summary>
            Gets the compute node id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.ComputeNodeUrl">
            <summary>
            Gets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.PoolId">
            <summary>
            Gets the pool id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.TaskRootDirectory">
            <summary>
            Gets the root directory of the current task on the compute node. You can use this path to retrieve files created 
            by the task such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ComputeNodeInformation.TaskRootDirectoryUrl">
            <summary>
            Gets the URL to the root directory of the current task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.DeleteCertificateError">
            <summary>
            An error encountered by the Batch service when deleting a certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Code">
            <summary>
            Gets a code for the certificate deletion error. See <see cref="T:Microsoft.Azure.Batch.Common.BatchErrorCodeStrings"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Message">
            <summary>
            Gets a message describing the certificagte deletion error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.DeleteCertificateError.Values">
            <summary>
            Gets a list of additional error details related to the certificate deletion error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process, such as a job task, start task, job manager task, or job preparation 
            or release task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.EnvironmentSetting"/> class.
            </summary>
            <param name='name'>The name of the environment variable.</param>
            <param name='value'>The value of the environment variable.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.EnvironmentSetting.Name">
            <summary>
            Gets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.EnvironmentSetting.Value">
            <summary>
            Gets the value of the environment variable.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#EnvironmentSetting}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.EnvironmentSetting.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.EnvironmentSetting})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ErrorMessage">
            <summary>
            An error message received in an Azure Batch error response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ErrorMessage.Language">
            <summary>
            Gets the language code of the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ErrorMessage.Value">
            <summary>
            Gets the text of the message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.FileProperties">
            <summary>
            The properties of a file on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.ContentLength">
            <summary>
            Gets the length of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.ContentType">
            <summary>
            Gets the content type of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.CreationTime">
            <summary>
            Gets the file creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.FileMode">
            <summary>
            Gets the permission attribute for the file.
            </summary>
            <remarks>
            This property will be returned only for Linux nodes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.FileProperties.LastModified">
            <summary>
            Gets the time at which the file was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ImageReference">
            <summary>
            The information about the platform or marketplace image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ImageReference"/> class.
            </summary>
            <param name='offer'>The offer type of the image.</param>
            <param name='publisher'>The publisher of the image.</param>
            <param name='skuId'>The id the Sku of the image.</param>
            <param name='version'>The version of the image. A value of 'latest' can be specified to select the latest version of an image.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Offer">
            <summary>
            Gets the offer type of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Publisher">
            <summary>
            Gets the publisher of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.SkuId">
            <summary>
            Gets the id the Sku of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ImageReference.Version">
            <summary>
            Gets the version of the image. A value of 'latest' can be specified to select the latest version of an image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ImageReference}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ImageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ImageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ImageReference.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ImageReference})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobConstraints">
            <summary>
            Specifies the execution constraints for a job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobConstraints"/> class.
            </summary>
            <param name='maxWallClockTime'>The maximum duration of time for which a job is allowed to run from the time it is created.</param>
            <param name='maxTaskRetryCount'>The max number of retries for a job.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the max number of retries for a job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a job is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobConstraints.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobConstraints}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobExecutionInformation">
            <summary>
            Information about the execution of an Azure Batch job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.EndTime">
            <summary>
            Gets the completion time of this job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.PoolId">
            <summary>
            Gets the pool Id of this job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.SchedulingError">
            <summary>
            Gets the error encountered by the Batch service in scheduling the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.StartTime">
            <summary>
            Gets the creation time of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobExecutionInformation.TerminateReason">
            <summary>
            Gets the reason for job moving to completed state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobManagerTask">
            <summary>
            Represents an Azure Batch JobManager task. 
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobManagerTask"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.CommandLine">
            <summary>
            Gets or sets the command-line to be used to launch the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.Constraints">
            <summary>
            Gets or sets the execution constraints for this JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.DisplayName">
            <summary>
            Gets or sets the display name of the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.EnvironmentSettings">
            <summary>
            Gets or sets a set of environment settings for the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.Id">
            <summary>
            Gets or sets the id of the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.KillJobOnCompletion">
            <summary>
            Gets or sets a value that indicates whether to terminate all tasks in the job and complete the job when the job 
            manager task completes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.ResourceFiles">
            <summary>
            Gets or sets a set of Windows Azure blobs that are required to run the JobManager task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.RunElevated">
            <summary>
            Gets or sets the value that indicates if run the task as admin.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobManagerTask.RunExclusive">
            <summary>
            Gets or sets the value that indicates if the JobManager use the compute node exclusively.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobManagerTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobManagerTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation">
            <summary>
            Holds the status of the Job Preparation task and Job Release task for a given compute node in a given pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeId">
            <summary>
            Gets the id of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.ComputeNodeUrl">
            <summary>
            Gets the URL of the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.JobPreparationTaskExecutionInformation">
            <summary>
            Gets the execution information of Job Preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.JobReleaseTaskExecutionInformation">
            <summary>
            Gets the execution information of Job Release task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationAndReleaseTaskExecutionInformation.PoolId">
            <summary>
            Gets the identifer of the pool.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTask">
            <summary>
            A Job Preparation task to run before any tasks of the job on any given compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobPreparationTask"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.CommandLine">
            <summary>
            Gets or sets the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.Constraints">
            <summary>
            Gets or sets the execution constraints provided by the user for this job preparation task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.EnvironmentSettings">
            <summary>
            Gets or sets the collection of EnvironmentSetting instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.RerunOnComputeNodeRebootAfterSuccess">
            <summary>
            Gets or sets the value that controls the rerun of the job preparation task after a reboot of a compute node which 
            had a previously successful run the job preparation task.
            </summary>
            <remarks>
            If this property is not specified, a default value of true is assigned by the Batch Service. Note that the job 
            preparation task should still be written to be idempotent because it can be retun if the compute node is rebooted 
            while Job Prep Task is still running.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.ResourceFiles">
            <summary>
            Gets or sets the collection of ResourceFile instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.RunElevated">
            <summary>
            Gets or sets the value that determines the elevation state of the process. True specifies that the process is 
            to run under elevation as Administrator. False specifes no elevation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTask.WaitForSuccess">
            <summary>
            Gets or sets the value that specifies if the Batch Service should wait for the successful completion of the job 
            preparation task before scheduling any tasks on the compute node.
            </summary>
            <remarks>
            A job preparation task execution is considered successful if its ExitCode is 0. If this property is not specified, 
            a default value of true is assigned by the Batch Service.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobPreparationTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobPreparationTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Preparation task on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
            <remarks>
            This property is only returned if the task is in completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the task.
            </summary>
            <remarks>
            This property is only returned if the task is in completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which this task's execution was retried by the Batch Service.
            </summary>
            <remarks>
            This is only returned if the <see cref="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount"/> is not 0.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.RetryCount">
            <summary>
            Gets the number of times the task has been retried by the Batch Service. Every time the task exits with a non-zero 
            code, it is deemed as an application failure. The Batch Service will retry the task up to the specified MaxTaskRetryLimit.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.SchedulingError">
            <summary>
            Gets the TaskSchedulingError encountered by the service in starting the task.
            </summary>
            <remarks>
            This property is only returned if there was an error in scheduling the task and it is now in completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running. Note that every time the task is restarted this value is reset.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.State">
            <summary>
            Gets the current running state of the task.
            </summary>
            <remarks>
            Running means the task is currently running. Completed means the task has completed. The Completed state includes 
            the case where the task exits successfully with exit code 0 and the cases where the system fails to start the 
            task process due to scheduling errors or the retry limit has reached after numerous task failures. 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets the root directory of the Job Preparation task on the compute node. You can use this path to retrieve files 
            created by the task such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobPreparationTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets the URL to the root directory of the Job Preparation task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTask">
            <summary>
            A Job Release task to run on job completion on any compute node where the job has run.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobReleaseTask"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.CommandLine">
            <summary>
            Gets or sets the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.EnvironmentSettings">
            <summary>
            Gets or sets the collection of EnvironmentSetting instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a task is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.ResourceFiles">
            <summary>
            Gets or sets the collection of ResourceFile instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.RetentionTime">
            <summary>
            Gets or sets the duration of time for which files in the task's working directory are retained, from the time 
            it completes execution. After this duration, the task's working directory is reclaimed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTask.RunElevated">
            <summary>
            Gets or sets the value that determines the elevation state of the process. True specifies that the process is 
            to run under elevation as Administrator. False specifes no elevation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobReleaseTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobReleaseTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation">
            <summary>
            Contains information about the execution of a Job Release task on a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
            <remarks>
            This property is only returned if the task is in completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the task.
            </summary>
            <remarks>
            This property is only returned if the task is in completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.SchedulingError">
            <summary>
            Gets the TaskSchedulingError encountered by the service in starting the task.
            </summary>
            <remarks>
            This property is only returned if there was an error in scheduling the task and it is now in completed state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running. Note that every time the task is restarted this value is reset.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.State">
            <summary>
            Gets the current running state of the task.
            </summary>
            <remarks>
            Running means the task is currently running. Completed means the task has completed. The Completed state includes 
            the case where the task exits successfully with exit code 0 and the cases where the system fails to start the 
            task process due to scheduling errors or the retry limit has reached after numerous task failures. 
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.TaskRootDirectory">
            <summary>
            Gets the root directory of the Job Release task on the compute node. You can use this path to retrieve files 
            created by the task such as log files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobReleaseTaskExecutionInformation.TaskRootDirectoryUrl">
            <summary>
            Gets the URL to the root directory of the Job Release task on the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleExecutionInformation">
            <summary>
            The execution information for a job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.EndTime">
            <summary>
            Gets the completion time of the job schedule. This property is only returned for completed job schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.NextRunTime">
            <summary>
            Gets the time at which the next job will be scheduled under this job schedule. This property is only returned 
            for active job schedules.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleExecutionInformation.RecentJob">
            <summary>
            Gets the information about the most recent job under the job schedule. Note that this element is only returned 
            if the job schedule contains at least one job under it.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleStatistics">
            <summary>
            Resource usage statistics for a <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.FailedTaskCount">
            <summary>
            Gets the total number of tasks in the job schedule that failed during the given time range.
            </summary>
            <remarks>
            If a task exits with a non-zero exit code, it is deemed as an application error,  and the system will rerun the 
            task up to the given MaxRetryCount. When the retry count is reached, the task is deemed failed.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.LastUpdateTime">
            <summary>
            Gets the end time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.ReadIOGiB">
            <summary>
            Gets the total gibibytes of I/O read by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.ReadIOps">
            <summary>
            Gets the total number of I/O read operations made by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.StartTime">
            <summary>
            Gets the start time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.SucceededTaskCount">
            <summary>
            Gets the total number of tasks successfully completed in the job schedule during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.TaskRetryCount">
            <summary>
            Gets the total number of retries occurred on all the tasks in the job schedule during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.Url">
            <summary>
            Gets the URL.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WaitTime">
            <summary>
            Gets the wait time for a task is the time between the task creation and the start of the most recent task execution 
            (if the task is retried due to failures).
            </summary>
            <remarks>
            This is the total wait time across all the tasks in the job schedule. This value is only reported in the lifetime 
            statistics.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WallClockTime">
            <summary>
            Gets the total wall clock time of all the tasks in the job schedule. Note that if any task was retried multiple 
            times, this includes the wall clock time of all the task retries.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WriteIOGiB">
            <summary>
            Gets the total gibibytes of I/O written by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleStatistics.WriteIOps">
            <summary>
            Gets the total number of I/O write operations made by all the tasks in the job schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSchedulingError">
            <summary>
            An error encountered by the Batch service when scheduling a job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Category">
            <summary>
            Gets the category of the job scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Code">
            <summary>
            Gets a code for the job scheduling error. See <see cref="T:Microsoft.Azure.Batch.Common.JobSchedulingErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Details">
            <summary>
            Gets a list of additional error details related to the scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSchedulingError.Message">
            <summary>
            Gets a message describing the job scheduling error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobSpecification">
            <summary>
            The <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.JobSpecification"/> of a <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.JobSpecification"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.CommonEnvironmentSettings">
            <summary>
            Gets or sets a list of common environment variable settings.
            </summary>
            <remarks>
            These environment variables are set for all tasks in jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> (including 
            the Job Manager, Job Preparation and Job Release tasks).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Constraints">
            <summary>
            Gets or sets the execution constraints for jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.DisplayName">
            <summary>
            Gets or sets a display name for all jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobManagerTask">
            <summary>
            Gets or sets details of a Job Manager task to be launched when a job is created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobPreparationTask">
            <summary>
            Gets or sets the Job Preparation task for jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
            <remarks>
            The Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on 
            that compute node.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.JobReleaseTask">
            <summary>
            Gets or sets the Job Release task for jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>. 
            </summary>
            <remarks>
            The Batch service runs the Job Release task when the job ends, on each compute node where any task of the job 
            has run.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/> 
            as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.PoolInformation">
            <summary>
            Gets or sets the pool on which the Batch service runs the tasks of jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.Priority">
            <summary>
            Gets or sets the priority of jobs created via this <see cref="T:Microsoft.Azure.Batch.JobSpecification"/>.
            </summary>
            <remarks>
             Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest 
            priority.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobSpecification.UsesTaskDependencies">
            <summary>
            Gets or sets whether tasks in jobs created under this <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> can define dependencies 
            on each other.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#JobSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobStatistics">
            <summary>
            Resource usage statistics for the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.FailedTaskCount">
            <summary>
            Gets the total number of tasks failures in the job that failed during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.LastUpdateTime">
            <summary>
            Gets the end time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.ReadIOGiB">
            <summary>
            Gets the total gibibytes of I/O (network + disk) disk read made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.ReadIOps">
            <summary>
            Gets the total number of disk I/O (network + disk) read operations made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.StartTime">
            <summary>
            Gets the start time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.SucceededTaskCount">
            <summary>
            Gets the total number of tasks successfully completed in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.TaskRetryCount">
            <summary>
            Gets the total number of retries occurred on all the tasks in the job during the given time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.Url">
            <summary>
            Gets the URL of the job stats.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WaitTime">
            <summary>
            Gets the total wait time across all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WallClockTime">
            <summary>
            Gets the total elapsed time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WriteIOGiB">
            <summary>
            Gets the total gibibytes of I/O (network + disk) disk written made by all the tasks in the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobStatistics.WriteIOps">
            <summary>
            Gets the total number of disk I/O (network + disk) write operations made by all the tasks in the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.MetadataItem">
            <summary>
            An item of metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.MetadataItem"/> class.
            </summary>
            <param name='name'>The metadata name.</param>
            <param name='value'>The metadata value.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.MetadataItem.Name">
            <summary>
            Gets the metadata name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.MetadataItem.Value">
            <summary>
            Gets the metadata value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#MetadataItem}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MetadataItem.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.MetadataItem})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.MultiInstanceSettings">
            <summary>
            The settings that can be used by the Batch service to decide how to run multi-instance task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MultiInstanceSettings.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.MultiInstanceSettings"/> class.
            </summary>
            <param name='numberOfInstances'>The number of compute node instances used for multi-instance task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.MultiInstanceSettings.CommonResourceFiles">
            <summary>
            Gets or sets a list of files that Batch will download on all subtasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.MultiInstanceSettings.CoordinationCommandLine">
            <summary>
            Gets or sets the command to be run on the compute node instances to setup coordination among the subtasks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.MultiInstanceSettings.NumberOfInstances">
            <summary>
            Gets or sets the number of compute node instances used for multi-instance task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.MultiInstanceSettings.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#MultiInstanceSettings}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.NameValuePair">
            <summary>
            Represents a name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NameValuePair.Name">
            <summary>
            Gets the name in the name-value pair.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NameValuePair.Value">
            <summary>
            Gets the value in the name-value pair.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.NameValuePair.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.NameValuePair})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.NodeAgentSku">
            <summary>
            A node agent Sku supported by Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeAgentSku.Id">
            <summary>
            Gets the id of the node agent sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeAgentSku.OSType">
            <summary>
            Gets the type of OS that the node agent sku is targeted against.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.NodeAgentSku.VerifiedImageReferences">
            <summary>
            Gets the list of images which the node agent SKU has been verified to run against. This collection is not exhaustive 
            (the node agent may work against other images as well).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolInformation">
            <summary>
            Specifies how a job should be assigned to a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.PoolInformation"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification">
            <summary>
            Gets or sets the properties for the auto pool that will be created.
            </summary>
            <remarks>
            If this property is set, then <see cref="P:Microsoft.Azure.Batch.PoolInformation.PoolId"/> must be left unset.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolInformation.PoolId">
            <summary>
            Gets or sets the name of an existing pool that can be used for running tasks.
            </summary>
            <remarks>
            If this property is set, then <see cref="P:Microsoft.Azure.Batch.PoolInformation.AutoPoolSpecification"/> must be left unset.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolInformation.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#PoolInformation}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolSpecification">
            <summary>
            The specification for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.ApplicationPackageReferences">
            <summary>
            Gets or sets a list of application package references to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled">
            <summary>
            Gets or sets whether the pool size should automatically adjust over time.
            </summary>
            <remarks>
            <para>If false, the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated"/> property is required.</para> <para>If true, the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula"/> 
            property is required. The pool automatically resizes according to the formula.</para> <para>The default value 
            is false.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEvaluationInterval">
            <summary>
            Gets or sets a time interval at which to automatically adjust the pool size according to the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula"/>.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum allowed value is 5 minutes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleFormula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            <para>This property is required if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true.</para><para>The formula is 
            checked for validity before the pool is created. If the formula is not valid, an exception is thrown when you 
            try to commit the <see cref="T:Microsoft.Azure.Batch.PoolSpecification"/>.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.CertificateReferences">
            <summary>
            Gets or sets a list of certificates to be installed on each compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration"/> for the pool.
            </summary>
            <remarks>
            This property is mutually exclusive with <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.InterComputeNodeCommunicationEnabled">
            <summary>
            Gets or sets whether the pool permits direct communication between compute nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.MaxTasksPerComputeNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
            </summary>
            <remarks>
            The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool 
            (the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize"/> property).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the pool.
            </summary>
            <remarks>
            <para>This timeout applies only to manual scaling; it has no effect when <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set 
            to true.</para><para>The default value is 15 minutes. The minimum value is 5 minutes.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.StartTask">
            <summary>
            Gets or sets a task to run on each compute node as it joins the pool. The task runs when the node is added to 
            the pool or when the node is restarted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TargetDedicated">
            <summary>
            Gets or sets the desired number of compute nodes in the pool.
            </summary>
            <remarks>
            This setting cannot be specified if <see cref="P:Microsoft.Azure.Batch.PoolSpecification.AutoScaleEnabled"/> is set to true. It is required if AutoScaleEnabled 
            is set to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed among compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineConfiguration"/> of the pool.
            </summary>
            <remarks>
            This property is mutually exclusive with <see cref="P:Microsoft.Azure.Batch.PoolSpecification.CloudServiceConfiguration"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolSpecification.VirtualMachineSize">
            <summary>
            Gets or sets the size of virtual machines in the pool. All VMs in a pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines, see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. 
            Batch supports all Azure cloud service VM sizes except ExtraSmall.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolSpecification.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#PoolSpecification}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolStatistics">
            <summary>
            Contains utilization and resource usage statistics for the lifetime of a pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.PoolStatistics.StartTime"/> and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.ResourceStatistics">
            <summary>
            Gets statistics related to resource consumption by compute nodes in the pool, such as average CPU utilization.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.Url">
            <summary>
            Gets the URL for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolStatistics.UsageStatistics">
            <summary>
            Gets statistics related to pool usage information, such as the amount of core-time used.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolUsageMetrics">
            <summary>
            The usage metrics for a single pool in a certain time range.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.DataEgressGiB">
            <summary>
            Gets the cross data center network egress from the pool during this interval, in gibibytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.DataIngressGiB">
            <summary>
            Gets the cross data center network ingress to the pool during this interval, in gibibytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.EndTime">
            <summary>
            Gets the end time of the aggregation interval for this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.PoolId">
            <summary>
            Gets the id of the pool whose metrics are aggregated in this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.StartTime">
            <summary>
            Gets the start time of the aggregation interval covered by this entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.TotalCoreHours">
            <summary>
            Gets the total core hours used in the pool during this aggregation interval.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolUsageMetrics.VirtualMachineSize">
            <summary>
            Gets the size of virtual machine in the pool. All virtual machines in a pool are the same size. Azure Batch supports 
            all Azure virtual machine sizes except ExtraSmall.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RecentJob">
            <summary>
            Information about the most recent job under a job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RecentJob.Id">
            <summary>
            Gets the id of the job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RecentJob.Url">
            <summary>
            Gets the URL of the job.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.RemoteLoginSettings">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RemoteLoginSettings.IPAddress">
            <summary>
            Gets the IP address used for remote login to the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.RemoteLoginSettings.Port">
            <summary>
            Gets the port used for remote login to the compute node.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Code">
            <summary>
            Gets a code for the pool resize error. See <see cref="T:Microsoft.Azure.Batch.Common.PoolResizeErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Message">
            <summary>
            Gets a message describing the pool resize error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResizeError.Values">
            <summary>
            Gets a list of additional error details related to the pool resize error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResourceFile">
            <summary>
            A resource file which specifies a blob path and optionally the name of the file to download the blob to on the Node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.ResourceFile"/> class.
            </summary>
            <param name='blobSource'>The blob source of the file.</param>
            <param name='filePath'>The location to download the file on the compute node.</param>
            <param name='fileMode'>The file permission mode attribute in octal format.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.BlobSource">
            <summary>
            Gets the blob source of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.FileMode">
            <summary>
            Gets the file permission mode attribute in octal format.
            </summary>
            <remarks>
            <para>This property is applicable only if the resource file is downloaded to Linux node. This property will be 
            ignored if it is specified for a <see cref="T:Microsoft.Azure.Batch.ResourceFile"/> which will be downloaded to a Windows node. If this 
            property is not specified for a Linux node, then the default value is 0770.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceFile.FilePath">
            <summary>
            Gets the location to download the file on the compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#ResourceFile}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ResourceFile.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.ResourceFile})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ResourceStatistics">
            <summary>
            The resource statistics data for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageCpuPercentage">
            <summary>
            Gets the average CPU usage across all compute nodes in the pool (percentage per compute node).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageDiskGiB">
            <summary>
            Gets the average used disk space in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.AverageMemoryGiB">
            <summary>
            Gets the average memory usage in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskReadGiB">
            <summary>
            Gets the total amount of data in gibibytes of disk reads across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskReadIOps">
            <summary>
            Gets the total number of disk read operations across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskWriteGiB">
            <summary>
            Gets the total amount of data in gibibytes of disk writes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.DiskWriteIOps">
            <summary>
            Gets the total number of disk write operations across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.ResourceStatistics.StartTime"/> and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.NetworkReadGiB">
            <summary>
            Gets the total amount of data in gibibytes of network reads across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.NetworkWriteGiB">
            <summary>
            Gets the total amount of data in gibibytes of network writes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.PeakDiskGiB">
            <summary>
            Gets the peak used disk space in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.PeakMemoryGiB">
            <summary>
            Gets the peak memory usage in gibibytes across all compute nodes in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.ResourceStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.Schedule">
            <summary>
            A schedule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Schedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.Schedule"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.DoNotRunAfter">
            <summary>
            Gets or sets the wall clock time after which no job will be scheduled under this job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.DoNotRunUntil">
            <summary>
            Gets or sets the earliest wall clock time at which to schedule the first job under this job schedule
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.RecurrenceInterval">
            <summary>
            Gets or sets the time interval between the start times of two successive jobs under the job schedule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.Schedule.StartWindow">
            <summary>
            Gets or sets the window of time within which a job must be started from the time the job schedule is ready to 
            be scheduled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.Schedule.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#Schedule}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTask">
            <summary>
            A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted 
            or reimaged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.StartTask"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.CommandLine">
            <summary>
            Gets or sets the command line of the task which is run when a compute node joins a pool in the Azure Batch service, 
            or when the compute node is rebooted or reimaged. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.EnvironmentSettings">
            <summary>
            Gets or sets a set of environment settings for the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.MaxTaskRetryCount">
            <summary>
            Gets or sets the max number of retries for a job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.ResourceFiles">
            <summary>
            Gets or sets a set of Windows Azure blobs to run the start task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.RunElevated">
            <summary>
            Gets or sets the value that indicates if the task should be run as admin.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTask.WaitForSuccess">
            <summary>
            Gets or sets a value indicating whether the Batch Service should wait for start task completion before scheduling 
            any tasks on the compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.StartTask.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#StartTask}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.StartTaskInformation">
            <summary>
            Specifies the detailed runtime information of the start task, including current state, error details, exit code, 
            start time, end time, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.ExitCode">
            <summary>
            Gets the exit code of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which execution of the start task was retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.RetryCount">
            <summary>
            Gets the number of times the start task has been retried by the Batch system.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.SchedulingError">
            <summary>
            Gets the error encountered by the service when scheduling the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.StartTime">
            <summary>
            Gets the time at which the task started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.StartTaskInformation.State">
            <summary>
            Gets the current running state of the start task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.SubtaskInformation">
            <summary>
            Information about an Azure Batch subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.ComputeNodeInformation">
            <summary>
            Gets the information about the compute node on which the subtask ran.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.EndTime">
            <summary>
            Gets the time at which the subtask completed. This property is set only if the subtask is in the Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.ExitCode">
            <summary>
            Gets the exit code of the subtask. This property is set only if the subtask is in Completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.Id">
            <summary>
            Gets the id of the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.PreviousState">
            <summary>
            Gets the previous state of the subtask. This property is not set if the subtask is in its initial active state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.PreviousStateTransitionTime">
            <summary>
            Gets the time at which the subtask entered its previous state. This property is not set if the subtask is in 
            its initial active state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.SchedulingError">
            <summary>
            Gets the details of any error encountered scheduling the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.StartTime">
            <summary>
            Gets the time at which the subtask started running. If the subtask has been restarted or retried, this is the 
            most recent time at which the subtask started running.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.State">
            <summary>
            Gets the current state of the subtask.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.SubtaskInformation.StateTransitionTime">
            <summary>
            Gets the time at which the subtask entered its current state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskConstraints">
            <summary>
            Defines the constraints on a particular Azure Batch task.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskConstraints.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskConstraints"/> class.
            </summary>
            <param name='maxWallClockTime'>The maximum duration of time for which a task is allowed to run from the time it is created.</param>
            <param name='retentionTime'>The duration of time for which files in the task's working directory are retained, from the time it completes 
            execution. After this duration, the task's working directory is reclaimed.</param>
            <param name='maxTaskRetryCount'>The max number of retries for the task.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.MaxTaskRetryCount">
            <summary>
            Gets or sets the max number of retries for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.MaxWallClockTime">
            <summary>
            Gets or sets the maximum duration of time for which a task is allowed to run from the time it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskConstraints.RetentionTime">
            <summary>
            Gets or sets the duration of time for which files in the task's working directory are retained, from the time 
            it completes execution. After this duration, the task's working directory is reclaimed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskConstraints.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskConstraints}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskExecutionInformation">
            <summary>
            Task execution information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.EndTime">
            <summary>
            Gets the time at which the task completed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.ExitCode">
            <summary>
            Gets the exit code of the task. This parameter is only returned if the task is in completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRequeueTime">
            <summary>
            Gets the most recent time at which this task's execution was re-queued by the Batch service per user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.LastRetryTime">
            <summary>
            Gets the most recent time at which this task's execution was retried by the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.RequeueCount">
            <summary>
            Gets the number of times this task's execution was re-queued by the Batch service per user request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.RetryCount">
            <summary>
            Gets the number of times the task has been retried by the Batch service. Every time the task exits with a non-zero 
            code, it is deemed as an application failure. The Batch service will retry the task up to the specified MaxTaskRetryCount.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.SchedulingError">
            <summary>
            Gets the error encountered by the service in starting the task. This parameter is only returned if there was 
            an error in scheduling the task and it is now in completed state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskExecutionInformation.StartTime">
            <summary>
            Gets the time at which the task started running.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskInformation">
            <summary>
            The compute node's task info class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.ExecutionInformation">
            <summary>
            Gets the execution information for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.JobId">
            <summary>
            Gets the job id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.SubtaskId">
            <summary>
            Gets the subtask id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskId">
            <summary>
            Gets the task id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskState">
            <summary>
            Gets the task state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskInformation.TaskUrl">
            <summary>
            Gets the task URL.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollection(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollectionAndFreeze(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, in a frozen state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskInformation.ConvertFromProtocolCollectionReadOnly(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.Protocol.Models.TaskInformation})">
            <summary>
            Converts a collection of protocol layer objects to object layer collection objects, with each object marked readonly
            and returned as a readonly collection.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskSchedulingError">
            <summary>
            Information about an error when scheduling a task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Category">
            <summary>
            Gets the category of the task scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Code">
            <summary>
            Gets a code for the task scheduling error. See <see cref="T:Microsoft.Azure.Batch.Common.TaskSchedulingErrorCodes"/> for possible values.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Details">
            <summary>
            Gets a list of additional error details related to the scheduling error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingError.Message">
            <summary>
            Gets a message describing the task scheduling error, intended to be suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskSchedulingPolicy">
            <summary>
            A scheduling policy for a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskSchedulingPolicy.#ctor(Microsoft.Azure.Batch.Common.ComputeNodeFillType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.TaskSchedulingPolicy"/> class.
            </summary>
            <param name='computeNodeFillType'>The fill type of scheduling policy.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskSchedulingPolicy.ComputeNodeFillType">
            <summary>
            Gets the fill type of scheduling policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.TaskSchedulingPolicy.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#TaskSchedulingPolicy}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.TaskStatistics">
            <summary>
            Resource usage statistics for the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.KernelCpuTime">
            <summary>
            Gets the total kernel mode CPU time (per core) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.LastUpdateTime">
            <summary>
            Gets the end time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.ReadIOGiB">
            <summary>
            Gets the total gibibytes of I/O (network + disk) disk read by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.ReadIOps">
            <summary>
            Gets the total number of disk I/O (network + disk) read operations made by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.StartTime">
            <summary>
            Gets the start time of the time range for the statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.Url">
            <summary>
            Gets the URL of the task statistics.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.UserCpuTime">
            <summary>
            Gets the total user mode CPU time (per core) consumed by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WaitTime">
            <summary>
            Gets the wait time for a task is the time between the task creation and the start of the most recent task execution 
            (if the task is retried due to failures).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WallClockTime">
            <summary>
            Gets the wall clock time of the task execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WriteIOGiB">
            <summary>
            Gets the total gibibytes of I/O (network + disk) disk written by the task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.TaskStatistics.WriteIOps">
            <summary>
            Gets the total number of disk I/O (network + disk) write operations made by the task.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.UsageStatistics">
            <summary>
            Statistics related to pool usage data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.DedicatedCoreTime">
            <summary>
            Gets the aggregated wall-clock time of the dedicated compute nodes being part of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.LastUpdateTime">
            <summary>
            Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
            cref="P:Microsoft.Azure.Batch.UsageStatistics.StartTime"/> and LastUpdateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.UsageStatistics.StartTime">
            <summary>
            Gets the start time of the time range covered by the statistics.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.VirtualMachineConfiguration">
            <summary>
            The configuration of virtual machines for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Batch.ImageReference,System.String,Microsoft.Azure.Batch.WindowsConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> class.
            </summary>
            <param name='imageReference'>Information about the platform or marketplace image to use.</param>
            <param name='nodeAgentSkuId'>The SKU of Batch Node Agent that needs to be provisioned on the compute node.</param>
            <param name='windowsConfiguration'>Windows operating system settings on the virtual machine. This property must not be specified if the ImageReference 
            property referencs a Linux OS image.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.ImageReference">
            <summary>
            Gets or sets information about the platform or marketplace image to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.NodeAgentSkuId">
            <summary>
            Gets or sets the SKU of Batch Node Agent that needs to be provisioned on the compute node.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.VirtualMachineConfiguration.WindowsConfiguration">
            <summary>
            Gets or sets windows operating system settings on the virtual machine. This property must not be specified if 
            the ImageReference property references a Linux OS image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.VirtualMachineConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#VirtualMachineConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.WindowsConfiguration">
            <summary>
            Windows operating system settings on the virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.WindowsConfiguration.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Batch.WindowsConfiguration"/> class.
            </summary>
            <param name='enableAutomaticUpdates'>Whether the virtual machine is enabled for automatic updates. If unspecified, the default value is true.</param>
        </member>
        <member name="P:Microsoft.Azure.Batch.WindowsConfiguration.EnableAutomaticUpdates">
            <summary>
            Gets whether the virtual machine is enabled for automatic updates. If unspecified, the default value is true.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.WindowsConfiguration.Microsoft#Azure#Batch#ITransportObjectProvider{Microsoft#Azure#Batch#Protocol#Models#WindowsConfiguration}#GetTransportObject">
            <summary>
            Return a protocol object of the requested type.
            </summary>
            <returns>The protocol object of the requested type.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.AuthorizationLevel">
            <summary>
            Authorization levels available for enforcement of restrictions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientDisposableStateBox">
            <summary>
            The dispose pattern sets all references to null.
            Put all references into this box.
            
            ONLY ACCESS VIA GetStateThrowIfNotOpen() method!
            
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClient">
            <summary>
            A client for an Azure Batch account, used to access the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.#ctor(Microsoft.Azure.Batch.IProtocolLayer)">
            <summary>
            Holds the protocol layer to be used for this client instance.
            This enables "mock"ing the protocol layer for testing.
            </summary>   
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.ApplicationOperations">
            <summary>
            Gets an <see cref="P:Microsoft.Azure.Batch.BatchClient.ApplicationOperations"/> for performing application-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.CertificateOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.CertificateOperations"/> for performing certificate-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.JobOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.JobOperations"/> for performing job-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.JobScheduleOperations"/> for performing job schedule-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.PoolOperations">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.PoolOperations"/> for performing pool-related operations on the associated account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.Utilities">
            <summary>
            Gets a <see cref="P:Microsoft.Azure.Batch.BatchClient.Utilities"/> object containing utility methods for orchestrating multiple Batch operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified credentials.
            </summary>
            <param name="credentials">The Batch account credentials.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.OpenAsync(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.
            </summary>
            <param name="restClient">The instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Auth.BatchSharedKeyCredentials)">
            <summary>
            Blocking call that creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified credentials.
            </summary>
            <param name="credentials">The Batch account credentials.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Open(Microsoft.Azure.Batch.Protocol.BatchServiceClient)">
            <summary>
            Blocking call that creates an instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> associated with the specified <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.
            </summary>
            <param name="restClient">The instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/> to use for all calls made to the Batch Service. It will not be disposed when BatchClient is disposed.</param>
            <returns>An instance of <see cref="T:Microsoft.Azure.Batch.Protocol.BatchServiceClient"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.CloseAsync">
            <summary>
            Starts an asynchronous operation to close the current instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.  
            Closed instances of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. 
            These restrictions also apply immediately to any objects that can trace instantation back to this <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            This method is threadsafe and can be called any number of times.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Close">
            <summary>
            Closes the current instance of <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.  
            Closed instances of <see cref="T:Microsoft.Azure.Batch.BatchClient"/> are unable to make calls to the Batch Service and the behavior and values of any other methods or properties are undefined. 
            These restrictions also apply immediately to any objects that can trace instantation back to this <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            This method is threadsafe and can be called any number of times.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Dispose">
            <summary>
            Calls <see cref="M:Microsoft.Azure.Batch.BatchClient.Close"/> and releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources used by the <see cref="T:Microsoft.Azure.Batch.BatchClient"/>, and optionally disposes of managed resources.
            </summary>
            <param name="disposing">Indicates whether the object is being disposed or finalized.  If true, the object is
            being disposed and can dispose managed resource.  If false, the object is being finalized and should only
            release unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Batch.BatchClient.GetStateThrowIfNotOpen">
            <summary>
            Enforces that current instance is not "close".
            All access to disposable state should go through this routine.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchClient.ProtocolLayer">
            <summary>
            Holds the protocol layer to be used for this client instance.
            This enables "mock"ing the protocol layer for testing.
            
            Since 100% of all calls indirect through this property, it
            provides a single place to immediately stop all (new) call attempts
            when the underlying BatchClient is closed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchClientException">
            <summary>
            An exception thrown by the Batch client.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.AddTaskCollectionTerminatedException">
            <summary>
            The exception that is thrown when the AddTaskCollection operation is terminated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.ParallelOperationsException">
            <summary>
            An exception raised when one or more operations in a parallel set of operations fails.  
            The <see cref="P:System.AggregateException.InnerExceptions"/> collection contains the exceptions for each of the failed operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.ParallelOperationsException.ToString">
            <summary>
            Creates and returns a string representation of the current <see cref="T:Microsoft.Azure.Batch.ParallelOperationsException"/>.
            </summary>
            <returns>A string representation of the current exception.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.Constants">
            <summary>
            Contains constants for interacting with the Azure Batch service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.DefaultConveniencePrefix">
            <summary>
            The prefix used when creating automatically named containers or blobs as part of file staging.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.StandardOutFileName">
            <summary>
            The name of the standard output file generated by a task or start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.StandardErrorFileName">
            <summary>
            The name of the standard error file generated by a task or start task on a compute node.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.MaxTasksInSingleAddTaskCollectionRequest">
            <summary>
            The maximum number of tasks that the client will include in a single AddTaskCollection request,
            when adding multiple tasks to a job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.Constants.DefaultSingleRestRequestClientTimeout">
            <summary>
            The default amount of time to wait for a response from the Batch service before automatically cancelling the 
            request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.InternalConstants.UserAgentProductName">
            <summary>
            The value to use for UserAgent header.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.BindingState">
            <summary>
            The possible realationships between a client-side object and a server-side object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.BindingState.Bound">
            <summary>
            There is a consistency model between the current object and a server-side object.
            The client-side object is said to be "bound" to the server-side object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Batch.BindingState.Unbound">
            <summary>
            There is no server-side object.
            The client-side object is said to be "unbound".
            This is typically used to denote an object state used to "create" a server-side object
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.IFileStagingArtifact">
            <summary>
            Contains information about a file staging process.  File staging is typically performed for
            a <see cref="T:Microsoft.Azure.Batch.CloudTask"/> (see <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>).
            </summary>
            <remarks>
            <para>
            IFileStagingArtifact allows an application to customize and to obtain information about the process of uploading
            files to the cloud, for example as part of a task-related operation such as
            <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>
            or <see cref="M:Microsoft.Azure.Batch.CloudJob.AddTaskAsync(Microsoft.Azure.Batch.CloudTask,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">CloudJob.AddTaskAsync</see>.  Applications may use this
            information to, for example, find out about containers that were created in Azure Storage as
            part of the upload process.
            </para>
            <para>
            When <see cref="M:Microsoft.Azure.Batch.JobOperations.AddTaskAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.CloudTask},Microsoft.Azure.Batch.BatchClientParallelOptions,System.Collections.Concurrent.ConcurrentBag{System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Azure.Batch.IFileStagingArtifact}},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">JobOperations.AddTaskAsync</see>
            is called, the Batch client sends the tasks to the Batch service in collections.  As each collection is
            processed, the Batch client performs file staging for that collection: it examines the tasks to see if
            any of them specify any <see cref="P:Microsoft.Azure.Batch.CloudTask.FilesToStage"/>, and if so creates a dictionary entry for
            each type of <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/> in the FilesToStage collection. The key of
            the dictionary entry is the <see cref="T:System.Type"/> of the IFileStagingProvider and the value is an instance
            of the corresponding implementation of IFileStagingArtifact.  For example, if FilesToStage includes one or more
            <see cref="T:Microsoft.Azure.Batch.FileStaging.FileToStage"/> objects, then the dictionary contains an entry whose key is
            typeof(FileToStage) and whose value is an instance of <see cref="T:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact"/>.
            </para>
            <para>
            When the Add Task operation completes, or during the Add Task operation if the application is multi-threaded,
            you can examine the dictionary and convert each IFileStagingArtifact to the appropriate type to retrieve
            the type-specific information.  For example, if your Add Task operation specified one or more FileToStage objects,
            you can locate the dictionary entry keyed by typeof(FileToStage), cast the value to SequentialFileStagingArtifact,
            and examine the <see cref="P:Microsoft.Azure.Batch.FileStaging.SequentialFileStagingArtifact.BlobContainerCreated"/> property to
            determine if the upload process created a blob container in Azure Storage and if so the name of that container.
            This example could be useful for cleaning up automatically created containers.
            </para>
            <para>
            (Single-task Add Task operations work similarly, except that in a multi-task Add Task operation, there is
            a dictionary for each collection of tasks, and the dictionaries are collected in a <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/>,
            whereas in a single-task Add Task operation there is only a single dictionary.)
            </para>
            <para>
            In a single-task Add Task operation, you can also use the dictionary to customize the file staging process, by pre-populating it with appropriate
            entries.  For example, suppose you wish to control the <see cref="P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment"/> for a group of FileToStage
            objects.  Then you could initialize the dictionary with <c>{ typeof(FileToStage), new SequentialFileStagingArtifact { NamingFragment = "myname" } }</c>
            before passing it to AddTaskAsync.  The FileToStage implementation of IFileStagingProvider would then use your
            SequentialFileStagingArtifact instead of creating its own.  (This feature is not available in multi-task
            Add Task operations.)
            </para>
            <para>
            You may also encounter IFileStagingArtifact if you are developing a custom <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/>.
            In this case you will typically create a custom implementation of IFileStagingArtifact to report
            implementation-specific information about your file staging process.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Batch.IFileStagingArtifact.NamingFragment">
            <summary>
            Gets or sets a name fragment that can be used when constructing default names.
            </summary>
            <remarks>Although a caller may set this property, the <see cref="T:Microsoft.Azure.Batch.FileStaging.IFileStagingProvider"/> implementation
            is not required to respect it.</remarks>
        </member>
        <member name="T:Microsoft.Azure.Batch.IRefreshable">
            <summary>
            Provides a mechanism for refreshing a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Batch.IRefreshable.RefreshAsync(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Begins asynchronous call to refresh the current object.
            </summary>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service.  If a detail level which omits the "Name" property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.IRefreshable.Refresh(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Blocking call to force a refresh of the current object.
            </summary>
            <param name="detailLevel">Controls the detail level of the data returned by a call to the Azure Batch Service. If a detail level which omits the "Name" property is specified, refresh will fail.</param>
            <param name="additionalBehaviors">A collection of BatchClientBehavior instances that are applied after the CustomBehaviors on the current object.</param>
        </member>
        <member name="T:Microsoft.Azure.Batch.PoolOperations">
            <summary>
            Performs pool-related operations on an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.PoolOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListPools(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudPool">pools</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate pools asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the pools are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; pools are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetPoolAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="poolId">The id of the pool to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> containing information about the specified Azure Batch pool.</returns>
            <remarks>The get pool operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetPool(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudPool"/>.
            </summary>
            <param name="poolId">The id of the pool to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> containing information about the specified Azure Batch pool.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetPoolAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeletePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name="poolId">The id of the pool to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeletePool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name="poolId">The id of the pool to delete.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the pool be deleted.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Deleting"/> state.
            The Batch service will requeue any running tasks and perform the actual pool deletion without any further client action.</para>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeletePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any object in the Batch service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool(System.String,System.String,Microsoft.Azure.Batch.CloudServiceConfiguration,System.Nullable{System.Int32})">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any object in the Batch service.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="virtualMachineSize">The size of virtual machines in the pool.  See https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/ for sizes.</param>
            <param name="cloudServiceConfiguration">The <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration"/> for the pool.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool. If omitted, you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</returns>
            <remarks>
            <para>For information about Azure Guest OS families, see https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/ </para>
            <para>For information about available sizes of virtual machines, see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/.
            Batch supports all Azure cloud service VM sizes except ExtraSmall.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreatePool(System.String,System.String,Microsoft.Azure.Batch.VirtualMachineConfiguration,System.Nullable{System.Int32})">
            <summary>
            Creates an instance of CloudPool that is unbound and does not have a consistency relationship to any object in the Batch service.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="virtualMachineSize">The size of virtual machines in the pool.  See https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/ for sizes.</param>
            <param name="virtualMachineConfiguration">The <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> for the pool.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool. If omitted, you must set the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudPool"/> representing a new pool that has not been added to the Batch service.
            To add the pool to the Batch account, call <see cref="M:Microsoft.Azure.Batch.CloudPool.CommitAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ResizePoolAsync(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Resizes the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.
            </para>
            <para>The resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ResizePool(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Resizes the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetDedicated">The desired number of compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. If the pool has not reached the target size after this time, the resize is stopped. The default is 15 minutes.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool, if the pool size is decreasing. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The resize operation requests that the pool be resized.  The request puts the pool in the <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/> allocation state.
            The Batch service will perform the actual resize without any further client action, and set the allocation state to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/> once complete.</para>
            <para>
            You can only resize a pool when its <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            You cannot resize pools which are configured for automatic scaling (that is, the <see cref="P:Microsoft.Azure.Batch.CloudPool.AutoScaleEnabled"/> property of the pool is true).
            If you decrease the pool size, the Batch service chooses which nodes to remove.  To remove specific nodes, call <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ResizePoolAsync(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.StopResizePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Stops a pool resize operation.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>The stop resize operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.StopResizePool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Stops a pool resize operation.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>
            This operation stops an ongoing resize operation on the pool.  The pool size will stabilize at the number of nodes it is at
            when the stop operation is done.  During the stop operation, the pool <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> changes first
            to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Stopping"/> and then to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>.
            </para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.StopResizePoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListComputeNodes(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate compute nodes asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the nodes are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; nodes are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>The get node operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNode(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to get from the pool.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> containing information about the specified compute node.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetComputeNodeAsync(System.String,System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableComputeNodeSchedulingAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableComputeNodeScheduling(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableComputeNodeScheduling(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableComputeNodeSchedulingAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>This operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableComputeNodeScheduling(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables task scheduling on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="disableComputeNodeSchedulingOption">Specifies what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DisableComputeNodeSchedulingAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.DisableComputeNodeSchedulingOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>The enable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScale(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula for the desired number of compute nodes in the pool.</param>
            <param name="autoscaleEvaluationInterval">The time interval at which to automatically adjust the pool size according to the AutoScale formula. The default value is 15 minutes. The minimum allowed value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The formula is checked for validity before it is applied to the pool. If the formula is not valid, an exception occurs.</para>
            <para>You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable autoscale operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScale(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables automatic scaling on the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DisableAutoScaleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the specified pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on the specified pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScaleAsync(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>The evaluate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScale(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the result of evaluating an automatic scaling formula on the specified pool.  This 
            is primarily for validating an autoscale formula, as it simply returns the result
            without applying the formula to the pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="autoscaleFormula">The formula to be evaluated on the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The result of evaluating the <paramref name="autoscaleFormula"/> on the specified pool.</returns>
            <remarks>
            <para>The formula is validated and its results calculated, but is not applied to the pool.  To apply the formula to the pool, use <see cref="M:Microsoft.Azure.Batch.PoolOperations.EnableAutoScale(System.String,System.String,System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            <para>This method does not change any state of the pool, and does not affect the <see cref="P:Microsoft.Azure.Batch.CloudPool.LastModified"/> or <see cref="P:Microsoft.Azure.Batch.CloudPool.ETag"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.EvaluateAutoScaleAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeId">The id of the compute node to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodeIds">The ids of the compute nodes to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute node from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNode">The <see cref="T:Microsoft.Azure.Batch.ComputeNode"/> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If you need to remove multiple compute nodes from a pool, it is more efficient to use the <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> overload.</para>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,Microsoft.Azure.Batch.ComputeNode,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>The remove operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPool(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Removes the specified compute nodes from the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="computeNodes">The <see cref="T:Microsoft.Azure.Batch.ComputeNode">compute nodes</see> to remove from the pool.</param>
            <param name="deallocationOption">Specifies when nodes may be removed from the pool. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption.Requeue"/>.</param>
            <param name="resizeTimeout">Specifies the timeout for removal of compute nodes from the pool. The default value is 15 minutes. The minimum value is 5 minutes.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can only remove nodes from a pool when the <see cref="P:Microsoft.Azure.Batch.CloudPool.AllocationState"/> of the pool is <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Steady"/>. If the pool is already resizing, an exception occurs.</para>
            <para>When you remove nodes from a pool, the pool's AllocationState changes from Steady to <see cref="F:Microsoft.Azure.Batch.Common.AllocationState.Resizing"/>.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RemoveFromPoolAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ComputeNode},System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeDeallocationOption},System.Nullable{System.TimeSpan},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.CreateComputeNodeUser(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> representing a new compute node user account that
            does not yet exist in the Batch service.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node where the user account will be created.</param>
            <returns>An unbound <see cref="T:Microsoft.Azure.Batch.ComputeNodeUser"/> representing a new user account that has not been added to the compute node.</returns>
            <remarks>To add the new user, call <see cref="M:Microsoft.Azure.Batch.ComputeNodeUser.CommitAsync(Microsoft.Azure.Batch.ComputeNodeUserCommitSemantics,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUserAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified user account from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node from which you want to delete the user account.</param>
            <param name="userName">The name of the user account to be deleted.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can delete a user account from a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUser(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified user account from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node from which you want to delete the user account.</param>
            <param name="userName">The name of the user account to be deleted.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can delete a user account from a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeleteComputeNodeUserAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets a Remote Desktop Protocol (RDP) file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpStream">The <see cref="T:System.IO.Stream"/> into which the RDP file contents will be written.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>This method does not close the <paramref name="rdpStream"/> stream, and it does not reset the position after writing.
            It is the caller's responsibility to close the stream, or to reset the position if required.</para>
            <para>The get RDP file operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFile(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol (RDP) file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpStream">The <see cref="T:System.IO.Stream"/> into which the RDP file contents will be written.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This method does not close the <paramref name="rdpStream"/> stream, and it does not reset the position after writing.
            It is the caller's responsibility to close the stream, or to reset the position if required.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets a Remote Desktop Protocol file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpFileNameToCreate">The file path at which to create the RDP file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>If the file specified by <paramref name="rdpFileNameToCreate"/> already exists, it is overwritten.</para>
            <para>The get RDP file operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettingsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets a Remote Desktop Protocol file for the specified node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="rdpFileNameToCreate">The file path at which to create the RDP file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>If the file specified by <paramref name="rdpFileNameToCreate"/> already exists, it is overwritten.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRDPFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/>, then Batch service returns 409 (Conflict). 
            For pools with <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property, the new method <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/> must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettingsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The get remote login settings operation runs asynchronously.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettings(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the settings required for remote login to a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node for which to get a Remote Desktop file.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetRemoteLoginSettingsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>This method can be invoked only if the pool is created with a <see cref="T:Microsoft.Azure.Batch.VirtualMachineConfiguration"/> property. 
            If this method is invoked on pools created with <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" />, then Batch service returns 409 (Conflict). 
            For pools with a <see cref="T:Microsoft.Azure.Batch.CloudServiceConfiguration" /> property, one of the GetRDPFileAsync/GetRDPFile methods must be used.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.RebootAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Reboots the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reboot.</param>
            <param name="rebootOption">Specifies when to reboot the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can reboot a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The reboot operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.Reboot(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reboots the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reboot.</param>
            <param name="rebootOption">Specifies when to reboot the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeRebootOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can reboot a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.RebootAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeRebootOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ReimageAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reimage.</param>
            <param name="reimageOption">Specifies when to reimage the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>You can reimage a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>The reimage operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.Reimage(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Reinstalls the operating system on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node to reimage.</param>
            <param name="reimageOption">Specifies when to reimage the node and what to do with currently running tasks. The default is <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeReimageOption.Requeue"/>.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>You can reimage a compute node only when it is in the <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Idle"/> or <see cref="F:Microsoft.Azure.Batch.Common.ComputeNodeState.Running"/> state.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ReimageAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Batch.Common.ComputeNodeReimageOption},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersionAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Changes the operating system version of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>The change version operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersion(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Changes the operating system version of the specified pool.
            </summary>
            <param name="poolId">The id of the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be installed on the virtual machines in the pool.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>During the change OS version operation, the Batch service traverses the nodes of the pool, changing the OS version of compute nodes.  When a compute node is chosen, any tasks running on that node are removed from the node and requeued to be rerun later (or on a different compute node).  The node will be unavailable until the version change is complete.</para>
            <para>The operation will result in temporarily reduced pool capacity as nodes are taken out of service to have their OS version changed. Although the Batch service tries to avoid changing all compute nodes at the same time, it does not guarantee to do this (particularly on small pools); therefore, the operation may result in the pool being temporarily unavailable to run tasks.</para>
            <para>When you request an OS version change, the pool state changes to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Upgrading"/>.  When all compute nodes have finished changing version, the pool state returns to <see cref="F:Microsoft.Azure.Batch.Common.PoolState.Active"/>.</para>
            <para>While the version change is in progress, the pool's <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.CurrentOSVersion"/> reflects the OS version that nodes are changing from, and <see cref="P:Microsoft.Azure.Batch.CloudServiceConfiguration.TargetOSVersion"/> reflects the OS version that nodes are changing to. Once the change is complete, CurrentOSVersion is updated to reflect the OS version now running on all nodes.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.ChangeOSVersionAsync(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets information about a file on a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> containing information about the file, and which can be used to download the file (see <see cref="M:Microsoft.Azure.Batch.NodeFile.CopyToStreamAsync(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>).</returns>
            <remarks>The get file operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets information about a file on a compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to retrieve.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.NodeFile"/> containing information about the file, and which can be used to download the file (see <see cref="M:Microsoft.Azure.Batch.NodeFile.CopyToStream(System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>).</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetNodeFileAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListNodeFiles(System.String,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates files on the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="recursive">If true, recursively enumerates all files on the compute node. If false, enumerates only the files in the compute node root directory.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate files asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the file data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; file data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified file from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>The delete operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFile(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified file from the specified compute node.
            </summary>
            <param name="poolId">The id of the pool that contains the compute node.</param>
            <param name="computeNodeId">The id of the compute node.</param>
            <param name="fileName">The name of the file to delete.</param>
            <param name="recursive">
            If the file-path parameter represents a directory instead of a file, you can set the optional 
            recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false 
            then the directory must be empty or deletion will fail.
            </param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <remarks>This is a blocking operation.  For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.DeleteNodeFileAsync(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetAllPoolsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets lifetime summary statistics for all of the pools in the current account.  
            Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>The aggregated pool statistics.</returns>
            <remarks>The get statistics operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.GetAllPoolsLifetimeStatistics(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets lifetime summary statistics for all of the pools in the current account.  
            Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics.
            </summary>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/>.</param>
            <returns>The aggregated pool statistics.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.PoolOperations.GetAllPoolsLifetimeStatisticsAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListPoolUsageMetrics(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates pool usage metrics.
            </summary>
            <param name="startTime">The start time of the aggregation interval covered by this entry.</param>
            <param name="endTime">The end time of the aggregation interval for this entry.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate metrics asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the metrics data is retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; metrics data is retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.PoolOperations.ListNodeAgentSkus(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the node agent Sku values supported by Batch Service. 
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.PoolOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate node agent sku values asynchronously or synchronously.</returns>
        </member>
        <member name="T:Microsoft.Azure.Batch.BatchErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.AddTaskCollectionTerminated">
            <summary>
              Looks up a localized string similar to Addition of task {0} failed with unexpected status code {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.AddTaskResultActionUnretryableFailure">
            <summary>
              Looks up a localized string similar to Task {0} reported AddTaskResultAction.UnretryableFailure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.BatchClientIsClosed">
            <summary>
              Looks up a localized string similar to An attempt was made to use an instance of BatchClient that is in the closed state.  No further calls to the Batch Service can be made with that instance.  This can happen if the instance was explicitly closed or if the BatchClient.Dispose() method was called..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.BatchRequestCannotBeModified">
            <summary>
              Looks up a localized string similar to This BatchRequest has started executing and can no longer be modified..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.CanOnlyBeRunOnceFailure">
            <summary>
              Looks up a localized string similar to {0} can only be run once..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.CollectionMustNotContainNull">
            <summary>
              Looks up a localized string similar to Items contained in collection must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralBehaviorMissing">
            <summary>
              Looks up a localized string similar to Must have at least one behavior of type {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralObjectInInvalidState">
            <summary>
              Looks up a localized string similar to This object is in an invalid state.  Write access is not allowed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.GeneralSimultaneousCommitsForbidden">
            <summary>
              Looks up a localized string similar to Simultaneous Commit operators are forbidden..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.IncorrectTypeReturned">
            <summary>
              Looks up a localized string similar to Incorrect type returned..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.MonitorInstancesMustHaveSameServerSideParent">
            <summary>
              Looks up a localized string similar to Monitor requires all instances to have the same server-side parent..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.MultipleParallelRequestsHitUnexpectedErrors">
            <summary>
              Looks up a localized string similar to One or more requests to the Azure Batch service failed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.OperationForbiddenOnBoundObjects">
            <summary>
              Looks up a localized string similar to This operation is forbidden on bound objects..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.OperationForbiddenOnUnboundObjects">
            <summary>
              Looks up a localized string similar to This operation is forbidden on unbound objects..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesReadAccessViolation">
            <summary>
              Looks up a localized string similar to The property {0} cannot be read while the object is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.PropertiesWriteAccessViolation">
            <summary>
              Looks up a localized string similar to The property {0} cannot be modified while the object is in the {1} state..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskIdRangeCannotHaveEndLessThanStart">
            <summary>
              Looks up a localized string similar to End task id must be greater than or equal to the start task id..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskIdRangeCannotHaveNegativeEnd">
            <summary>
              Looks up a localized string similar to End task id must be greater or equal to 0..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TaskIdRangeCannotHaveNegativeStart">
            <summary>
              Looks up a localized string similar to First task id must be greater or equal to 0..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TypeDoesNotSupportExpandClause">
            <summary>
              Looks up a localized string similar to Type {0} does not support an expand clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TypeDoesNotSupportFilterClause">
            <summary>
              Looks up a localized string similar to Type {0} does not support a filter clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.TypeDoesNotSupportSelectClause">
            <summary>
              Looks up a localized string similar to Type {0} does not support a select clause..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Batch.BatchErrorMessages.UnknownAddTaskResultAction">
            <summary>
              Looks up a localized string similar to Unknown AddTaskResultAction value: {0}.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Batch.JobScheduleOperations">
            <summary>
            Performs operations on Azure Batch job schedules.
            </summary>
            <seealso cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>
        </member>
        <member name="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors">
            <summary>
            Gets or sets a list of behaviors that modify or customize requests to the Batch service
            made via this <see cref="T:Microsoft.Azure.Batch.JobScheduleOperations"/>.
            </summary>
            <remarks>
            <para>These behaviors are inherited by child objects.</para>
            <para>Modifications are applied in the order of the collection. The last write wins.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobSchedules(Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule">job schedules</see> in the Batch account.
            </summary>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate job schedules asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the job schedules are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; schedules are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> containing information about the specified Azure Batch job schedule.</returns>
            <remarks>The get job schedule operation runs asynchronously.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobSchedule(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Gets the specified <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule to get.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> containing information about the specified Azure Batch job schedule.</returns>
            <remarks>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.GetJobScheduleAsync(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule">
            <summary>
            Creates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> representing a new job schedule that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.CreateJobSchedule(System.String,Microsoft.Azure.Batch.Schedule,Microsoft.Azure.Batch.JobSpecification)">
            <summary>
            Creates an instance of CloudJobSchedule that is unbound and does not have a consistency relationship to any object in the Batch Service.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="schedule">The schedule that determines when jobs will be created.</param>
            <param name="jobSpecification">a <see cref="T:Microsoft.Azure.Batch.JobSpecification" /> containing details of the jobs to be created according to the <paramref name="schedule"/>.</param>
            <returns>A <see cref="T:Microsoft.Azure.Batch.CloudJobSchedule"/> representing a new job schedule that has not been submitted to the Batch service.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Enables the specified job schedule, allowing jobs to be created according to its <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The enable operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enables the specified job schedule, allowing jobs to be created according to its <see cref="P:Microsoft.Azure.Batch.CloudJobSchedule.Schedule"/>.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Disables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The disable operation runs asynchronously.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Disables the specified job schedule.  Disabled schedules do not create new jobs, but may be re-enabled later.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.DisableJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            <para>To re-enable the schedule, call <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.EnableJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>The delete operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Deletes the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The delete operation requests that the job schedule be deleted.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Deleting"/> state.
            The Batch service will delete any existing jobs and tasks under the schedule, including any active job, and perform the actual job schedule deletion without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.DeleteJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)">
            <summary>
            Terminates the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for controlling the lifetime of the asynchronous operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>The terminate operation runs asynchronously.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobSchedule(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Terminates the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/>.</param>
            <remarks>
            <para>The terminate operation requests that the job schedule be terminated.  The request puts the schedule in the <see cref="F:Microsoft.Azure.Batch.Common.JobScheduleState.Terminating"/> state.
            The Batch service will wait for any active job to terminate, and perform the actual job schedule termination without any further client action.</para>
            <para>This is a blocking operation. For a non-blocking equivalent, see <see cref="M:Microsoft.Azure.Batch.JobScheduleOperations.TerminateJobScheduleAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior},System.Threading.CancellationToken)"/>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.JobScheduleOperations.ListJobs(System.String,Microsoft.Azure.Batch.DetailLevel,System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.BatchClientBehavior})">
            <summary>
            Enumerates the <see cref="T:Microsoft.Azure.Batch.CloudJob">jobs</see> created under the specified job schedule.
            </summary>
            <param name="jobScheduleId">The id of the job schedule.</param>
            <param name="detailLevel">A <see cref="T:Microsoft.Azure.Batch.DetailLevel"/> used for filtering the list and for controlling which properties are retrieved from the service.</param>
            <param name="additionalBehaviors">A collection of <see cref="T:Microsoft.Azure.Batch.BatchClientBehavior"/> instances that are applied to the Batch service request after the <see cref="P:Microsoft.Azure.Batch.JobScheduleOperations.CustomBehaviors"/> and <paramref name="detailLevel"/>.</param>
            <returns>An <see cref="T:Microsoft.Azure.Batch.IPagedEnumerable`1"/> that can be used to enumerate jobs asynchronously or synchronously.</returns>
            <remarks>This method returns immediately; the jobs are retrieved from the Batch service only when the collection is enumerated.
            Retrieval is non-atomic; jobs are retrieved in pages during enumeration of the collection.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CertificateVisibilityToList(System.Nullable{Microsoft.Azure.Batch.Common.CertificateVisibility})">
            <summary>
            Convert an enum of type CertificateVisibility to a List of Protocol.Models.CertificateVisibility.
            </summary>
            <param name='value'>
            The value to convert.
            </param>
            <returns>
            The enum value to convert into list format.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ParseCertificateVisibility(System.Collections.Generic.IList{System.Nullable{Microsoft.Azure.Batch.Protocol.Models.CertificateVisibility}})">
            <summary>
            Parse enum values for type CertificateVisibility.
            </summary>
            <param name='value'>
            The value to parse.
            </param>
            <returns>
            The enum value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ConvertToProtocolCollection``1(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ITransportObjectProvider{``0}})">
            <summary>
            Converts a collection of object model items into a corresponding collection of transport layer items.
            If the <paramref name="items"/> collection is null, null is returned.
            </summary>
            <returns>
            A collection of type <typeparam name="T"/> generated by calling 
            <see cref="M:Microsoft.Azure.Batch.ITransportObjectProvider`1.GetTransportObject"/> on each element of the input collection.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.ConvertToProtocolArray``1(System.Collections.Generic.IEnumerable{Microsoft.Azure.Batch.ITransportObjectProvider{``0}})">
            <summary>
            Converts a collection of object model items into a corresponding array of transport layer items.
            If the <paramref name="items"/> collection is null, null is returned.
            </summary>
            <returns>
            A collection of type <typeparam name="T"/> generated by calling 
            <see cref="M:Microsoft.Azure.Batch.ITransportObjectProvider`1.GetTransportObject"/> on each element of the input collection.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CollectionToNonThreadSafeCollection``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Applies the <paramref name="objectCreationFunc"/> to each item in <paramref name="items"/> and returns a non-threadsafe collection containing the results.
            </summary>
            <typeparam name="TIn">The type of the input collection.</typeparam>
            <typeparam name="TOut">The type of the output collection.</typeparam>
            <param name="items">The collection to convert.</param>
            <param name="objectCreationFunc">The function used to created each <typeparamref name="TOut"/> type object.</param>
            <returns>A non-threadsafe collection containing the results of the conversion, or null if <paramref name="items"/> was null.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.CollectionToThreadSafeCollectionIModifiable``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Applies the <paramref name="objectCreationFunc"/> to each item in <paramref name="items"/> and returns a threadsafe collection containing the results.
            </summary>
            <typeparam name="TIn">The type of the input collection.</typeparam>
            <typeparam name="TOut">The type of the output collection.</typeparam>
            <param name="items">The collection to convert.</param>
            <param name="objectCreationFunc">The function used to created each <typeparamref name="TOut"/> type object.</param>
            <returns>A threadsafe collection containing the results of the conversion, or null if <paramref name="items"/> was null.</returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.StreamToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads entire Stream into a string.  When null encoding is provided, UTF8 is used.
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Batch.UtilitiesInternal.EnumerateIfNeededAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Enumerates an enumerable asyncronously if required.  If the enumerable is of type IPagedCollection(T) then 
            ToListAsync is called on it.  Otherwise the enumerable is returned as is. 
            </summary>
        </member>
    </members>
</doc>
